<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="1/27/2023 11:43:18 AM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="TCG03267CDE"
  DTS:CreatorName="TCG\Harshad.Deshmukh"
  DTS:DTSID="{8A6B7E64-065E-4907-8832-173CEC12E9ED}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="15.0.2000.170"
  DTS:LocaleID="2057"
  DTS:ObjectName="Visa LK CISSEE"
  DTS:PackageType="5"
  DTS:VersionBuild="13"
  DTS:VersionGUID="{03A8FF84-91F4-45AD-A8EA-1380B1F6D721}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[DI-BILLING.OpsBilling]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{394A1823-FD15-487A-91A2-F3EF3B7817BB}"
      DTS:ObjectName="DI-BILLING.OpsBilling">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="1"
          DTS:ConnectRetryInterval="5"
          DTS:ConnectionString="Data Source=DI-BILLING;Initial Catalog=OpsBilling;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[PPass]"
      DTS:CreationName="OLEDB"
      DTS:DelayValidation="True"
      DTS:DTSID="{DE205D8A-DF9F-410E-A52B-2F655746C1BF}"
      DTS:ObjectName="PPass">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Retain="True"
          DTS:ConnectRetryCount="1"
          DTS:ConnectRetryInterval="5"
          DTS:ConnectionString="Data Source=10.204.200.67;User ID=OPSBI_ETL;Initial Catalog=PPass;Provider=SQLNCLI11.1;Persist Security Info=True;Auto Translate=False;">
          <DTS:Password
            DTS:Name="Password"
            Sensitive="1"
            Encrypted="1">AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAAtLA5LoNE9UyNE7hTNrO5nwAAAAAIAAAARABUAFMAAAADZgAAwAAAABAAAACLSBHpyTYDR+TP1YOTnqBIAAAAAASAAACgAAAAEAAAAHvYK3cbL0pZ7OucOPvc00IgAAAA6p9NollKY63Qre5g3gBKdXgG6GmI2+WxO56yogBB/roUAAAAJond/F4WSnNqJdpmcn+fN2g40gg</DTS:Password>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{E0D8A4ED-6D5D-44B6-9AB3-C5F93AF8B5A5}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="UPPER( @[$Project::strUseReportMonth])   == &quot;Y&quot; ?   (DT_DATE)(DT_DBDATE)DATEADD(&quot;D&quot;,-(DAY(DATEADD(&quot;M&quot;,1,@[$Project::dtReportMonth]))),DATEADD(&quot;M&quot;,1,@[$Project::dtReportMonth])): (DT_DATE)(DT_DBDATE)DATEADD(&quot;D&quot;,-(DAY(DATEADD(&quot;M&quot;,1,Dateadd(&quot;M&quot;,-1 ,getdate())))),DATEADD(&quot;M&quot;,1,Dateadd(&quot;M&quot;,-1 ,getdate())))"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="dtEndDate">
      <DTS:VariableValue
        DTS:DataType="7">1/31/2023</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{9693D5A0-0163-4086-B2A8-896A37E30C3C}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="UPPER( @[$Project::strUseReportMonth])   == &quot;Y&quot; ?   (DT_DATE)(DT_DBDATE)Dateadd(&quot;D&quot;,-1*Day( @[$Project::dtReportMonth] ) +1,    @[$Project::dtReportMonth]): (DT_DATE)(DT_DBDATE) Dateadd(&quot;D&quot;,-1*Day(Dateadd(&quot;M&quot;,-1 ,getdate())) +1  ,Dateadd(&quot;M&quot;,-1 ,getdate()))"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="dtReportMonth">
      <DTS:VariableValue
        DTS:DataType="7">1/1/2023</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{84961994-541A-437A-8118-FF41AB6E0279}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="UPPER( @[$Project::strUseReportMonth])   == &quot;Y&quot; ?   (DT_DATE)(DT_DBDATE)Dateadd(&quot;D&quot;,-1*Day( @[$Project::dtReportMonth] ) +1,    @[$Project::dtReportMonth]): (DT_DATE)(DT_DBDATE) Dateadd(&quot;D&quot;,-1*Day(Dateadd(&quot;M&quot;,-1 ,getdate())) +1  ,Dateadd(&quot;M&quot;,-1 ,getdate()))"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="dtStartDate">
      <DTS:VariableValue
        DTS:DataType="7">1/1/2023</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{291782A7-6152-4E3F-9D68-A59E40BEBBAB}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="objSourceCode">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{5D3A6B7B-9807-439D-8D49-E324EBCEF689}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;DECLARE @StartDate VARCHAR(10)=&quot;+ &quot;'&quot;+(DT_WSTR, 10) @[User::dtStartDate] +&quot;'&quot;+ &quot;&#xA;DECLARE @EndDate VARCHAR(10)=&quot;+ &quot;'&quot;+(DT_WSTR, 10) @[User::dtEndDate] +&quot;'&quot;+ &quot;&#xA;&#xA;&#xA;DECLARE @period CHAR(1)='&quot;+ @[$Project::TypeofRun] +&quot;'&#xA;&#xA;&#xA;DECLARE @var_startDate VARCHAR(10)&#xA;SET @var_startDate=CONVERT(CHAR(8),CONVERT(date,@StartDate,103),112)&#xA;DECLARE @var_endDate VARCHAR(10)&#xA;SET @var_endDate=CONVERT(CHAR(8),CONVERT(date,@EndDate,103),112) &#xA;&#xA;&#xA;IF(@period='W')&#xA;BEGIN&#xA;&#xA;&#x9;SET @var_startDate= CAST(CAST(DATEADD(wk, DATEDIFF(wk, 6, GETDATE()), 0) AS DATE) AS VARCHAR(10))&#xA;&#x9;SET @var_endDate= CAST(CAST(DATEADD(wk, DATEDIFF(wk, 6, GETDATE()), 6) AS DATE) AS VARCHAR(10))&#xA;&#xA;END&#xA;&#xA;IF OBJECT_ID('tempdb..##temptable') IS NOT NULL&#xA;&#x9;DROP TABLE ##temptable&#xA;&#xA;CREATE TABLE ##temptable (&#xA;&#x9;&#x9;source_code &#x9;&#x9;varchar(20),&#xA;&#x9;&#x9;consumer_no &#x9;&#x9;INT NOT NULL,&#xA;&#x9;&#x9;external_identifier BIGINT NULL,&#xA;&#x9;&#x9;membership_no &#x9;&#x9;BIGINT NULL,&#xA;&#x9;&#x9;purchase_no &#x9;&#x9;INT NOT NULL,&#xA;&#x9;&#x9;track_seq &#x9;&#x9;&#x9;INT NOT NULL,&#xA;&#x9;&#x9;title &#x9;&#x9;&#x9;&#x9;varchar(20),&#xA;&#x9;&#x9;forename &#x9;&#x9;&#x9;varchar(50),&#xA;&#x9;&#x9;surname &#x9;&#x9;&#x9;varchar(50),&#xA;&#x9;&#x9;fullname &#x9;&#x9;&#x9;varchar(120),&#xA;&#x9;&#x9;source_desc &#x9;&#x9;varchar(255),&#xA;&#x9;&#x9;product_version &#x9;varchar(20),&#xA;&#x9;&#x9;paid_to_date &#x9;&#x9;date,&#xA;&#x9;&#x9;subs_issue_date &#x9;date,&#xA;&#x9;&#x9;subs_status &#x9;&#x9;varchar(5),&#xA;&#x9;&#x9;track_start &#x9;&#x9;date,&#xA;&#x9;&#x9;track_guests &#x9;&#x9;INT,&#xA;&#x9;&#x9;track_from &#x9;&#x9;&#x9;varchar(20),&#xA;&#x9;&#x9;track_value &#x9;&#x9;FLOAT,&#xA;&#x9;&#x9;creation_date &#x9;&#x9;date,&#xA;&#x9;&#x9;lounge_name&#x9;&#x9;&#x9;varchar(100),&#xA;&#x9;&#x9;airport &#x9;&#x9;&#x9;varchar(100),&#xA;&#x9;&#x9;trans_ccard_number &#x9;varchar(100),&#xA;&#x9;&#x9;external_ref &#x9;&#x9;varchar(100),&#xA;&#x9;&#x9;track_batch &#x9;&#x9;INT,&#xA;&#x9;&#x9;old_system_ref &#x9;&#x9;varchar(100),&#xA;&#x9;&#x9;campaign_code &#x9;&#x9;varchar(100),&#xA;&#x9;&#x9;lounge_code&#x9;&#x9;&#x9;varchar(20),&#xA;&#x9;&#x9;city &#x9;&#x9;&#x9;&#x9;varchar(100),&#xA;&#x9;&#x9;country &#x9;&#x9;&#x9;&#x9;varchar(100),&#xA;&#x9;&#x9;vendor_tracking_code &#x9;varchar(100),&#xA;&#x9;&#x9;user_invitation_code &#x9;varchar(100),&#xA;&#x9;&#x9;remaining_mem_cli_count int,&#xA;&#x9;&#x9;remaining_mem_cli2_count int,&#xA;&#x9;&#x9;remaining_mem_pp_count &#x9;int,&#xA;&#x9;&#x9;remaining_gue_cli_count int,&#xA;&#x9;&#x9;remaining_gue_cli2_count int,&#xA;&#x9;&#x9;remaining_gue_pp_count &#x9;int,&#xA;&#x9;&#x9;remaining_mgu_cli_count int,&#xA;&#x9;&#x9;remaining_mgu_cli2_count int,&#xA;&#x9;&#x9;remaining_mgu_pp_count &#x9;int,&#xA;&#x9;&#x9;remaining_mgu_comp_count int,&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;experience_category &#x9;varchar(100),&#xA;&#x9;&#x9;experience_type &#x9;&#x9;varchar(100),&#xA;&#x9;&#x9;airport_terminal_name  varchar(100),&#xA;&#x9;&#x9;airport_terminal_type  varchar(100),&#xA;&#x9;&#x9;visit_type_id SMALLINT,&#xA;&#x9;&#x9;visit_type&#x9;INT,&#xA;&#x9;&#x9;ccard_type VARCHAR(100),&#xA;&#x9;&#x9;effective_date DATETIME2,&#xA;&#x9;&#x9;report_month date&#xA;&#xA;);&#xA;&#xA;&#xA;INSERT INTO ##temptable(&#x9;&#xA;&#x9;source_code,&#xA;&#x9;consumer_no,&#xA;&#x9;external_identifier,&#xA;&#x9;membership_no,&#xA;&#x9;purchase_no,&#xA;&#x9;track_seq,&#xA;&#x9;title,&#xA;&#x9;forename,&#xA;&#x9;surname,&#xA;&#x9;fullname,&#xA;&#x9;source_desc,&#xA;&#x9;product_version,&#xA;&#x9;paid_to_date,&#xA;&#x9;subs_issue_date,&#xA;&#x9;subs_status,&#xA;&#x9;track_start,&#xA;&#x9;track_guests,&#xA;&#x9;track_from,&#xA;&#x9;track_value,&#xA;&#x9;creation_date,&#xA;&#x9;lounge_name,&#xA;&#x9;airport,&#xA;&#x9;trans_ccard_number,&#xA;&#x9;external_ref,&#xA;&#x9;track_batch,&#xA;&#x9;old_system_ref,&#xA;&#x9;campaign_code,&#xA;&#x9;lounge_code,&#xA;&#x9;city,&#xA;&#x9;country,&#xA;&#x9;vendor_tracking_code,&#xA;&#x9;user_invitation_code,&#xA;&#x9;remaining_mem_cli_count,&#xA;&#x9;remaining_mem_cli2_count,&#xA;&#x9;remaining_mem_pp_count,&#xA;&#x9;remaining_gue_cli_count,&#xA;&#x9;remaining_gue_cli2_count,&#xA;&#x9;remaining_gue_pp_count,&#xA;&#x9;remaining_mgu_cli_count,&#xA;&#x9;remaining_mgu_cli2_count,&#xA;&#x9;remaining_mgu_pp_count,&#xA;&#x9;remaining_mgu_comp_count,&#xA;&#x9;&#xA;&#x9;experience_category,&#xA;&#x9;experience_type,&#xA;&#x9;airport_terminal_name,&#xA;&#x9;airport_terminal_type,&#xA;&#x9;visit_type_id,&#xA;&#x9;ccard_type, &#xA;&#x9;effective_date,&#xA;&#x9;report_month&#xA;&#xA;&#x9; )&#xA;SELECT&#x9;s.source_code,&#xA;&#x9;&#x9;c.consumer_no,&#xA;&#x9;&#x9;c.external_identifier,&#xA;&#x9;&#x9;c.membership_no,&#xA;&#x9;&#x9;p.purchase_no,&#xA;&#x9;&#x9;t.track_seq,&#xA;&#x9;&#x9;c.title,&#xA;&#x9;&#x9;c.forename,&#xA;&#x9;&#x9;c.surname,&#xA;&#x9;&#x9;LTRIM(RTRIM(REPLACE(REPLACE(REPLACE(c.forename + ' ' + c.surname,' ',' |'),'| ',''),'|',''))) AS fullname,&#xA;&#x9;&#x9;s.source_desc,&#xA;&#x9;&#x9;p.product_version,&#xA;&#x9;&#x9;p.paid_to_date,&#xA;&#x9;&#x9;p.subs_issue_date,&#xA;&#x9;&#x9;p.subs_status,&#xA;&#x9;&#x9;t.track_start,&#xA;&#x9;&#x9;t.track_guests,&#xA;&#x9;&#x9;t.track_from,&#xA;&#x9;&#x9;t.track_value,&#xA;&#x9;&#x9;t.creation_date,&#xA;&#x9;&#x9;l.lounge_name,&#xA;&#x9;&#x9;a.pp_short_name AS airport,&#xA;&#x9;&#x9;p.trans_ccard_number,&#xA;&#x9;&#x9;t.external_ref,&#xA;&#x9;&#x9;t.track_batch,&#xA;&#x9;&#x9;p.old_system_ref,&#xA;&#x9;&#x9;s.campaign_code,&#xA;&#x9;&#x9;l.lounge_code,&#xA;&#x9;&#x9;a.airport_city AS city,&#xA;&#x9;&#x9;cou.code_desc AS country,&#xA;&#x9;&#x9;siv.vendor_tracking_code,&#xA;&#x9;&#x9;siv.user_invitation_code,&#xA;&#x9;&#x9;0 AS remaining_mem_cli_count,&#xA;&#x9;&#x9;0 AS remaining_mem_cli2_count,&#xA; &#x9;&#x9;0 AS remaining_mem_pp_count,&#xA; &#x9;&#x9;0 AS remaining_gue_cli_count,&#xA; &#x9;&#x9;0 AS remaining_gue_cli2_count,&#xA; &#x9;&#x9;0 AS remaining_gue_pp_count,&#xA; &#x9;&#x9;0 AS remaining_mgu_cli_count,&#xA; &#x9;&#x9;0 AS remaining_mgu_cli2_count,&#xA; &#x9;&#x9;0 AS remaining_mgu_pp_count,&#xA; &#x9;&#x9;0 AS remaining_mgu_comp_count,&#xA; &#x9;&#x9;&#xA;&#x9;&#x9;'Lounge' as experience_category,&#xA;&#x9;&#x9;'Lounge' as experience_type,&#xA;&#x9;&#x9;ate.terminal_name as airport_terminal_name,&#xA;&#x9;&#x9;CASE&#xA;&#x9;&#x9;&#x9;WHEN l.lounge_type = 'I' THEN 'I'&#xA;&#x9;&#x9;&#x9;WHEN l.lounge_type = 'D' THEN 'D'&#xA;&#x9;&#x9;&#x9;ELSE 'U'&#xA;&#x9;&#x9;  END&#x9;as airport_terminal_type,&#xA;&#x9;&#x9;t.visit_type_id,&#xA;&#x9;&#x9;p.ccard_type,&#xA;&#x9;&#x9;p.effective_date,&#xA;&#x9;&#x9;CAST(DATEADD(MONTH, DATEDIFF(MONTH, 0, t.[creation_date]), 0) AS DATE)      AS &#x9;report_month&#xA;&#xA;--INTO ##temptable&#xA;FROM&#xA;&#x9;&#x9;PPass.dbo.source_deal_config AS sdc WITH (NOLOCK)&#xA;&#x9;&#x9;INNER JOIN PPass.dbo.source AS s WITH (NOLOCK) ON sdc.source_code = s.source_code&#xA;&#x9;&#x9;INNER JOIN PPass.dbo.source_subscription AS ss WITH (NOLOCK) ON sdc.source_deal_config_id = ss.source_deal_config_id&#xA;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_subscription_link AS psl WITH (NOLOCK) ON ss.source_subscription_id = psl.source_subscription_id&#xA;&#x9;&#x9;INNER JOIN PPass.dbo.purchase AS p WITH (NOLOCK) ON psl.purchase_no = p.purchase_no&#xA;&#x9;&#x9;INNER JOIN PPass.dbo.consumer AS c WITH (NOLOCK) ON p.consumer_no = c.consumer_no&#xA;&#x9;&#x9;INNER JOIN PPass.dbo.tracking AS t WITH (NOLOCK) ON p.purchase_no = t.purchase_no&#xA;&#x9;&#x9;INNER JOIN PPass.dbo.lounge AS l WITH (NOLOCK) ON l.lounge_code = t.track_from&#xA;&#x9;&#x9;INNER JOIN PPass.dbo.airport AS a WITH (NOLOCK) ON a.iso_airport_code = l.airport&#xA;&#x9;&#x9;LEFT OUTER JOIN PPass.dbo.airport_terminal AS ate WITH (NOLOCK) ON l.airport_terminal_id = ate.airport_terminal_id&#xA;&#x9;&#x9;LEFT OUTER JOIN PPass.dbo.code AS COU  WITH (NOLOCK) ON COU.code = l.country_code AND COU.codetype = 'CTRY'&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;LEFT OUTER JOIN PPass.dbo.source_invitation_validation siv WITH (NOLOCK) ON siv.consumer_no = c.consumer_no&#xA;&#x9;WHERE&#xA;t.creation_date &gt;= @var_startDate AND t.creation_date &lt; DATEADD(d,1,@var_endDate)&#xA; AND t.track_status &lt;&gt; 'NA' &#xA;AND p.isDeleted = 0 &#xA;AND s.source_code in ( &quot;+@[User::strSourceCode] +&quot; )&#xA;--AND (p.consumer_no='1427229223' or c.membership_no='1427229223')&#xA;/* Load in the reedemed offers data */&#xA;&#xA;INSERT INTO ##temptable (&#x9;&#xA;&#x9;source_code,&#xA;&#x9;consumer_no,&#xA;&#x9;external_identifier,&#xA;&#x9;membership_no,&#xA;&#x9;purchase_no,&#xA;&#x9;track_seq,&#xA;&#x9;title,&#xA;&#x9;forename,&#xA;&#x9;surname,&#xA;&#x9;fullname,&#xA;&#x9;source_desc,&#xA;&#x9;product_version,&#xA;&#x9;paid_to_date,&#xA;&#x9;subs_issue_date,&#xA;&#x9;subs_status,&#xA;&#x9;track_start,&#xA;&#x9;track_guests,&#xA;&#x9;track_from,&#xA;&#x9;track_value,&#xA;&#x9;creation_date,&#xA;&#x9;lounge_name,&#xA;&#x9;airport,&#xA;&#x9;trans_ccard_number,&#xA;&#x9;external_ref,&#xA;&#x9;track_batch,&#xA;&#x9;old_system_ref,&#xA;&#x9;campaign_code,&#xA;&#x9;lounge_code,&#xA;&#x9;city,&#xA;&#x9;country,&#xA;&#x9;vendor_tracking_code,&#xA;&#x9;user_invitation_code,&#xA;&#x9;remaining_mem_cli_count,&#xA;&#x9;remaining_mem_cli2_count,&#xA;&#x9;remaining_mem_pp_count,&#xA;&#x9;remaining_gue_cli_count,&#xA;&#x9;remaining_gue_cli2_count,&#xA;&#x9;remaining_gue_pp_count,&#xA;&#x9;remaining_mgu_cli_count,&#xA;&#x9;remaining_mgu_cli2_count,&#xA;&#x9;remaining_mgu_pp_count,&#xA;&#x9;remaining_mgu_comp_count,&#xA;&#x9;experience_category,&#xA;&#x9;experience_type,&#xA;&#x9;airport_terminal_name,&#xA;&#x9;airport_terminal_type,&#xA;&#x9;visit_type_id,&#xA;&#x9;report_month&#xA;&#xA;&#x9; )&#xA;SELECT&#xA;&#x9;s.source_code,&#xA;&#x9;c.consumer_no,&#xA;&#x9;c.external_identifier,&#xA;&#x9;c.membership_no,&#xA;&#x9;p.purchase_no,&#xA;&#x9;t.track_seq,&#xA;&#x9;c.title,&#xA;&#x9;c.forename,&#xA;&#x9;c.surname,&#xA;&#x9;LTRIM(RTRIM(REPLACE(REPLACE(REPLACE(c.forename + ' ' + c.surname,' ',' |'),'| ',''),'|',''))) AS fullname,&#xA;&#x9;s.source_desc,&#xA;&#x9;p.product_version,&#xA;&#x9;p.paid_to_date,&#xA;&#x9;p.subs_issue_date,&#xA;&#x9;p.subs_status,&#xA;&#x9;t.track_start,&#xA;&#x9;t.track_guests,&#xA;&#x9;t.track_from,&#xA;&#x9;t.track_value,&#xA;&#x9;t.creation_date,&#xA;&#x9;ord.outlet_name as lounge_name,&#xA;&#x9;a.pp_short_name AS airport,&#xA;&#x9;p.trans_ccard_number,&#xA;&#x9;t.external_ref,&#xA;&#x9;t.track_batch,&#xA;&#x9;p.old_system_ref,&#xA;&#x9;s.campaign_code,&#xA;&#x9;t.track_from as lounge_code,&#xA;&#x9;a.airport_city AS city,&#xA;&#x9;cou.code_desc AS country,&#xA;&#x9;siv.vendor_tracking_code,&#xA;&#x9;siv.user_invitation_code,&#xA;&#x9;0 AS remaining_mem_cli_count , &#xA;&#x9;0 AS remaining_mem_cli2_count , &#xA;&#x9;0 AS remaining_mem_pp_count , &#xA;&#x9;0 AS remaining_gue_cli_count , &#xA;&#x9;0 AS remaining_gue_cli2_count , &#xA;&#x9;0 AS remaining_gue_pp_count , &#xA;&#x9;0 AS remaining_mgu_cli_count , &#xA;&#x9;0 AS remaining_mgu_cli2_count , &#xA;&#x9;0 AS remaining_mgu_pp_count , &#xA;&#x9;0 AS remaining_mgu_comp_count,&#xA;&#x9;&#xA;&#x9;ord.offer_category as experience_category,&#xA;&#x9;&#x9;ord.offer_type as experience_type,&#xA;&#x9;ISNULL(ate.terminal_name, 'Unknown' ) as airport_terminal_name,&#xA;&#x9;'U' as airport_terminal_type,&#xA;&#x9;t.visit_type_id,&#xA;&#x9;CAST(DATEADD(MONTH, DATEDIFF(MONTH, 0, t.[creation_date]), 0) AS DATE)      AS &#x9;report_month&#xA;FROM&#xA;&#x9;PPass.dbo.source_deal_config AS sdc WITH (NOLOCK)&#xA;&#x9;INNER JOIN PPass.dbo.source AS s WITH (NOLOCK) ON sdc.source_code = s.source_code&#xA;&#x9;INNER JOIN PPass.dbo.source_subscription AS ss WITH (NOLOCK) ON sdc.source_deal_config_id = ss.source_deal_config_id&#xA;&#x9;INNER JOIN PPass.dbo.purchase_subscription_link AS psl WITH (NOLOCK) ON ss.source_subscription_id = psl.source_subscription_id&#xA;&#x9;INNER JOIN PPass.dbo.purchase AS p WITH (NOLOCK) ON psl.purchase_no = p.purchase_no&#xA;&#x9;INNER JOIN PPass.dbo.consumer AS c WITH (NOLOCK) ON p.consumer_no = c.consumer_no&#xA;&#x9;INNER JOIN PPass.dbo.tracking AS t WITH (NOLOCK) ON p.purchase_no = t.purchase_no&#xA;&#x9;INNER JOIN PPass.dbo.offer_redemption_details AS ord WITH (NOLOCK) ON ord.consumer_no = c.consumer_no AND ord.track_seq = t.track_seq&#xA;&#x9;INNER JOIN PPass.dbo.airport AS a WITH (NOLOCK) ON a.iso_airport_code = ord.airport_iso_code&#xA;&#x9;LEFT JOIN PPass.dbo.outlet_airport_terminal AS oat WITH (NOLOCK) ON ord.outlet_id = oat.outlet_id&#xA;&#x9;LEFT JOIN PPass.dbo.airport_terminal AS ate WITH (NOLOCK) ON oat.airport_terminal_id = ate.airport_terminal_id&#xA;&#x9;LEFT OUTER JOIN PPass.dbo.code AS COU WITH (NOLOCK) ON cou.alpha_1 = a.iso_country_code&#xA;&#x9;&#x9;AND cou.codetype = 'CTRY2'&#xA;&#x9;&#x9;AND cou.alpha_5 &lt;&gt; ''&#xA;&#x9;LEFT OUTER JOIN PPass.dbo.source_invitation_validation siv WITH (NOLOCK) ON siv.consumer_no = c.consumer_no&#xA;&#x9;&#xA;WHERE&#xA;t.creation_date &gt;= @var_startDate AND t.creation_date &lt; DATEADD(d,1,@var_endDate)&#xA; AND t.track_status &lt;&gt; 'NA' &#xA;AND p.isDeleted = 0 &#xA;AND s.source_code in (&quot;+@[User::strSourceCode] +&quot;)&#xA;--AND (p.consumer_no='1427229223' or c.membership_no='1427229223')&#xA;/* update the temp table with an index */&#xA;--ALTER TABLE ##temptable &#xA;--ADD CONSTRAINT PK_##temptable &#xA;--PRIMARY KEY NONCLUSTERED (purchase_no, track_seq)&#xA;--&#x9;&#x9;&#x9;CREATE NONCLUSTERED INDEX ##temptable_idx1 ON ##temptable (source_code, consumer_no, fullname, track_start, lounge_name, external_ref) &#xA;--&#x9;&#x9;&#x9;WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, FILLFACTOR = 100) ON [PRIMARY]&#xA;&#xA;--Select * from ##temptable&#xA;&#xA;&#x9;&#x9;/*  MEM PPAYVISIT  */&#xA;&#x9;&#x9;;WITH used_visit_allocations AS (&#xA;            &#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;COUNT(1) AS used_visit_count,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pvah2.purchase_visit_allocation_id&#xA;&#x9;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;PPass.dbo.purchase_visit_allocation_his AS pvah2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation pva2 ON pvah2.purchase_visit_allocation_id = pva2.purchase_visit_allocation_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation_link pval2 ON pva2.purchase_visit_allocation_grp_id = pval2.purchase_visit_allocation_grp_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;LEFT OUTER JOIN PPass.dbo.source_visit_allocation_mem_gue_link salg ON pva2.source_visit_allocation_id = salg.guest_source_visit_allocation_id&#xA;&#x9;&#x9;&#x9;&#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;EXISTS (&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;##temptable temp2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;temp2.purchase_no = pval2.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pvah2.isdeleted = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva2.visitor_type_id = 1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND salg.guest_source_visit_allocation_id is NULL&#xA;&#x9;&#x9;&#x9;&#x9;GROUP BY&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pvah2.purchase_visit_allocation_id&#xA;&#x9;&#x9;&#x9;),&#xA;&#x9;&#x9;&#x9;derived_visit_allocation AS (&#xA;           &#xA;&#x9;&#x9;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pva.visit_count_from,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pva.visit_count_to,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pva.visit_validity_type_id,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;CASE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN pva.visit_count_to = 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN pva.visit_count_from = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN&#x9;(pva.visit_count_to - pva.visit_count_from)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE (pva.visit_count_to - pva.visit_count_from) + 1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;END AS allocated_visit_count,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ISNULL(used_visit_allocations.used_visit_count, 0) AS used_visit_count,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pur.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;PPass.dbo.purchase pur&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation_link pval ON pval.purchase_no = pur.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation_grp pvag ON pvag.purchase_visit_allocation_grp_id = pval.purchase_visit_allocation_grp_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation pva ON pva.purchase_visit_allocation_grp_id = pvag.purchase_visit_allocation_grp_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.charge_owner_id = 21&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.visitor_type_id = 1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.visit_allocation_type_id NOT IN (3,4)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pur.isDeleted = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;LEFT JOIN used_visit_allocations ON pva.purchase_visit_allocation_id = used_visit_allocations.purchase_visit_allocation_id&#xA;               &#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(&#x9;pva.valid_from &lt;= getdate()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.valid_to &gt;= getdate()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;OR pva.visit_validity_type_id = 2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;),&#xA;&#x9;&#x9;&#x9;calculated_visit_allocation AS&#xA;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;CASE WHEN derived_visit_allocation.visit_count_to = 9999 THEN&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CASE WHEN derived_visit_allocation.visit_validity_type_id = 2 THEN&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CASE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN derived_visit_allocation.visit_count_to = 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN derived_visit_allocation.visit_count_from = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN&#x9;(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from) + 1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(derived_visit_allocation.allocated_visit_count - derived_visit_allocation.used_visit_count)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;END AS visit_number,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;derived_visit_allocation.used_visit_count AS used_visit_number,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;derived_visit_allocation.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;FROM derived_visit_allocation&#xA;&#x9;&#x9;&#x9;)&#xA;&#xA;&#x9;&#x9;&#x9;UPDATE&#xA;&#x9;&#x9;&#x9;&#x9;##temptable&#xA;&#x9;&#x9;&#x9;SET&#xA;&#x9;&#x9;&#x9;&#x9;remaining_MEM_PP_count = calculated_visit_allocation.visit_number&#xA;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;##temptable&#xA;&#x9;&#x9;&#x9;&#x9;INNER JOIN calculated_visit_allocation ON ##temptable.purchase_no = calculated_visit_allocation.purchase_no;&#xA;&#xA;&#x9;/* MEM CPAYVISIT */&#xA;&#x9;&#x9;;WITH used_visit_allocations AS (&#xA;            &#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;COUNT(1) AS used_visit_count,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pvah2.purchase_visit_allocation_id&#xA;&#x9;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;PPass.dbo.purchase_visit_allocation_his AS pvah2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation pva2 ON pvah2.purchase_visit_allocation_id = pva2.purchase_visit_allocation_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation_link pval2 ON pva2.purchase_visit_allocation_grp_id = pval2.purchase_visit_allocation_grp_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;LEFT OUTER JOIN PPass.dbo.source_visit_allocation_mem_gue_link salg ON pva2.source_visit_allocation_id = salg.guest_source_visit_allocation_id&#xA;&#x9;&#x9;&#x9;&#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;EXISTS (&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;##temptable temp2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;temp2.purchase_no = pval2.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pvah2.isdeleted = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva2.visitor_type_id = 1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND salg.guest_source_visit_allocation_id is NULL&#xA;&#x9;&#x9;&#x9;&#x9;GROUP BY&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pvah2.purchase_visit_allocation_id&#xA;&#x9;&#x9;&#x9;),&#xA;&#x9;&#x9;&#x9;derived_visit_allocation AS (&#xA;&#x9;&#x9;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pva.visit_count_from,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pva.visit_count_to,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pva.visit_validity_type_id,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;CASE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN pva.visit_count_to = 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN pva.visit_count_from = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN&#x9;(pva.visit_count_to - pva.visit_count_from)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE (pva.visit_count_to - pva.visit_count_from) + 1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;END AS allocated_visit_count,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ISNULL(used_visit_allocations.used_visit_count, 0) AS used_visit_count,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pur.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;PPass.dbo.purchase pur&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation_link pval ON pval.purchase_no = pur.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation_grp pvag ON pvag.purchase_visit_allocation_grp_id = pval.purchase_visit_allocation_grp_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation pva ON pva.purchase_visit_allocation_grp_id = pvag.purchase_visit_allocation_grp_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.charge_owner_id = 22&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.visitor_type_id = 1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.visit_allocation_type_id NOT IN (3,4)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pur.isDeleted = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;LEFT JOIN used_visit_allocations ON pva.purchase_visit_allocation_id = used_visit_allocations.purchase_visit_allocation_id&#xA;               &#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(&#x9;pva.valid_from &lt;= getdate()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.valid_to &gt;= getdate()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;OR pva.visit_validity_type_id = 2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;),&#xA;&#x9;&#x9;&#x9;calculated_visit_allocation AS&#xA;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;CASE WHEN derived_visit_allocation.visit_count_to = 9999 THEN&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CASE WHEN derived_visit_allocation.visit_validity_type_id = 2 THEN&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CASE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN derived_visit_allocation.visit_count_to = 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN derived_visit_allocation.visit_count_from = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN&#x9;(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from) + 1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(derived_visit_allocation.allocated_visit_count - derived_visit_allocation.used_visit_count)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;END AS visit_number,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;derived_visit_allocation.used_visit_count AS used_visit_number,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;derived_visit_allocation.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;FROM derived_visit_allocation&#xA;&#x9;&#x9;&#x9;)&#xA;&#xA;&#x9;&#x9;&#x9;UPDATE&#xA;&#x9;&#x9;&#x9;&#x9;##temptable&#xA;&#x9;&#x9;&#x9;SET&#xA;&#x9;&#x9;&#x9;&#x9;remaining_MEM_CLI_count = calculated_visit_allocation.visit_number&#xA;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;##temptable ##temptable&#xA;&#x9;&#x9;&#x9;&#x9;INNER JOIN calculated_visit_allocation ON ##temptable.purchase_no = calculated_visit_allocation.purchase_no;&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;/* MEM CPAYVISIT2 */&#xA;&#x9;&#x9;;WITH used_visit_allocations AS (&#xA;            &#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;COUNT(1) AS used_visit_count,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pvah2.purchase_visit_allocation_id&#xA;&#x9;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;PPass.dbo.purchase_visit_allocation_his AS pvah2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation pva2 ON pvah2.purchase_visit_allocation_id = pva2.purchase_visit_allocation_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation_link pval2 ON pva2.purchase_visit_allocation_grp_id = pval2.purchase_visit_allocation_grp_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;LEFT OUTER JOIN PPass.dbo.source_visit_allocation_mem_gue_link salg ON pva2.source_visit_allocation_id = salg.guest_source_visit_allocation_id&#xA;&#x9;&#x9;&#x9;&#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;EXISTS (&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;##temptable temp2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;temp2.purchase_no = pval2.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pvah2.isdeleted = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva2.visitor_type_id = 1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND salg.guest_source_visit_allocation_id is NULL&#xA;&#x9;&#x9;&#x9;&#x9;GROUP BY&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pvah2.purchase_visit_allocation_id&#xA;&#x9;&#x9;&#x9;),&#xA;&#x9;&#x9;&#x9;derived_visit_allocation AS (&#xA;&#x9;&#x9;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pva.visit_count_from,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pva.visit_count_to,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pva.visit_validity_type_id,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;CASE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN pva.visit_count_to = 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN pva.visit_count_from = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN&#x9;(pva.visit_count_to - pva.visit_count_from)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE (pva.visit_count_to - pva.visit_count_from) + 1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;END AS allocated_visit_count,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ISNULL(used_visit_allocations.used_visit_count, 0) AS used_visit_count,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pur.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;PPass.dbo.purchase pur&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation_link pval ON pval.purchase_no = pur.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation_grp pvag ON pvag.purchase_visit_allocation_grp_id = pval.purchase_visit_allocation_grp_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation pva ON pva.purchase_visit_allocation_grp_id = pvag.purchase_visit_allocation_grp_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.charge_owner_id = 25&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.visitor_type_id = 1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.visit_allocation_type_id NOT IN (3,4)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pur.isDeleted = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;LEFT JOIN used_visit_allocations ON pva.purchase_visit_allocation_id = used_visit_allocations.purchase_visit_allocation_id&#xA;               &#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(&#x9;pva.valid_from &lt;= getdate()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.valid_to &gt;= getdate()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;OR pva.visit_validity_type_id = 2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;),&#xA;&#x9;&#x9;&#x9;calculated_visit_allocation AS&#xA;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;CASE WHEN derived_visit_allocation.visit_count_to = 9999 THEN&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CASE WHEN derived_visit_allocation.visit_validity_type_id = 2 THEN&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CASE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN derived_visit_allocation.visit_count_to = 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN derived_visit_allocation.visit_count_from = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN&#x9;(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from) + 1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(derived_visit_allocation.allocated_visit_count - derived_visit_allocation.used_visit_count)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;END AS visit_number,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;derived_visit_allocation.used_visit_count AS used_visit_number,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;derived_visit_allocation.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;FROM derived_visit_allocation&#xA;&#x9;&#x9;&#x9;)&#xA;&#xA;&#x9;&#x9;&#x9;UPDATE&#xA;&#x9;&#x9;&#x9;&#x9;##temptable&#xA;&#x9;&#x9;&#x9;SET&#xA;&#x9;&#x9;&#x9;&#x9;remaining_MEM_CLI2_count = calculated_visit_allocation.visit_number&#xA;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;##temptable&#xA;&#x9;&#x9;&#x9;&#x9;INNER JOIN calculated_visit_allocation ON ##temptable.purchase_no = calculated_visit_allocation.purchase_no&#xA;&#xA;/* GUE PPAYVISIT */&#xA;&#x9;&#x9;;WITH used_visit_allocations AS (&#xA;            &#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;COUNT(1) AS used_visit_count,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pvah2.purchase_visit_allocation_id&#xA;&#x9;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;PPass.dbo.purchase_visit_allocation_his AS pvah2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation pva2 ON pvah2.purchase_visit_allocation_id = pva2.purchase_visit_allocation_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation_link pval2 ON pva2.purchase_visit_allocation_grp_id = pval2.purchase_visit_allocation_grp_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;LEFT OUTER JOIN PPass.dbo.source_visit_allocation_mem_gue_link salg ON pva2.source_visit_allocation_id = salg.guest_source_visit_allocation_id&#xA;&#x9;&#x9;&#x9;&#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;EXISTS (&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;##temptable temp2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;temp2.purchase_no = pval2.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pvah2.isdeleted = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva2.visitor_type_id = 2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND salg.guest_source_visit_allocation_id is NULL&#xA;&#x9;&#x9;&#x9;&#x9;GROUP BY&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pvah2.purchase_visit_allocation_id&#xA;&#x9;&#x9;&#x9;),&#xA;&#x9;&#x9;&#x9;derived_visit_allocation AS (&#xA;&#x9;&#x9;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pva.visit_count_from,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pva.visit_count_to,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pva.visit_validity_type_id,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;CASE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN pva.visit_count_to = 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN pva.visit_count_from = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN&#x9;(pva.visit_count_to - pva.visit_count_from)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE (pva.visit_count_to - pva.visit_count_from) + 1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;END AS allocated_visit_count,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ISNULL(used_visit_allocations.used_visit_count, 0) AS used_visit_count,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pur.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;PPass.dbo.purchase pur&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation_link pval ON pval.purchase_no = pur.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation_grp pvag ON pvag.purchase_visit_allocation_grp_id = pval.purchase_visit_allocation_grp_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation pva ON pva.purchase_visit_allocation_grp_id = pvag.purchase_visit_allocation_grp_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.charge_owner_id = 21&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.visitor_type_id = 2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.visit_allocation_type_id NOT IN (3,4)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pur.isDeleted = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;LEFT JOIN used_visit_allocations ON pva.purchase_visit_allocation_id = used_visit_allocations.purchase_visit_allocation_id&#xA;               &#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(&#x9;pva.valid_from &lt;= getdate()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.valid_to &gt;= getdate()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;OR pva.visit_validity_type_id = 2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;),&#xA;&#x9;&#x9;&#x9;calculated_visit_allocation AS&#xA;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;CASE WHEN derived_visit_allocation.visit_count_to = 9999 THEN&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CASE WHEN derived_visit_allocation.visit_validity_type_id = 2 THEN&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CASE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN derived_visit_allocation.visit_count_to = 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN derived_visit_allocation.visit_count_from = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN&#x9;(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from) + 1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(derived_visit_allocation.allocated_visit_count - derived_visit_allocation.used_visit_count)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;END AS visit_number,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;derived_visit_allocation.used_visit_count AS used_visit_number,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;derived_visit_allocation.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;FROM derived_visit_allocation&#xA;&#x9;&#x9;&#x9;)&#xA;&#xA;&#x9;&#x9;&#x9;UPDATE&#xA;&#x9;&#x9;&#x9;&#x9;##temptable&#xA;&#x9;&#x9;&#x9;SET&#xA;&#x9;&#x9;&#x9;&#x9;remaining_GUE_PP_count = calculated_visit_allocation.visit_number&#xA;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;##temptable&#xA;&#x9;&#x9;&#x9;&#x9;INNER JOIN calculated_visit_allocation ON ##temptable.purchase_no = calculated_visit_allocation.purchase_no&#xA;&#xA;/* GUE CPAYLIST */&#xA;&#x9;&#x9;;WITH used_visit_allocations AS (&#xA;            &#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;COUNT(1) AS used_visit_count,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pvah2.purchase_visit_allocation_id&#xA;&#x9;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;PPass.dbo.purchase_visit_allocation_his AS pvah2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation pva2 ON pvah2.purchase_visit_allocation_id = pva2.purchase_visit_allocation_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation_link pval2 ON pva2.purchase_visit_allocation_grp_id = pval2.purchase_visit_allocation_grp_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;LEFT OUTER JOIN PPass.dbo.source_visit_allocation_mem_gue_link salg ON pva2.source_visit_allocation_id = salg.guest_source_visit_allocation_id&#xA;&#x9;&#x9;&#x9;&#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;EXISTS (&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;##temptable temp2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;temp2.purchase_no = pval2.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pvah2.isdeleted = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva2.visitor_type_id = 2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND salg.guest_source_visit_allocation_id is NULL&#xA;&#x9;&#x9;&#x9;&#x9;GROUP BY&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pvah2.purchase_visit_allocation_id&#xA;&#x9;&#x9;&#x9;),&#xA;&#x9;&#x9;&#x9;derived_visit_allocation AS (&#xA;&#x9;&#x9;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pva.visit_count_from,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pva.visit_count_to,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pva.visit_validity_type_id,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;CASE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN pva.visit_count_to = 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN pva.visit_count_from = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN&#x9;(pva.visit_count_to - pva.visit_count_from)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE (pva.visit_count_to - pva.visit_count_from) + 1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;END AS allocated_visit_count,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ISNULL(used_visit_allocations.used_visit_count, 0) AS used_visit_count,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pur.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;PPass.dbo.purchase pur&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation_link pval ON pval.purchase_no = pur.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation_grp pvag ON pvag.purchase_visit_allocation_grp_id = pval.purchase_visit_allocation_grp_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation pva ON pva.purchase_visit_allocation_grp_id = pvag.purchase_visit_allocation_grp_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.charge_owner_id = 22&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.visitor_type_id = 2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.visit_allocation_type_id NOT IN (3,4)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pur.isDeleted = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;LEFT JOIN used_visit_allocations ON pva.purchase_visit_allocation_id = used_visit_allocations.purchase_visit_allocation_id&#xA;               &#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(&#x9;pva.valid_from &lt;= getdate()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.valid_to &gt;= getdate()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;OR pva.visit_validity_type_id = 2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;),&#xA;&#x9;&#x9;&#x9;calculated_visit_allocation AS&#xA;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;CASE WHEN derived_visit_allocation.visit_count_to = 9999 THEN&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CASE WHEN derived_visit_allocation.visit_validity_type_id = 2 THEN&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CASE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN derived_visit_allocation.visit_count_to = 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN derived_visit_allocation.visit_count_from = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN&#x9;(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from) + 1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(derived_visit_allocation.allocated_visit_count - derived_visit_allocation.used_visit_count)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;END AS visit_number,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;derived_visit_allocation.used_visit_count AS used_visit_number,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;derived_visit_allocation.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;FROM derived_visit_allocation&#xA;&#x9;&#x9;&#x9;)&#xA;&#xA;&#x9;&#x9;&#x9;UPDATE&#xA;&#x9;&#x9;&#x9;&#x9;##temptable&#xA;&#x9;&#x9;&#x9;SET&#xA;&#x9;&#x9;&#x9;&#x9;remaining_GUE_CLI_count = calculated_visit_allocation.visit_number&#xA;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;##temptable&#xA;&#x9;&#x9;&#x9;&#x9;INNER JOIN calculated_visit_allocation ON ##temptable.purchase_no = calculated_visit_allocation.purchase_no&#xA;&#xA;/* GUE CPAYVISIT2 */&#xA;&#x9;&#x9;;WITH used_visit_allocations AS (&#xA;            &#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;COUNT(1) AS used_visit_count,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pvah2.purchase_visit_allocation_id&#xA;&#x9;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;PPass.dbo.purchase_visit_allocation_his AS pvah2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation pva2 ON pvah2.purchase_visit_allocation_id = pva2.purchase_visit_allocation_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation_link pval2 ON pva2.purchase_visit_allocation_grp_id = pval2.purchase_visit_allocation_grp_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;LEFT OUTER JOIN PPass.dbo.source_visit_allocation_mem_gue_link salg ON pva2.source_visit_allocation_id = salg.guest_source_visit_allocation_id&#xA;&#x9;&#x9;&#x9;&#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;EXISTS (&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;##temptable temp2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;temp2.purchase_no = pval2.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pvah2.isdeleted = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva2.visitor_type_id = 2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND salg.guest_source_visit_allocation_id is NULL&#xA;&#x9;&#x9;&#x9;&#x9;GROUP BY&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pvah2.purchase_visit_allocation_id&#xA;&#x9;&#x9;&#x9;),&#xA;&#x9;&#x9;&#x9;derived_visit_allocation AS (&#xA;&#x9;&#x9;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pva.visit_count_from,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pva.visit_count_to,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pva.visit_validity_type_id,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;CASE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN pva.visit_count_to = 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN pva.visit_count_from = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN&#x9;(pva.visit_count_to - pva.visit_count_from)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE (pva.visit_count_to - pva.visit_count_from) + 1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;END AS allocated_visit_count,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ISNULL(used_visit_allocations.used_visit_count, 0) AS used_visit_count,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pur.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;PPass.dbo.purchase pur&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation_link pval ON pval.purchase_no = pur.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation_grp pvag ON pvag.purchase_visit_allocation_grp_id = pval.purchase_visit_allocation_grp_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation pva ON pva.purchase_visit_allocation_grp_id = pvag.purchase_visit_allocation_grp_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.charge_owner_id = 25&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.visitor_type_id = 2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.visit_allocation_type_id NOT IN (3,4)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pur.isDeleted = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;LEFT JOIN used_visit_allocations ON pva.purchase_visit_allocation_id = used_visit_allocations.purchase_visit_allocation_id&#xA;               &#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(&#x9;pva.valid_from &lt;= getdate()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.valid_to &gt;= getdate()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;OR pva.visit_validity_type_id = 2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;),&#xA;&#x9;&#x9;&#x9;calculated_visit_allocation AS&#xA;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;CASE WHEN derived_visit_allocation.visit_count_to = 9999 THEN&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CASE WHEN derived_visit_allocation.visit_validity_type_id = 2 THEN&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CASE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN derived_visit_allocation.visit_count_to = 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN derived_visit_allocation.visit_count_from = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN&#x9;(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from) + 1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(derived_visit_allocation.allocated_visit_count - derived_visit_allocation.used_visit_count)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;END AS visit_number,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;derived_visit_allocation.used_visit_count AS used_visit_number,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;derived_visit_allocation.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;FROM derived_visit_allocation&#xA;&#x9;&#x9;&#x9;)&#xA;&#xA;&#x9;&#x9;&#x9;UPDATE&#xA;&#x9;&#x9;&#x9;&#x9;##temptable&#xA;&#x9;&#x9;&#x9;SET&#xA;&#x9;&#x9;&#x9;&#x9;remaining_GUE_CLI2_count = calculated_visit_allocation.visit_number&#xA;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;##temptable&#xA;&#x9;&#x9;&#x9;&#x9;INNER JOIN calculated_visit_allocation ON ##temptable.purchase_no = calculated_visit_allocation.purchase_no&#xA;&#xA;/*MGU PPAYVISIT */&#xA;&#x9;&#x9;;WITH used_visit_allocations AS (&#xA;            &#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;COUNT(1) AS used_visit_count,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pvah2.purchase_visit_allocation_id&#xA;&#x9;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;PPass.dbo.purchase_visit_allocation_his AS pvah2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation pva2 ON pvah2.purchase_visit_allocation_id = pva2.purchase_visit_allocation_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation_link pval2 ON pva2.purchase_visit_allocation_grp_id = pval2.purchase_visit_allocation_grp_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;LEFT OUTER JOIN PPass.dbo.source_visit_allocation_mem_gue_link salg ON pva2.source_visit_allocation_id = salg.guest_source_visit_allocation_id&#xA;&#x9;&#x9;&#x9;&#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;EXISTS (&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;##temptable temp2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;temp2.purchase_no = pval2.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pvah2.isdeleted = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva2.visitor_type_id = 3&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND salg.guest_source_visit_allocation_id is NULL&#xA;&#x9;&#x9;&#x9;&#x9;GROUP BY&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pvah2.purchase_visit_allocation_id&#xA;&#x9;&#x9;&#x9;),&#xA;&#x9;&#x9;&#x9;derived_visit_allocation AS (&#xA;&#x9;&#x9;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pva.visit_count_from,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pva.visit_count_to,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pva.visit_validity_type_id,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;CASE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN pva.visit_count_to = 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN pva.visit_count_from = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN&#x9;(pva.visit_count_to - pva.visit_count_from)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE (pva.visit_count_to - pva.visit_count_from) + 1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;END AS allocated_visit_count,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ISNULL(used_visit_allocations.used_visit_count, 0) AS used_visit_count,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pur.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;PPass.dbo.purchase pur&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation_link pval ON pval.purchase_no = pur.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation_grp pvag ON pvag.purchase_visit_allocation_grp_id = pval.purchase_visit_allocation_grp_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation pva ON pva.purchase_visit_allocation_grp_id = pvag.purchase_visit_allocation_grp_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.charge_owner_id = 21&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.visitor_type_id = 3&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.visit_allocation_type_id NOT IN (3,4)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pur.isDeleted = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;LEFT JOIN used_visit_allocations ON pva.purchase_visit_allocation_id = used_visit_allocations.purchase_visit_allocation_id&#xA;               &#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(&#x9;pva.valid_from &lt;= getdate()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.valid_to &gt;= getdate()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;OR pva.visit_validity_type_id = 2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;),&#xA;&#x9;&#x9;&#x9;calculated_visit_allocation AS&#xA;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;CASE WHEN derived_visit_allocation.visit_count_to = 9999 THEN&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CASE WHEN derived_visit_allocation.visit_validity_type_id = 2 THEN&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CASE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN derived_visit_allocation.visit_count_to = 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN derived_visit_allocation.visit_count_from = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN&#x9;(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from) + 1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(derived_visit_allocation.allocated_visit_count - derived_visit_allocation.used_visit_count)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;END AS visit_number,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;derived_visit_allocation.used_visit_count AS used_visit_number,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;derived_visit_allocation.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;FROM derived_visit_allocation&#xA;&#x9;&#x9;&#x9;)&#xA;&#xA;&#x9;&#x9;&#x9;UPDATE&#xA;&#x9;&#x9;&#x9;&#x9;##temptable&#xA;&#x9;&#x9;&#x9;SET&#xA;&#x9;&#x9;&#x9;&#x9;remaining_MGU_PP_count = calculated_visit_allocation.visit_number&#xA;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;##temptable&#xA;&#x9;&#x9;&#x9;&#x9;INNER JOIN calculated_visit_allocation ON ##temptable.purchase_no = calculated_visit_allocation.purchase_no&#xA;/* MGU CPAYVISIT */&#xA;&#x9;&#x9;;WITH used_visit_allocations AS (&#xA;            &#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;COUNT(1) AS used_visit_count,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pvah2.purchase_visit_allocation_id&#xA;&#x9;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;PPass.dbo.purchase_visit_allocation_his AS pvah2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation pva2 ON pvah2.purchase_visit_allocation_id = pva2.purchase_visit_allocation_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation_link pval2 ON pva2.purchase_visit_allocation_grp_id = pval2.purchase_visit_allocation_grp_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;LEFT OUTER JOIN PPass.dbo.source_visit_allocation_mem_gue_link salg ON pva2.source_visit_allocation_id = salg.guest_source_visit_allocation_id&#xA;&#x9;&#x9;&#x9;&#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;EXISTS (&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;##temptable temp2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;temp2.purchase_no = pval2.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pvah2.isdeleted = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva2.visitor_type_id = 3&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND salg.guest_source_visit_allocation_id is NULL&#xA;&#x9;&#x9;&#x9;&#x9;GROUP BY&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pvah2.purchase_visit_allocation_id&#xA;&#x9;&#x9;&#x9;),&#xA;&#x9;&#x9;&#x9;derived_visit_allocation AS (&#xA;&#x9;&#x9;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pva.visit_count_from,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pva.visit_count_to,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pva.visit_validity_type_id,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;CASE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN pva.visit_count_to = 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN pva.visit_count_from = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN&#x9;(pva.visit_count_to - pva.visit_count_from)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE (pva.visit_count_to - pva.visit_count_from) + 1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;END AS allocated_visit_count,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ISNULL(used_visit_allocations.used_visit_count, 0) AS used_visit_count,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pur.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;PPass.dbo.purchase pur&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation_link pval ON pval.purchase_no = pur.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation_grp pvag ON pvag.purchase_visit_allocation_grp_id = pval.purchase_visit_allocation_grp_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation pva ON pva.purchase_visit_allocation_grp_id = pvag.purchase_visit_allocation_grp_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.charge_owner_id = 22&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.visitor_type_id = 3&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.visit_allocation_type_id NOT IN (3,4)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pur.isDeleted = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;LEFT JOIN used_visit_allocations ON pva.purchase_visit_allocation_id = used_visit_allocations.purchase_visit_allocation_id&#xA;               &#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(&#x9;pva.valid_from &lt;= getdate()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.valid_to &gt;= getdate()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;OR pva.visit_validity_type_id = 2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;),&#xA;&#x9;&#x9;&#x9;calculated_visit_allocation AS&#xA;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;CASE WHEN derived_visit_allocation.visit_count_to = 9999 THEN&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CASE WHEN derived_visit_allocation.visit_validity_type_id = 2 THEN&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CASE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN derived_visit_allocation.visit_count_to = 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN derived_visit_allocation.visit_count_from = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN&#x9;(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from) + 1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(derived_visit_allocation.allocated_visit_count - derived_visit_allocation.used_visit_count)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;END AS visit_number,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;derived_visit_allocation.used_visit_count AS used_visit_number,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;derived_visit_allocation.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;FROM derived_visit_allocation&#xA;&#x9;&#x9;&#x9;)&#xA;&#xA;&#x9;&#x9;&#x9;UPDATE&#xA;&#x9;&#x9;&#x9;&#x9;##temptable&#xA;&#x9;&#x9;&#x9;SET&#xA;&#x9;&#x9;&#x9;&#x9;remaining_MGU_CLI_count = calculated_visit_allocation.visit_number&#xA;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;##temptable&#xA;&#x9;&#x9;&#x9;&#x9;INNER JOIN calculated_visit_allocation ON ##temptable.purchase_no = calculated_visit_allocation.purchase_no&#xA;&#xA;/* MGU CPAYVISIT2 */&#xA;&#x9;&#x9;;WITH used_visit_allocations AS (&#xA;            &#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;COUNT(1) AS used_visit_count,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pvah2.purchase_visit_allocation_id&#xA;&#x9;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;PPass.dbo.purchase_visit_allocation_his AS pvah2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation pva2 ON pvah2.purchase_visit_allocation_id = pva2.purchase_visit_allocation_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation_link pval2 ON pva2.purchase_visit_allocation_grp_id = pval2.purchase_visit_allocation_grp_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;LEFT OUTER JOIN PPass.dbo.source_visit_allocation_mem_gue_link salg ON pva2.source_visit_allocation_id = salg.guest_source_visit_allocation_id&#xA;&#x9;&#x9;&#x9;&#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;EXISTS (&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;##temptable temp2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;temp2.purchase_no = pval2.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pvah2.isdeleted = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva2.visitor_type_id = 3&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND salg.guest_source_visit_allocation_id is NULL&#xA;&#x9;&#x9;&#x9;&#x9;GROUP BY&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pvah2.purchase_visit_allocation_id&#xA;&#x9;&#x9;&#x9;),&#xA;&#x9;&#x9;&#x9;derived_visit_allocation AS (&#xA;&#x9;&#x9;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pva.visit_count_from,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pva.visit_count_to,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pva.visit_validity_type_id,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;CASE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN pva.visit_count_to = 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN pva.visit_count_from = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN&#x9;(pva.visit_count_to - pva.visit_count_from)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE (pva.visit_count_to - pva.visit_count_from) + 1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;END AS allocated_visit_count,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ISNULL(used_visit_allocations.used_visit_count, 0) AS used_visit_count,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pur.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;PPass.dbo.purchase pur&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation_link pval ON pval.purchase_no = pur.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation_grp pvag ON pvag.purchase_visit_allocation_grp_id = pval.purchase_visit_allocation_grp_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation pva ON pva.purchase_visit_allocation_grp_id = pvag.purchase_visit_allocation_grp_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.charge_owner_id = 25&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.visitor_type_id = 3&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.visit_allocation_type_id NOT IN (3,4)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pur.isDeleted = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;LEFT JOIN used_visit_allocations ON pva.purchase_visit_allocation_id = used_visit_allocations.purchase_visit_allocation_id&#xA;               &#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(&#x9;pva.valid_from &lt;= getdate()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.valid_to &gt;= getdate()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;OR pva.visit_validity_type_id = 2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;),&#xA;&#x9;&#x9;&#x9;calculated_visit_allocation AS&#xA;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;CASE WHEN derived_visit_allocation.visit_count_to = 9999 THEN&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CASE WHEN derived_visit_allocation.visit_validity_type_id = 2 THEN&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CASE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN derived_visit_allocation.visit_count_to = 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN derived_visit_allocation.visit_count_from = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN&#x9;(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from) + 1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(derived_visit_allocation.allocated_visit_count - derived_visit_allocation.used_visit_count)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;END AS visit_number,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;derived_visit_allocation.used_visit_count AS used_visit_number,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;derived_visit_allocation.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;FROM derived_visit_allocation&#xA;&#x9;&#x9;&#x9;)&#xA;&#xA;&#x9;&#x9;&#x9;UPDATE&#xA;&#x9;&#x9;&#x9;&#x9;##temptable&#xA;&#x9;&#x9;&#x9;SET&#xA;&#x9;&#x9;&#x9;&#x9;remaining_MGU_CLI2_count = calculated_visit_allocation.visit_number&#xA;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;##temptable&#xA;&#x9;&#x9;&#x9;&#x9;INNER JOIN calculated_visit_allocation ON ##temptable.purchase_no = calculated_visit_allocation.purchase_no&#xA;&#xA;/* SHAREDMEM PPAYVISIT */&#xA;&#x9;&#x9;;WITH used_visit_allocations AS (&#xA;            &#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;COUNT(1) AS used_visit_count,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pvah2.purchase_visit_allocation_id&#xA;&#x9;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;PPass.dbo.purchase_visit_allocation_his AS pvah2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation pva2 ON pvah2.purchase_visit_allocation_id = pva2.purchase_visit_allocation_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation_link pval2 ON pva2.purchase_visit_allocation_grp_id = pval2.purchase_visit_allocation_grp_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;LEFT OUTER JOIN PPass.dbo.source_visit_allocation_mem_gue_link salg ON pva2.source_visit_allocation_id = salg.guest_source_visit_allocation_id&#xA;&#x9;&#x9;&#x9;&#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;EXISTS (&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;##temptable temp2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;temp2.purchase_no = pval2.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pvah2.isdeleted = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva2.visitor_type_id = 8&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND salg.guest_source_visit_allocation_id is NULL&#xA;&#x9;&#x9;&#x9;&#x9;GROUP BY&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pvah2.purchase_visit_allocation_id&#xA;&#x9;&#x9;&#x9;),&#xA;&#x9;&#x9;&#x9;derived_visit_allocation AS (&#xA;&#x9;&#x9;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pva.visit_count_from,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pva.visit_count_to,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pva.visit_validity_type_id,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;CASE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN pva.visit_count_to = 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN pva.visit_count_from = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN&#x9;(pva.visit_count_to - pva.visit_count_from)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE (pva.visit_count_to - pva.visit_count_from) + 1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;END AS allocated_visit_count,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ISNULL(used_visit_allocations.used_visit_count, 0) AS used_visit_count,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pur.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;PPass.dbo.purchase pur&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation_link pval ON pval.purchase_no = pur.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation_grp pvag ON pvag.purchase_visit_allocation_grp_id = pval.purchase_visit_allocation_grp_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation pva ON pva.purchase_visit_allocation_grp_id = pvag.purchase_visit_allocation_grp_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.charge_owner_id = 21&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.visitor_type_id = 8&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.visit_allocation_type_id NOT IN (3,4)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pur.isDeleted = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;LEFT JOIN used_visit_allocations ON pva.purchase_visit_allocation_id = used_visit_allocations.purchase_visit_allocation_id&#xA;               &#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(&#x9;pva.valid_from &lt;= getdate()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.valid_to &gt;= getdate()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;OR pva.visit_validity_type_id = 2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;),&#xA;&#x9;&#x9;&#x9;calculated_visit_allocation AS&#xA;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;CASE WHEN derived_visit_allocation.visit_count_to = 9999 THEN&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CASE WHEN derived_visit_allocation.visit_validity_type_id = 2 THEN&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CASE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN derived_visit_allocation.visit_count_to = 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN derived_visit_allocation.visit_count_from = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN&#x9;(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from) + 1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(derived_visit_allocation.allocated_visit_count - derived_visit_allocation.used_visit_count)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;END AS visit_number,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;derived_visit_allocation.used_visit_count AS used_visit_number,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;derived_visit_allocation.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;FROM derived_visit_allocation&#xA;&#x9;&#x9;&#x9;)&#xA;&#xA;&#x9;&#x9;&#x9;UPDATE&#xA;&#x9;&#x9;&#x9;&#x9;##temptable&#xA;&#x9;&#x9;&#x9;SET&#xA;&#x9;&#x9;&#x9;&#x9;remaining_MEM_PP_count = calculated_visit_allocation.visit_number&#xA;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;##temptable&#xA;&#x9;&#x9;&#x9;&#x9;INNER JOIN calculated_visit_allocation ON ##temptable.purchase_no = calculated_visit_allocation.purchase_no&#xA;&#xA;/* SHAREDMEM CPAYVISIT */&#xA;&#x9;&#x9;;WITH used_visit_allocations AS (&#xA;            &#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;COUNT(1) AS used_visit_count,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pvah2.purchase_visit_allocation_id&#xA;&#x9;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;PPass.dbo.purchase_visit_allocation_his AS pvah2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation pva2 ON pvah2.purchase_visit_allocation_id = pva2.purchase_visit_allocation_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation_link pval2 ON pva2.purchase_visit_allocation_grp_id = pval2.purchase_visit_allocation_grp_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;LEFT OUTER JOIN PPass.dbo.source_visit_allocation_mem_gue_link salg ON pva2.source_visit_allocation_id = salg.guest_source_visit_allocation_id&#xA;&#x9;&#x9;&#x9;&#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;EXISTS (&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;##temptable temp2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;temp2.purchase_no = pval2.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pvah2.isdeleted = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva2.visitor_type_id = 8&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND salg.guest_source_visit_allocation_id is NULL&#xA;&#x9;&#x9;&#x9;&#x9;GROUP BY&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pvah2.purchase_visit_allocation_id&#xA;&#x9;&#x9;&#x9;),&#xA;&#x9;&#x9;&#x9;derived_visit_allocation AS (&#xA;&#x9;&#x9;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pva.visit_count_from,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pva.visit_count_to,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pva.visit_validity_type_id,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;CASE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN pva.visit_count_to = 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN pva.visit_count_from = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN&#x9;(pva.visit_count_to - pva.visit_count_from)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE (pva.visit_count_to - pva.visit_count_from) + 1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;END AS allocated_visit_count,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ISNULL(used_visit_allocations.used_visit_count, 0) AS used_visit_count,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pur.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;PPass.dbo.purchase pur&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation_link pval ON pval.purchase_no = pur.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation_grp pvag ON pvag.purchase_visit_allocation_grp_id = pval.purchase_visit_allocation_grp_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation pva ON pva.purchase_visit_allocation_grp_id = pvag.purchase_visit_allocation_grp_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.charge_owner_id = 22&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.visitor_type_id = 8&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.visit_allocation_type_id NOT IN (3,4)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pur.isDeleted = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;LEFT JOIN used_visit_allocations ON pva.purchase_visit_allocation_id = used_visit_allocations.purchase_visit_allocation_id&#xA;               &#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(&#x9;pva.valid_from &lt;= getdate()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.valid_to &gt;= getdate()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;OR pva.visit_validity_type_id = 2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;),&#xA;&#x9;&#x9;&#x9;calculated_visit_allocation AS&#xA;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;CASE WHEN derived_visit_allocation.visit_count_to = 9999 THEN&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CASE WHEN derived_visit_allocation.visit_validity_type_id = 2 THEN&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CASE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN derived_visit_allocation.visit_count_to = 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN derived_visit_allocation.visit_count_from = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN&#x9;(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from) + 1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(derived_visit_allocation.allocated_visit_count - derived_visit_allocation.used_visit_count)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;END AS visit_number,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;derived_visit_allocation.used_visit_count AS used_visit_number,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;derived_visit_allocation.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;FROM derived_visit_allocation&#xA;&#x9;&#x9;&#x9;)&#xA;&#xA;&#x9;&#x9;&#x9;UPDATE&#xA;&#x9;&#x9;&#x9;&#x9;##temptable&#xA;&#x9;&#x9;&#x9;SET&#xA;&#x9;&#x9;&#x9;&#x9;remaining_MEM_CLI_count = calculated_visit_allocation.visit_number&#xA;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;##temptable&#xA;&#x9;&#x9;&#x9;&#x9;INNER JOIN calculated_visit_allocation ON ##temptable.purchase_no = calculated_visit_allocation.purchase_no&#xA;/* SHAREDMEM CPAYVISIT2 */&#xA;&#x9;&#x9;;WITH used_visit_allocations AS (&#xA;            &#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;COUNT(1) AS used_visit_count,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pvah2.purchase_visit_allocation_id&#xA;&#x9;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;PPass.dbo.purchase_visit_allocation_his AS pvah2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation pva2 ON pvah2.purchase_visit_allocation_id = pva2.purchase_visit_allocation_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation_link pval2 ON pva2.purchase_visit_allocation_grp_id = pval2.purchase_visit_allocation_grp_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;LEFT OUTER JOIN PPass.dbo.source_visit_allocation_mem_gue_link salg ON pva2.source_visit_allocation_id = salg.guest_source_visit_allocation_id&#xA;&#x9;&#x9;&#x9;&#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;EXISTS (&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;##temptable temp2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;temp2.purchase_no = pval2.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pvah2.isdeleted = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva2.visitor_type_id = 8&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND salg.guest_source_visit_allocation_id is NULL&#xA;&#x9;&#x9;&#x9;&#x9;GROUP BY&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pvah2.purchase_visit_allocation_id&#xA;&#x9;&#x9;&#x9;),&#xA;&#x9;&#x9;&#x9;derived_visit_allocation AS (&#xA;&#x9;&#x9;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pva.visit_count_from,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pva.visit_count_to,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pva.visit_validity_type_id,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;CASE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN pva.visit_count_to = 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN pva.visit_count_from = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN&#x9;(pva.visit_count_to - pva.visit_count_from)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE (pva.visit_count_to - pva.visit_count_from) + 1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;END AS allocated_visit_count,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ISNULL(used_visit_allocations.used_visit_count, 0) AS used_visit_count,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pur.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;PPass.dbo.purchase pur&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation_link pval ON pval.purchase_no = pur.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation_grp pvag ON pvag.purchase_visit_allocation_grp_id = pval.purchase_visit_allocation_grp_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation pva ON pva.purchase_visit_allocation_grp_id = pvag.purchase_visit_allocation_grp_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.charge_owner_id = 25&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.visitor_type_id = 8&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.visit_allocation_type_id NOT IN (3,4)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pur.isDeleted = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;LEFT JOIN used_visit_allocations ON pva.purchase_visit_allocation_id = used_visit_allocations.purchase_visit_allocation_id&#xA;               &#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(&#x9;pva.valid_from &lt;= getdate()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.valid_to &gt;= getdate()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;OR pva.visit_validity_type_id = 2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;),&#xA;&#x9;&#x9;&#x9;calculated_visit_allocation AS&#xA;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;CASE WHEN derived_visit_allocation.visit_count_to = 9999 THEN&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CASE WHEN derived_visit_allocation.visit_validity_type_id = 2 THEN&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CASE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN derived_visit_allocation.visit_count_to = 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN derived_visit_allocation.visit_count_from = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN&#x9;(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from) + 1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(derived_visit_allocation.allocated_visit_count - derived_visit_allocation.used_visit_count)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;END AS visit_number,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;derived_visit_allocation.used_visit_count AS used_visit_number,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;derived_visit_allocation.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;FROM derived_visit_allocation&#xA;&#x9;&#x9;&#x9;)&#xA;&#xA;&#x9;&#x9;&#x9;UPDATE&#xA;&#x9;&#x9;&#x9;&#x9;##temptable&#xA;&#x9;&#x9;&#x9;SET&#xA;&#x9;&#x9;&#x9;&#x9;remaining_MEM_CLI2_count = calculated_visit_allocation.visit_number&#xA;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;##temptable&#xA;&#x9;&#x9;&#x9;&#x9;INNER JOIN calculated_visit_allocation ON ##temptable.purchase_no = calculated_visit_allocation.purchase_no&#xA;&#xA;/* SHAREDGUE PPAYVISIT */&#xA;&#x9;&#x9;;WITH used_visit_allocations AS (&#xA;            &#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;COUNT(1) AS used_visit_count,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pvah2.purchase_visit_allocation_id&#xA;&#x9;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;PPass.dbo.purchase_visit_allocation_his AS pvah2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation pva2 ON pvah2.purchase_visit_allocation_id = pva2.purchase_visit_allocation_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation_link pval2 ON pva2.purchase_visit_allocation_grp_id = pval2.purchase_visit_allocation_grp_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;LEFT OUTER JOIN PPass.dbo.source_visit_allocation_mem_gue_link salg ON pva2.source_visit_allocation_id = salg.guest_source_visit_allocation_id&#xA;&#x9;&#x9;&#x9;&#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;EXISTS (&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;##temptable temp2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;temp2.purchase_no = pval2.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pvah2.isdeleted = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva2.visitor_type_id = 9&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND salg.guest_source_visit_allocation_id is NULL&#xA;&#x9;&#x9;&#x9;&#x9;GROUP BY&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pvah2.purchase_visit_allocation_id&#xA;&#x9;&#x9;&#x9;),&#xA;&#x9;&#x9;&#x9;derived_visit_allocation AS (&#xA;&#x9;&#x9;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pva.visit_count_from,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pva.visit_count_to,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pva.visit_validity_type_id,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;CASE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN pva.visit_count_to = 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN pva.visit_count_from = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN&#x9;(pva.visit_count_to - pva.visit_count_from)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE (pva.visit_count_to - pva.visit_count_from) + 1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;END AS allocated_visit_count,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ISNULL(used_visit_allocations.used_visit_count, 0) AS used_visit_count,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pur.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;PPass.dbo.purchase pur&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation_link pval ON pval.purchase_no = pur.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation_grp pvag ON pvag.purchase_visit_allocation_grp_id = pval.purchase_visit_allocation_grp_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation pva ON pva.purchase_visit_allocation_grp_id = pvag.purchase_visit_allocation_grp_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.charge_owner_id = 21&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.visitor_type_id = 9&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.visit_allocation_type_id NOT IN (3,4)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pur.isDeleted = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;LEFT JOIN used_visit_allocations ON pva.purchase_visit_allocation_id = used_visit_allocations.purchase_visit_allocation_id&#xA;               &#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(&#x9;pva.valid_from &lt;= getdate()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.valid_to &gt;= getdate()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;OR pva.visit_validity_type_id = 2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;),&#xA;&#x9;&#x9;&#x9;calculated_visit_allocation AS&#xA;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;CASE WHEN derived_visit_allocation.visit_count_to = 9999 THEN&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CASE WHEN derived_visit_allocation.visit_validity_type_id = 2 THEN&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CASE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN derived_visit_allocation.visit_count_to = 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN derived_visit_allocation.visit_count_from = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN&#x9;(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from) + 1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(derived_visit_allocation.allocated_visit_count - derived_visit_allocation.used_visit_count)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;END AS visit_number,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;derived_visit_allocation.used_visit_count AS used_visit_number,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;derived_visit_allocation.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;FROM derived_visit_allocation&#xA;&#x9;&#x9;&#x9;)&#xA;&#xA;&#x9;&#x9;&#x9;UPDATE&#xA;&#x9;&#x9;&#x9;&#x9;##temptable&#xA;&#x9;&#x9;&#x9;SET&#xA;&#x9;&#x9;&#x9;&#x9;remaining_GUE_PP_count = calculated_visit_allocation.visit_number&#xA;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;##temptable&#xA;&#x9;&#x9;&#x9;&#x9;INNER JOIN calculated_visit_allocation ON ##temptable.purchase_no = calculated_visit_allocation.purchase_no&#xA;&#xA;/* SHAREDGUE CPAYVISIT */&#xA;&#x9;&#x9;;WITH used_visit_allocations AS (&#xA;            &#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;COUNT(1) AS used_visit_count,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pvah2.purchase_visit_allocation_id&#xA;&#x9;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;PPass.dbo.purchase_visit_allocation_his AS pvah2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation pva2 ON pvah2.purchase_visit_allocation_id = pva2.purchase_visit_allocation_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation_link pval2 ON pva2.purchase_visit_allocation_grp_id = pval2.purchase_visit_allocation_grp_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;LEFT OUTER JOIN PPass.dbo.source_visit_allocation_mem_gue_link salg ON pva2.source_visit_allocation_id = salg.guest_source_visit_allocation_id&#xA;&#x9;&#x9;&#x9;&#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;EXISTS (&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;##temptable temp2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;temp2.purchase_no = pval2.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pvah2.isdeleted = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva2.visitor_type_id = 9&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND salg.guest_source_visit_allocation_id is NULL&#xA;&#x9;&#x9;&#x9;&#x9;GROUP BY&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pvah2.purchase_visit_allocation_id&#xA;&#x9;&#x9;&#x9;),&#xA;&#x9;&#x9;&#x9;derived_visit_allocation AS (&#xA;&#x9;&#x9;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pva.visit_count_from,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pva.visit_count_to,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pva.visit_validity_type_id,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;CASE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN pva.visit_count_to = 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN pva.visit_count_from = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN&#x9;(pva.visit_count_to - pva.visit_count_from)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE (pva.visit_count_to - pva.visit_count_from) + 1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;END AS allocated_visit_count,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ISNULL(used_visit_allocations.used_visit_count, 0) AS used_visit_count,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pur.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;PPass.dbo.purchase pur&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation_link pval ON pval.purchase_no = pur.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation_grp pvag ON pvag.purchase_visit_allocation_grp_id = pval.purchase_visit_allocation_grp_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation pva ON pva.purchase_visit_allocation_grp_id = pvag.purchase_visit_allocation_grp_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.charge_owner_id = 22&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.visitor_type_id = 9&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.visit_allocation_type_id NOT IN (3,4)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pur.isDeleted = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;LEFT JOIN used_visit_allocations ON pva.purchase_visit_allocation_id = used_visit_allocations.purchase_visit_allocation_id&#xA;               &#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(&#x9;pva.valid_from &lt;= getdate()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.valid_to &gt;= getdate()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;OR pva.visit_validity_type_id = 2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;),&#xA;&#x9;&#x9;&#x9;calculated_visit_allocation AS&#xA;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;CASE WHEN derived_visit_allocation.visit_count_to = 9999 THEN&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CASE WHEN derived_visit_allocation.visit_validity_type_id = 2 THEN&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CASE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN derived_visit_allocation.visit_count_to = 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN derived_visit_allocation.visit_count_from = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN&#x9;(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from) + 1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(derived_visit_allocation.allocated_visit_count - derived_visit_allocation.used_visit_count)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;END AS visit_number,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;derived_visit_allocation.used_visit_count AS used_visit_number,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;derived_visit_allocation.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;FROM derived_visit_allocation&#xA;&#x9;&#x9;&#x9;)&#xA;&#xA;&#x9;&#x9;&#x9;UPDATE&#xA;&#x9;&#x9;&#x9;&#x9;##temptable&#xA;&#x9;&#x9;&#x9;SET&#xA;&#x9;&#x9;&#x9;&#x9;remaining_GUE_CLI_count = calculated_visit_allocation.visit_number&#xA;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;##temptable&#xA;&#x9;&#x9;&#x9;&#x9;INNER JOIN calculated_visit_allocation ON ##temptable.purchase_no = calculated_visit_allocation.purchase_no&#xA;&#xA;/* SHAREDGUE CPAYVISIT2 */&#xA;&#x9;&#x9;;WITH used_visit_allocations AS (&#xA;            &#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;COUNT(1) AS used_visit_count,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pvah2.purchase_visit_allocation_id&#xA;&#x9;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;PPass.dbo.purchase_visit_allocation_his AS pvah2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation pva2 ON pvah2.purchase_visit_allocation_id = pva2.purchase_visit_allocation_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation_link pval2 ON pva2.purchase_visit_allocation_grp_id = pval2.purchase_visit_allocation_grp_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;LEFT OUTER JOIN PPass.dbo.source_visit_allocation_mem_gue_link salg ON pva2.source_visit_allocation_id = salg.guest_source_visit_allocation_id&#xA;&#x9;&#x9;&#x9;&#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;EXISTS (&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;##temptable temp2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;temp2.purchase_no = pval2.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pvah2.isdeleted = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva2.visitor_type_id = 9&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND salg.guest_source_visit_allocation_id is NULL&#xA;&#x9;&#x9;&#x9;&#x9;GROUP BY&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pvah2.purchase_visit_allocation_id&#xA;&#x9;&#x9;&#x9;),&#xA;&#x9;&#x9;&#x9;derived_visit_allocation AS (&#xA;&#x9;&#x9;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pva.visit_count_from,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pva.visit_count_to,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pva.visit_validity_type_id,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;CASE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN pva.visit_count_to = 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN pva.visit_count_from = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN&#x9;(pva.visit_count_to - pva.visit_count_from)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE (pva.visit_count_to - pva.visit_count_from) + 1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;END AS allocated_visit_count,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ISNULL(used_visit_allocations.used_visit_count, 0) AS used_visit_count,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pur.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;PPass.dbo.purchase pur&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation_link pval ON pval.purchase_no = pur.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation_grp pvag ON pvag.purchase_visit_allocation_grp_id = pval.purchase_visit_allocation_grp_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation pva ON pva.purchase_visit_allocation_grp_id = pvag.purchase_visit_allocation_grp_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.charge_owner_id = 25&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.visitor_type_id = 9&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.visit_allocation_type_id NOT IN (3,4)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pur.isDeleted = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;LEFT JOIN used_visit_allocations ON pva.purchase_visit_allocation_id = used_visit_allocations.purchase_visit_allocation_id&#xA;               &#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(&#x9;pva.valid_from &lt;= getdate()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.valid_to &gt;= getdate()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;OR pva.visit_validity_type_id = 2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;),&#xA;&#x9;&#x9;&#x9;calculated_visit_allocation AS&#xA;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;CASE WHEN derived_visit_allocation.visit_count_to = 9999 THEN&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CASE WHEN derived_visit_allocation.visit_validity_type_id = 2 THEN&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CASE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN derived_visit_allocation.visit_count_to = 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN derived_visit_allocation.visit_count_from = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN&#x9;(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from) + 1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(derived_visit_allocation.allocated_visit_count - derived_visit_allocation.used_visit_count)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;END AS visit_number,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;derived_visit_allocation.used_visit_count AS used_visit_number,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;derived_visit_allocation.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;FROM derived_visit_allocation&#xA;&#x9;&#x9;&#x9;)&#xA;&#xA;&#x9;&#x9;&#x9;UPDATE&#xA;&#x9;&#x9;&#x9;&#x9;##temptable&#xA;&#x9;&#x9;&#x9;SET&#xA;&#x9;&#x9;&#x9;&#x9;remaining_GUE_CLI2_count = calculated_visit_allocation.visit_number&#xA;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;##temptable&#xA;&#x9;&#x9;&#x9;&#x9;INNER JOIN calculated_visit_allocation ON ##temptable.purchase_no = calculated_visit_allocation.purchase_no&#xA;/* SHAREDMGU PPAYVISIT */&#xA;&#xA;&#x9;&#x9;;WITH used_visit_allocations AS (&#xA;            &#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;COUNT(1) AS used_visit_count,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pvah2.purchase_visit_allocation_id&#xA;&#x9;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;PPass.dbo.purchase_visit_allocation_his AS pvah2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation pva2 ON pvah2.purchase_visit_allocation_id = pva2.purchase_visit_allocation_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation_link pval2 ON pva2.purchase_visit_allocation_grp_id = pval2.purchase_visit_allocation_grp_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;LEFT OUTER JOIN PPass.dbo.source_visit_allocation_mem_gue_link salg ON pva2.source_visit_allocation_id = salg.guest_source_visit_allocation_id&#xA;&#x9;&#x9;&#x9;&#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;EXISTS (&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;##temptable temp2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;temp2.purchase_no = pval2.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pvah2.isdeleted = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva2.visitor_type_id = 10&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND salg.guest_source_visit_allocation_id is NULL&#xA;&#x9;&#x9;&#x9;&#x9;GROUP BY&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pvah2.purchase_visit_allocation_id&#xA;&#x9;&#x9;&#x9;),&#xA;&#x9;&#x9;&#x9;derived_visit_allocation AS (&#xA;&#x9;&#x9;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pva.visit_count_from,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pva.visit_count_to,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pva.visit_validity_type_id,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;CASE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN pva.visit_count_to = 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN pva.visit_count_from = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN&#x9;(pva.visit_count_to - pva.visit_count_from)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE (pva.visit_count_to - pva.visit_count_from) + 1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;END AS allocated_visit_count,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ISNULL(used_visit_allocations.used_visit_count, 0) AS used_visit_count,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pur.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;PPass.dbo.purchase pur&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation_link pval ON pval.purchase_no = pur.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation_grp pvag ON pvag.purchase_visit_allocation_grp_id = pval.purchase_visit_allocation_grp_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation pva ON pva.purchase_visit_allocation_grp_id = pvag.purchase_visit_allocation_grp_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.charge_owner_id = 21&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.visitor_type_id = 10&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.visit_allocation_type_id NOT IN (3,4)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pur.isDeleted = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;LEFT JOIN used_visit_allocations ON pva.purchase_visit_allocation_id = used_visit_allocations.purchase_visit_allocation_id&#xA;               &#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(&#x9;pva.valid_from &lt;= getdate()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.valid_to &gt;= getdate()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;OR pva.visit_validity_type_id = 2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;),&#xA;&#x9;&#x9;&#x9;calculated_visit_allocation AS&#xA;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;CASE WHEN derived_visit_allocation.visit_count_to = 9999 THEN&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CASE WHEN derived_visit_allocation.visit_validity_type_id = 2 THEN&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CASE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN derived_visit_allocation.visit_count_to = 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN derived_visit_allocation.visit_count_from = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN&#x9;(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from) + 1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(derived_visit_allocation.allocated_visit_count - derived_visit_allocation.used_visit_count)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;END AS visit_number,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;derived_visit_allocation.used_visit_count AS used_visit_number,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;derived_visit_allocation.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;FROM derived_visit_allocation&#xA;&#x9;&#x9;&#x9;)&#xA;&#xA;&#x9;&#x9;&#x9;UPDATE&#xA;&#x9;&#x9;&#x9;&#x9;##temptable&#xA;&#x9;&#x9;&#x9;SET&#xA;&#x9;&#x9;&#x9;&#x9;remaining_MGU_PP_count = calculated_visit_allocation.visit_number&#xA;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;##temptable&#xA;&#x9;&#x9;&#x9;&#x9;INNER JOIN calculated_visit_allocation ON ##temptable.purchase_no = calculated_visit_allocation.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;/* SHAREDMGU CPAYVISIT */&#xA;&#x9;&#x9;;WITH used_visit_allocations AS (&#xA;            &#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;COUNT(1) AS used_visit_count,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pvah2.purchase_visit_allocation_id&#xA;&#x9;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;PPass.dbo.purchase_visit_allocation_his AS pvah2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation pva2 ON pvah2.purchase_visit_allocation_id = pva2.purchase_visit_allocation_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation_link pval2 ON pva2.purchase_visit_allocation_grp_id = pval2.purchase_visit_allocation_grp_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;LEFT OUTER JOIN PPass.dbo.source_visit_allocation_mem_gue_link salg ON pva2.source_visit_allocation_id = salg.guest_source_visit_allocation_id&#xA;&#x9;&#x9;&#x9;&#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;EXISTS (&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;##temptable temp2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;temp2.purchase_no = pval2.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pvah2.isdeleted = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva2.visitor_type_id = 10&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND salg.guest_source_visit_allocation_id is NULL&#xA;&#x9;&#x9;&#x9;&#x9;GROUP BY&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pvah2.purchase_visit_allocation_id&#xA;&#x9;&#x9;&#x9;),&#xA;&#x9;&#x9;&#x9;derived_visit_allocation AS (&#xA;&#x9;&#x9;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pva.visit_count_from,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pva.visit_count_to,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pva.visit_validity_type_id,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;CASE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN pva.visit_count_to = 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN pva.visit_count_from = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN&#x9;(pva.visit_count_to - pva.visit_count_from)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE (pva.visit_count_to - pva.visit_count_from) + 1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;END AS allocated_visit_count,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ISNULL(used_visit_allocations.used_visit_count, 0) AS used_visit_count,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pur.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;PPass.dbo.purchase pur&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation_link pval ON pval.purchase_no = pur.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation_grp pvag ON pvag.purchase_visit_allocation_grp_id = pval.purchase_visit_allocation_grp_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation pva ON pva.purchase_visit_allocation_grp_id = pvag.purchase_visit_allocation_grp_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.charge_owner_id = 22&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.visitor_type_id = 10&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.visit_allocation_type_id NOT IN (3,4)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pur.isDeleted = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;LEFT JOIN used_visit_allocations ON pva.purchase_visit_allocation_id = used_visit_allocations.purchase_visit_allocation_id&#xA;               &#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(&#x9;pva.valid_from &lt;= getdate()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.valid_to &gt;= getdate()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;OR pva.visit_validity_type_id = 2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;),&#xA;&#x9;&#x9;&#x9;calculated_visit_allocation AS&#xA;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;CASE WHEN derived_visit_allocation.visit_count_to = 9999 THEN&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CASE WHEN derived_visit_allocation.visit_validity_type_id = 2 THEN&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CASE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN derived_visit_allocation.visit_count_to = 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN derived_visit_allocation.visit_count_from = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN&#x9;(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from) + 1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(derived_visit_allocation.allocated_visit_count - derived_visit_allocation.used_visit_count)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;END AS visit_number,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;derived_visit_allocation.used_visit_count AS used_visit_number,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;derived_visit_allocation.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;FROM derived_visit_allocation&#xA;&#x9;&#x9;&#x9;)&#xA;&#xA;&#x9;&#x9;&#x9;UPDATE&#xA;&#x9;&#x9;&#x9;&#x9;##temptable&#xA;&#x9;&#x9;&#x9;SET&#xA;&#x9;&#x9;&#x9;&#x9;remaining_MGU_CLI_count = calculated_visit_allocation.visit_number&#xA;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;##temptable&#xA;&#x9;&#x9;&#x9;&#x9;INNER JOIN calculated_visit_allocation ON ##temptable.purchase_no = calculated_visit_allocation.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;/*SHAREDMGU CPAYVISIT2 */&#xA;&#x9;&#x9;;WITH used_visit_allocations AS (&#xA;            &#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;COUNT(1) AS used_visit_count,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pvah2.purchase_visit_allocation_id&#xA;&#x9;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;PPass.dbo.purchase_visit_allocation_his AS pvah2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation pva2 ON pvah2.purchase_visit_allocation_id = pva2.purchase_visit_allocation_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation_link pval2 ON pva2.purchase_visit_allocation_grp_id = pval2.purchase_visit_allocation_grp_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;LEFT OUTER JOIN PPass.dbo.source_visit_allocation_mem_gue_link salg ON pva2.source_visit_allocation_id = salg.guest_source_visit_allocation_id&#xA;&#x9;&#x9;&#x9;&#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;EXISTS (&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;##temptable temp2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;temp2.purchase_no = pval2.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pvah2.isdeleted = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva2.visitor_type_id = 10&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND salg.guest_source_visit_allocation_id is NULL&#xA;&#x9;&#x9;&#x9;&#x9;GROUP BY&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pvah2.purchase_visit_allocation_id&#xA;&#x9;&#x9;&#x9;),&#xA;&#x9;&#x9;&#x9;derived_visit_allocation AS (&#xA;&#x9;&#x9;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pva.visit_count_from,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pva.visit_count_to,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pva.visit_validity_type_id,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;CASE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN pva.visit_count_to = 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN pva.visit_count_from = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN&#x9;(pva.visit_count_to - pva.visit_count_from)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE (pva.visit_count_to - pva.visit_count_from) + 1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;END AS allocated_visit_count,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ISNULL(used_visit_allocations.used_visit_count, 0) AS used_visit_count,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pur.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;PPass.dbo.purchase pur&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation_link pval ON pval.purchase_no = pur.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation_grp pvag ON pvag.purchase_visit_allocation_grp_id = pval.purchase_visit_allocation_grp_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation pva ON pva.purchase_visit_allocation_grp_id = pvag.purchase_visit_allocation_grp_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.charge_owner_id = 25&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.visitor_type_id = 10&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.visit_allocation_type_id NOT IN (3,4)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pur.isDeleted = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;LEFT JOIN used_visit_allocations ON pva.purchase_visit_allocation_id = used_visit_allocations.purchase_visit_allocation_id&#xA;               &#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(&#x9;pva.valid_from &lt;= getdate()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.valid_to &gt;= getdate()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;OR pva.visit_validity_type_id = 2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;),&#xA;&#x9;&#x9;&#x9;calculated_visit_allocation AS&#xA;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;CASE WHEN derived_visit_allocation.visit_count_to = 9999 THEN&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CASE WHEN derived_visit_allocation.visit_validity_type_id = 2 THEN&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CASE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN derived_visit_allocation.visit_count_to = 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN derived_visit_allocation.visit_count_from = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN&#x9;(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from) + 1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(derived_visit_allocation.allocated_visit_count - derived_visit_allocation.used_visit_count)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;END AS visit_number,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;derived_visit_allocation.used_visit_count AS used_visit_number,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;derived_visit_allocation.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;FROM derived_visit_allocation&#xA;&#x9;&#x9;&#x9;)&#xA;&#xA;&#x9;&#x9;&#x9;UPDATE&#xA;&#x9;&#x9;&#x9;&#x9;##temptable&#xA;&#x9;&#x9;&#x9;SET&#xA;&#x9;&#x9;&#x9;&#x9;remaining_MGU_CLI2_count = calculated_visit_allocation.visit_number&#xA;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;##temptable&#xA;&#x9;&#x9;&#x9;&#x9;INNER JOIN calculated_visit_allocation ON ##temptable.purchase_no = calculated_visit_allocation.purchase_no&#xA;/*OFFERMEM PPAYVISIT */&#xA;;WITH used_visit_allocations AS (&#xA;            &#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;COUNT(1) AS used_visit_count,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pvah2.purchase_visit_allocation_id&#xA;&#x9;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;PPass.dbo.purchase_visit_allocation_his AS pvah2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation pva2 ON pvah2.purchase_visit_allocation_id = pva2.purchase_visit_allocation_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation_link pval2 ON pva2.purchase_visit_allocation_grp_id = pval2.purchase_visit_allocation_grp_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;LEFT OUTER JOIN PPass.dbo.source_visit_allocation_mem_gue_link salg ON pva2.source_visit_allocation_id = salg.guest_source_visit_allocation_id&#xA;&#x9;&#x9;&#x9;&#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;EXISTS (&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;##temptable temp2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;temp2.purchase_no = pval2.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pvah2.isdeleted = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva2.visitor_type_id = 6&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND salg.guest_source_visit_allocation_id is NULL&#xA;&#x9;&#x9;&#x9;&#x9;GROUP BY&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pvah2.purchase_visit_allocation_id&#xA;&#x9;&#x9;&#x9;),&#xA;&#x9;&#x9;&#x9;derived_visit_allocation AS (&#xA;&#x9;&#x9;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pva.visit_count_from,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pva.visit_count_to,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pva.visit_validity_type_id,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;CASE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN pva.visit_count_to = 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN pva.visit_count_from = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN&#x9;(pva.visit_count_to - pva.visit_count_from)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE (pva.visit_count_to - pva.visit_count_from) + 1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;END AS allocated_visit_count,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ISNULL(used_visit_allocations.used_visit_count, 0) AS used_visit_count,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pur.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;PPass.dbo.purchase pur&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation_link pval ON pval.purchase_no = pur.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation_grp pvag ON pvag.purchase_visit_allocation_grp_id = pval.purchase_visit_allocation_grp_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation pva ON pva.purchase_visit_allocation_grp_id = pvag.purchase_visit_allocation_grp_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.charge_owner_id = 21&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.visitor_type_id = 6&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.visit_allocation_type_id NOT IN (3,4)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pur.isDeleted = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;LEFT JOIN used_visit_allocations ON pva.purchase_visit_allocation_id = used_visit_allocations.purchase_visit_allocation_id&#xA;               &#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(&#x9;pva.valid_from &lt;= getdate()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.valid_to &gt;= getdate()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;OR pva.visit_validity_type_id = 2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;),&#xA;&#x9;&#x9;&#x9;calculated_visit_allocation AS&#xA;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;CASE WHEN derived_visit_allocation.visit_count_to = 9999 THEN&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CASE WHEN derived_visit_allocation.visit_validity_type_id = 2 THEN&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CASE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN derived_visit_allocation.visit_count_to = 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN derived_visit_allocation.visit_count_from = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN&#x9;(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from) + 1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(derived_visit_allocation.allocated_visit_count - derived_visit_allocation.used_visit_count)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;END AS visit_number,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;derived_visit_allocation.used_visit_count AS used_visit_number,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;derived_visit_allocation.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;FROM derived_visit_allocation&#xA;&#x9;&#x9;&#x9;)&#xA;&#xA;&#x9;&#x9;&#x9;UPDATE&#xA;&#x9;&#x9;&#x9;&#x9;##temptable&#xA;&#x9;&#x9;&#x9;SET&#xA;&#x9;&#x9;&#x9;&#x9;remaining_MEM_PP_count = calculated_visit_allocation.visit_number&#xA;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;##temptable&#xA;&#x9;&#x9;&#x9;&#x9;INNER JOIN calculated_visit_allocation ON ##temptable.purchase_no = calculated_visit_allocation.purchase_no&#xA;&#x9;&#x9;/* OFFERMEMCPAYLIST */&#xA;&#x9;&#x9;;WITH used_visit_allocations AS (&#xA;            &#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;COUNT(1) AS used_visit_count,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pvah2.purchase_visit_allocation_id&#xA;&#x9;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;PPass.dbo.purchase_visit_allocation_his AS pvah2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation pva2 ON pvah2.purchase_visit_allocation_id = pva2.purchase_visit_allocation_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation_link pval2 ON pva2.purchase_visit_allocation_grp_id = pval2.purchase_visit_allocation_grp_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;LEFT OUTER JOIN PPass.dbo.source_visit_allocation_mem_gue_link salg ON pva2.source_visit_allocation_id = salg.guest_source_visit_allocation_id&#xA;&#x9;&#x9;&#x9;&#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;EXISTS (&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;##temptable temp2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;temp2.purchase_no = pval2.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pvah2.isdeleted = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva2.visitor_type_id = 6&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND salg.guest_source_visit_allocation_id is NULL&#xA;&#x9;&#x9;&#x9;&#x9;GROUP BY&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pvah2.purchase_visit_allocation_id&#xA;&#x9;&#x9;&#x9;),&#xA;&#x9;&#x9;&#x9;derived_visit_allocation AS (&#xA;&#x9;&#x9;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pva.visit_count_from,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pva.visit_count_to,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pva.visit_validity_type_id,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;CASE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN pva.visit_count_to = 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN pva.visit_count_from = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN&#x9;(pva.visit_count_to - pva.visit_count_from)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE (pva.visit_count_to - pva.visit_count_from) + 1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;END AS allocated_visit_count,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ISNULL(used_visit_allocations.used_visit_count, 0) AS used_visit_count,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pur.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;PPass.dbo.purchase pur&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation_link pval ON pval.purchase_no = pur.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation_grp pvag ON pvag.purchase_visit_allocation_grp_id = pval.purchase_visit_allocation_grp_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation pva ON pva.purchase_visit_allocation_grp_id = pvag.purchase_visit_allocation_grp_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.charge_owner_id = 22&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.visitor_type_id = 6&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.visit_allocation_type_id NOT IN (3,4)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pur.isDeleted = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;LEFT JOIN used_visit_allocations ON pva.purchase_visit_allocation_id = used_visit_allocations.purchase_visit_allocation_id&#xA;               &#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(&#x9;pva.valid_from &lt;= getdate()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.valid_to &gt;= getdate()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;OR pva.visit_validity_type_id = 2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;),&#xA;&#x9;&#x9;&#x9;calculated_visit_allocation AS&#xA;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;CASE WHEN derived_visit_allocation.visit_count_to = 9999 THEN&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CASE WHEN derived_visit_allocation.visit_validity_type_id = 2 THEN&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CASE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN derived_visit_allocation.visit_count_to = 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN derived_visit_allocation.visit_count_from = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN&#x9;(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from) + 1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(derived_visit_allocation.allocated_visit_count - derived_visit_allocation.used_visit_count)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;END AS visit_number,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;derived_visit_allocation.used_visit_count AS used_visit_number,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;derived_visit_allocation.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;FROM derived_visit_allocation&#xA;&#x9;&#x9;&#x9;)&#xA;&#xA;&#x9;&#x9;&#x9;UPDATE&#xA;&#x9;&#x9;&#x9;&#x9;##temptable&#xA;&#x9;&#x9;&#x9;SET&#xA;&#x9;&#x9;&#x9;&#x9;remaining_MEM_CLI_count = calculated_visit_allocation.visit_number&#xA;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;##temptable&#xA;&#x9;&#x9;&#x9;&#x9;INNER JOIN calculated_visit_allocation ON ##temptable.purchase_no = calculated_visit_allocation.purchase_no&#xA;&#x9;&#x9;/* OFFERMEMCPAYLIST2 */&#xA;;WITH used_visit_allocations AS (&#xA;            &#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;COUNT(1) AS used_visit_count,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pvah2.purchase_visit_allocation_id&#xA;&#x9;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;PPass.dbo.purchase_visit_allocation_his AS pvah2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation pva2 ON pvah2.purchase_visit_allocation_id = pva2.purchase_visit_allocation_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation_link pval2 ON pva2.purchase_visit_allocation_grp_id = pval2.purchase_visit_allocation_grp_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;LEFT OUTER JOIN PPass.dbo.source_visit_allocation_mem_gue_link salg ON pva2.source_visit_allocation_id = salg.guest_source_visit_allocation_id&#xA;&#x9;&#x9;&#x9;&#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;EXISTS (&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;##temptable temp2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;temp2.purchase_no = pval2.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pvah2.isdeleted = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva2.visitor_type_id = 6&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND salg.guest_source_visit_allocation_id is NULL&#xA;&#x9;&#x9;&#x9;&#x9;GROUP BY&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pvah2.purchase_visit_allocation_id&#xA;&#x9;&#x9;&#x9;),&#xA;&#x9;&#x9;&#x9;derived_visit_allocation AS (&#xA;&#x9;&#x9;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pva.visit_count_from,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pva.visit_count_to,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pva.visit_validity_type_id,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;CASE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN pva.visit_count_to = 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN pva.visit_count_from = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN&#x9;(pva.visit_count_to - pva.visit_count_from)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE (pva.visit_count_to - pva.visit_count_from) + 1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;END AS allocated_visit_count,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ISNULL(used_visit_allocations.used_visit_count, 0) AS used_visit_count,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pur.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;PPass.dbo.purchase pur&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation_link pval ON pval.purchase_no = pur.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation_grp pvag ON pvag.purchase_visit_allocation_grp_id = pval.purchase_visit_allocation_grp_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation pva ON pva.purchase_visit_allocation_grp_id = pvag.purchase_visit_allocation_grp_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.charge_owner_id = 25&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.visitor_type_id = 6&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.visit_allocation_type_id NOT IN (3,4)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pur.isDeleted = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;LEFT JOIN used_visit_allocations ON pva.purchase_visit_allocation_id = used_visit_allocations.purchase_visit_allocation_id&#xA;               &#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(&#x9;pva.valid_from &lt;= getdate()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.valid_to &gt;= getdate()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;OR pva.visit_validity_type_id = 2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;),&#xA;&#x9;&#x9;&#x9;calculated_visit_allocation AS&#xA;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;CASE WHEN derived_visit_allocation.visit_count_to = 9999 THEN&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CASE WHEN derived_visit_allocation.visit_validity_type_id = 2 THEN&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CASE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN derived_visit_allocation.visit_count_to = 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN derived_visit_allocation.visit_count_from = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN&#x9;(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from) + 1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(derived_visit_allocation.allocated_visit_count - derived_visit_allocation.used_visit_count)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;END AS visit_number,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;derived_visit_allocation.used_visit_count AS used_visit_number,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;derived_visit_allocation.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;FROM derived_visit_allocation&#xA;&#x9;&#x9;&#x9;)&#xA;&#xA;&#x9;&#x9;&#x9;UPDATE&#xA;&#x9;&#x9;&#x9;&#x9;##temptable&#xA;&#x9;&#x9;&#x9;SET&#xA;&#x9;&#x9;&#x9;&#x9;remaining_MEM_CLI2_count = calculated_visit_allocation.visit_number&#xA;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;##temptable&#xA;&#x9;&#x9;&#x9;&#x9;INNER JOIN calculated_visit_allocation ON ##temptable.purchase_no = calculated_visit_allocation.purchase_no&#xA;&#x9;&#x9;/* OFFERGUEPPAYLIST */&#xA;;WITH used_visit_allocations AS (&#xA;            &#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;COUNT(1) AS used_visit_count,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pvah2.purchase_visit_allocation_id&#xA;&#x9;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;PPass.dbo.purchase_visit_allocation_his AS pvah2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation pva2 ON pvah2.purchase_visit_allocation_id = pva2.purchase_visit_allocation_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation_link pval2 ON pva2.purchase_visit_allocation_grp_id = pval2.purchase_visit_allocation_grp_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;LEFT OUTER JOIN PPass.dbo.source_visit_allocation_mem_gue_link salg ON pva2.source_visit_allocation_id = salg.guest_source_visit_allocation_id&#xA;&#x9;&#x9;&#x9;&#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;EXISTS (&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;##temptable temp2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;temp2.purchase_no = pval2.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pvah2.isdeleted = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva2.visitor_type_id = 5&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND salg.guest_source_visit_allocation_id is NULL&#xA;&#x9;&#x9;&#x9;&#x9;GROUP BY&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pvah2.purchase_visit_allocation_id&#xA;&#x9;&#x9;&#x9;),&#xA;&#x9;&#x9;&#x9;derived_visit_allocation AS (&#xA;&#x9;&#x9;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pva.visit_count_from,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pva.visit_count_to,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pva.visit_validity_type_id,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;CASE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN pva.visit_count_to = 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN pva.visit_count_from = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN&#x9;(pva.visit_count_to - pva.visit_count_from)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE (pva.visit_count_to - pva.visit_count_from) + 1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;END AS allocated_visit_count,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ISNULL(used_visit_allocations.used_visit_count, 0) AS used_visit_count,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pur.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;PPass.dbo.purchase pur&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation_link pval ON pval.purchase_no = pur.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation_grp pvag ON pvag.purchase_visit_allocation_grp_id = pval.purchase_visit_allocation_grp_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation pva ON pva.purchase_visit_allocation_grp_id = pvag.purchase_visit_allocation_grp_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.charge_owner_id = 21&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.visitor_type_id = 5&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.visit_allocation_type_id NOT IN (3,4)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pur.isDeleted = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;LEFT JOIN used_visit_allocations ON pva.purchase_visit_allocation_id = used_visit_allocations.purchase_visit_allocation_id&#xA;               &#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(&#x9;pva.valid_from &lt;= getdate()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.valid_to &gt;= getdate()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;OR pva.visit_validity_type_id = 2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;),&#xA;&#x9;&#x9;&#x9;calculated_visit_allocation AS&#xA;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;CASE WHEN derived_visit_allocation.visit_count_to = 9999 THEN&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CASE WHEN derived_visit_allocation.visit_validity_type_id = 2 THEN&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CASE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN derived_visit_allocation.visit_count_to = 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN derived_visit_allocation.visit_count_from = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN&#x9;(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from) + 1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(derived_visit_allocation.allocated_visit_count - derived_visit_allocation.used_visit_count)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;END AS visit_number,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;derived_visit_allocation.used_visit_count AS used_visit_number,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;derived_visit_allocation.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;FROM derived_visit_allocation&#xA;&#x9;&#x9;&#x9;)&#xA;&#xA;&#x9;&#x9;&#x9;UPDATE&#xA;&#x9;&#x9;&#x9;&#x9;##temptable&#xA;&#x9;&#x9;&#x9;SET&#xA;&#x9;&#x9;&#x9;&#x9;remaining_GUE_PP_count = calculated_visit_allocation.visit_number&#xA;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;##temptable&#xA;&#x9;&#x9;&#x9;&#x9;INNER JOIN calculated_visit_allocation ON ##temptable.purchase_no = calculated_visit_allocation.purchase_no&#xA;&#x9;&#x9;/* OFFERGUECPAYLIST */&#xA;;WITH used_visit_allocations AS (&#xA;            &#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;COUNT(1) AS used_visit_count,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pvah2.purchase_visit_allocation_id&#xA;&#x9;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;PPass.dbo.purchase_visit_allocation_his AS pvah2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation pva2 ON pvah2.purchase_visit_allocation_id = pva2.purchase_visit_allocation_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation_link pval2 ON pva2.purchase_visit_allocation_grp_id = pval2.purchase_visit_allocation_grp_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;LEFT OUTER JOIN PPass.dbo.source_visit_allocation_mem_gue_link salg ON pva2.source_visit_allocation_id = salg.guest_source_visit_allocation_id&#xA;&#x9;&#x9;&#x9;&#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;EXISTS (&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;##temptable temp2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;temp2.purchase_no = pval2.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pvah2.isdeleted = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva2.visitor_type_id = 5&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND salg.guest_source_visit_allocation_id is NULL&#xA;&#x9;&#x9;&#x9;&#x9;GROUP BY&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pvah2.purchase_visit_allocation_id&#xA;&#x9;&#x9;&#x9;),&#xA;&#x9;&#x9;&#x9;derived_visit_allocation AS (&#xA;&#x9;&#x9;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pva.visit_count_from,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pva.visit_count_to,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pva.visit_validity_type_id,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;CASE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN pva.visit_count_to = 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN pva.visit_count_from = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN&#x9;(pva.visit_count_to - pva.visit_count_from)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE (pva.visit_count_to - pva.visit_count_from) + 1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;END AS allocated_visit_count,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ISNULL(used_visit_allocations.used_visit_count, 0) AS used_visit_count,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pur.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;PPass.dbo.purchase pur&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation_link pval ON pval.purchase_no = pur.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation_grp pvag ON pvag.purchase_visit_allocation_grp_id = pval.purchase_visit_allocation_grp_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation pva ON pva.purchase_visit_allocation_grp_id = pvag.purchase_visit_allocation_grp_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.charge_owner_id = 22&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.visitor_type_id = 5&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.visit_allocation_type_id NOT IN (3,4)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pur.isDeleted = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;LEFT JOIN used_visit_allocations ON pva.purchase_visit_allocation_id = used_visit_allocations.purchase_visit_allocation_id&#xA;               &#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(&#x9;pva.valid_from &lt;= getdate()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.valid_to &gt;= getdate()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;OR pva.visit_validity_type_id = 2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;),&#xA;&#x9;&#x9;&#x9;calculated_visit_allocation AS&#xA;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;CASE WHEN derived_visit_allocation.visit_count_to = 9999 THEN&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CASE WHEN derived_visit_allocation.visit_validity_type_id = 2 THEN&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CASE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN derived_visit_allocation.visit_count_to = 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN derived_visit_allocation.visit_count_from = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN&#x9;(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from) + 1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(derived_visit_allocation.allocated_visit_count - derived_visit_allocation.used_visit_count)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;END AS visit_number,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;derived_visit_allocation.used_visit_count AS used_visit_number,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;derived_visit_allocation.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;FROM derived_visit_allocation&#xA;&#x9;&#x9;&#x9;)&#xA;&#xA;&#x9;&#x9;&#x9;UPDATE&#xA;&#x9;&#x9;&#x9;&#x9;##temptable&#xA;&#x9;&#x9;&#x9;SET&#xA;&#x9;&#x9;&#x9;&#x9;remaining_GUE_CLI_count = calculated_visit_allocation.visit_number&#xA;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;##temptable&#xA;&#x9;&#x9;&#x9;&#x9;INNER JOIN calculated_visit_allocation ON ##temptable.purchase_no = calculated_visit_allocation.purchase_no&#xA;&#x9;&#x9;/* OFFERGUECPAYLIST2 */&#xA;;WITH used_visit_allocations AS (&#xA;            &#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;COUNT(1) AS used_visit_count,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pvah2.purchase_visit_allocation_id&#xA;&#x9;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;PPass.dbo.purchase_visit_allocation_his AS pvah2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation pva2 ON pvah2.purchase_visit_allocation_id = pva2.purchase_visit_allocation_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation_link pval2 ON pva2.purchase_visit_allocation_grp_id = pval2.purchase_visit_allocation_grp_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;LEFT OUTER JOIN PPass.dbo.source_visit_allocation_mem_gue_link salg ON pva2.source_visit_allocation_id = salg.guest_source_visit_allocation_id&#xA;&#x9;&#x9;&#x9;&#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;EXISTS (&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;##temptable temp2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;temp2.purchase_no = pval2.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pvah2.isdeleted = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva2.visitor_type_id = 5&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND salg.guest_source_visit_allocation_id is NULL&#xA;&#x9;&#x9;&#x9;&#x9;GROUP BY&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pvah2.purchase_visit_allocation_id&#xA;&#x9;&#x9;&#x9;),&#xA;&#x9;&#x9;&#x9;derived_visit_allocation AS (&#xA;&#x9;&#x9;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pva.visit_count_from,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pva.visit_count_to,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pva.visit_validity_type_id,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;CASE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN pva.visit_count_to = 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN pva.visit_count_from = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN&#x9;(pva.visit_count_to - pva.visit_count_from)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE (pva.visit_count_to - pva.visit_count_from) + 1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;END AS allocated_visit_count,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ISNULL(used_visit_allocations.used_visit_count, 0) AS used_visit_count,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pur.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;PPass.dbo.purchase pur&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation_link pval ON pval.purchase_no = pur.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation_grp pvag ON pvag.purchase_visit_allocation_grp_id = pval.purchase_visit_allocation_grp_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation pva ON pva.purchase_visit_allocation_grp_id = pvag.purchase_visit_allocation_grp_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.charge_owner_id = 25&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.visitor_type_id = 5&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.visit_allocation_type_id NOT IN (3,4)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pur.isDeleted = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;LEFT JOIN used_visit_allocations ON pva.purchase_visit_allocation_id = used_visit_allocations.purchase_visit_allocation_id&#xA;               &#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(&#x9;pva.valid_from &lt;= getdate()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.valid_to &gt;= getdate()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;OR pva.visit_validity_type_id = 2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;),&#xA;&#x9;&#x9;&#x9;calculated_visit_allocation AS&#xA;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;CASE WHEN derived_visit_allocation.visit_count_to = 9999 THEN&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CASE WHEN derived_visit_allocation.visit_validity_type_id = 2 THEN&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CASE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN derived_visit_allocation.visit_count_to = 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN derived_visit_allocation.visit_count_from = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN&#x9;(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from) + 1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(derived_visit_allocation.allocated_visit_count - derived_visit_allocation.used_visit_count)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;END AS visit_number,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;derived_visit_allocation.used_visit_count AS used_visit_number,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;derived_visit_allocation.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;FROM derived_visit_allocation&#xA;&#x9;&#x9;&#x9;)&#xA;&#xA;&#x9;&#x9;&#x9;UPDATE&#xA;&#x9;&#x9;&#x9;&#x9;##temptable&#xA;&#x9;&#x9;&#x9;SET&#xA;&#x9;&#x9;&#x9;&#x9;remaining_GUE_CLI2_count = calculated_visit_allocation.visit_number&#xA;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;##temptable&#xA;&#x9;&#x9;&#x9;&#x9;INNER JOIN calculated_visit_allocation ON ##temptable.purchase_no = calculated_visit_allocation.purchase_no&#xA;&#x9;&#x9;/* OFFERMGUPPAYLIST */&#xA;;WITH used_visit_allocations AS (&#xA;            &#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;COUNT(1) AS used_visit_count,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pvah2.purchase_visit_allocation_id&#xA;&#x9;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;PPass.dbo.purchase_visit_allocation_his AS pvah2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation pva2 ON pvah2.purchase_visit_allocation_id = pva2.purchase_visit_allocation_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation_link pval2 ON pva2.purchase_visit_allocation_grp_id = pval2.purchase_visit_allocation_grp_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;LEFT OUTER JOIN PPass.dbo.source_visit_allocation_mem_gue_link salg ON pva2.source_visit_allocation_id = salg.guest_source_visit_allocation_id&#xA;&#x9;&#x9;&#x9;&#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;EXISTS (&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;##temptable temp2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;temp2.purchase_no = pval2.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pvah2.isdeleted = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva2.visitor_type_id = 7&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND salg.guest_source_visit_allocation_id is NULL&#xA;&#x9;&#x9;&#x9;&#x9;GROUP BY&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pvah2.purchase_visit_allocation_id&#xA;&#x9;&#x9;&#x9;),&#xA;&#x9;&#x9;&#x9;derived_visit_allocation AS (&#xA;&#x9;&#x9;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pva.visit_count_from,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pva.visit_count_to,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pva.visit_validity_type_id,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;CASE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN pva.visit_count_to = 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN pva.visit_count_from = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN&#x9;(pva.visit_count_to - pva.visit_count_from)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE (pva.visit_count_to - pva.visit_count_from) + 1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;END AS allocated_visit_count,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ISNULL(used_visit_allocations.used_visit_count, 0) AS used_visit_count,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pur.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;PPass.dbo.purchase pur&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation_link pval ON pval.purchase_no = pur.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation_grp pvag ON pvag.purchase_visit_allocation_grp_id = pval.purchase_visit_allocation_grp_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation pva ON pva.purchase_visit_allocation_grp_id = pvag.purchase_visit_allocation_grp_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.charge_owner_id = 21&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.visitor_type_id = 7&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.visit_allocation_type_id NOT IN (3,4)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pur.isDeleted = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;LEFT JOIN used_visit_allocations ON pva.purchase_visit_allocation_id = used_visit_allocations.purchase_visit_allocation_id&#xA;               &#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(&#x9;pva.valid_from &lt;= getdate()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.valid_to &gt;= getdate()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;OR pva.visit_validity_type_id = 2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;),&#xA;&#x9;&#x9;&#x9;calculated_visit_allocation AS&#xA;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;CASE WHEN derived_visit_allocation.visit_count_to = 9999 THEN&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CASE WHEN derived_visit_allocation.visit_validity_type_id = 2 THEN&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CASE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN derived_visit_allocation.visit_count_to = 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN derived_visit_allocation.visit_count_from = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN&#x9;(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from) + 1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(derived_visit_allocation.allocated_visit_count - derived_visit_allocation.used_visit_count)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;END AS visit_number,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;derived_visit_allocation.used_visit_count AS used_visit_number,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;derived_visit_allocation.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;FROM derived_visit_allocation&#xA;&#x9;&#x9;&#x9;)&#xA;&#xA;&#x9;&#x9;&#x9;UPDATE&#xA;&#x9;&#x9;&#x9;&#x9;##temptable&#xA;&#x9;&#x9;&#x9;SET&#xA;&#x9;&#x9;&#x9;&#x9;remaining_MGU_PP_count = calculated_visit_allocation.visit_number&#xA;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;##temptable&#xA;&#x9;&#x9;&#x9;&#x9;INNER JOIN calculated_visit_allocation ON ##temptable.purchase_no = calculated_visit_allocation.purchase_no&#xA;&#x9;&#x9;/* OFFERMGUCPAYLIST */&#xA;;WITH used_visit_allocations AS (&#xA;            &#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;COUNT(1) AS used_visit_count,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pvah2.purchase_visit_allocation_id&#xA;&#x9;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;PPass.dbo.purchase_visit_allocation_his AS pvah2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation pva2 ON pvah2.purchase_visit_allocation_id = pva2.purchase_visit_allocation_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation_link pval2 ON pva2.purchase_visit_allocation_grp_id = pval2.purchase_visit_allocation_grp_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;LEFT OUTER JOIN PPass.dbo.source_visit_allocation_mem_gue_link salg ON pva2.source_visit_allocation_id = salg.guest_source_visit_allocation_id&#xA;&#x9;&#x9;&#x9;&#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;EXISTS (&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;##temptable temp2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;temp2.purchase_no = pval2.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pvah2.isdeleted = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva2.visitor_type_id = 7&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND salg.guest_source_visit_allocation_id is NULL&#xA;&#x9;&#x9;&#x9;&#x9;GROUP BY&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pvah2.purchase_visit_allocation_id&#xA;&#x9;&#x9;&#x9;),&#xA;&#x9;&#x9;&#x9;derived_visit_allocation AS (&#xA;&#x9;&#x9;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pva.visit_count_from,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pva.visit_count_to,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pva.visit_validity_type_id,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;CASE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN pva.visit_count_to = 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN pva.visit_count_from = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN&#x9;(pva.visit_count_to - pva.visit_count_from)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE (pva.visit_count_to - pva.visit_count_from) + 1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;END AS allocated_visit_count,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ISNULL(used_visit_allocations.used_visit_count, 0) AS used_visit_count,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pur.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;PPass.dbo.purchase pur&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation_link pval ON pval.purchase_no = pur.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation_grp pvag ON pvag.purchase_visit_allocation_grp_id = pval.purchase_visit_allocation_grp_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation pva ON pva.purchase_visit_allocation_grp_id = pvag.purchase_visit_allocation_grp_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.charge_owner_id = 22&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.visitor_type_id = 7&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.visit_allocation_type_id NOT IN (3,4)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pur.isDeleted = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;LEFT JOIN used_visit_allocations ON pva.purchase_visit_allocation_id = used_visit_allocations.purchase_visit_allocation_id&#xA;               &#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(&#x9;pva.valid_from &lt;= getdate()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.valid_to &gt;= getdate()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;OR pva.visit_validity_type_id = 2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;),&#xA;&#x9;&#x9;&#x9;calculated_visit_allocation AS&#xA;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;CASE WHEN derived_visit_allocation.visit_count_to = 9999 THEN&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CASE WHEN derived_visit_allocation.visit_validity_type_id = 2 THEN&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CASE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN derived_visit_allocation.visit_count_to = 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN derived_visit_allocation.visit_count_from = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN&#x9;(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from) + 1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(derived_visit_allocation.allocated_visit_count - derived_visit_allocation.used_visit_count)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;END AS visit_number,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;derived_visit_allocation.used_visit_count AS used_visit_number,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;derived_visit_allocation.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;FROM derived_visit_allocation&#xA;&#x9;&#x9;&#x9;)&#xA;&#xA;&#x9;&#x9;&#x9;UPDATE&#xA;&#x9;&#x9;&#x9;&#x9;##temptable&#xA;&#x9;&#x9;&#x9;SET&#xA;&#x9;&#x9;&#x9;&#x9;remaining_MGU_CLI_count = calculated_visit_allocation.visit_number&#xA;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;##temptable&#xA;&#x9;&#x9;&#x9;&#x9;INNER JOIN calculated_visit_allocation ON ##temptable.purchase_no = calculated_visit_allocation.purchase_no&#xA;&#x9;&#x9;/* OFFERMGUCPAYLIST2 */&#xA;;WITH used_visit_allocations AS (&#xA;            &#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;COUNT(1) AS used_visit_count,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pvah2.purchase_visit_allocation_id&#xA;&#x9;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;PPass.dbo.purchase_visit_allocation_his AS pvah2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation pva2 ON pvah2.purchase_visit_allocation_id = pva2.purchase_visit_allocation_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation_link pval2 ON pva2.purchase_visit_allocation_grp_id = pval2.purchase_visit_allocation_grp_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;LEFT OUTER JOIN PPass.dbo.source_visit_allocation_mem_gue_link salg ON pva2.source_visit_allocation_id = salg.guest_source_visit_allocation_id&#xA;&#x9;&#x9;&#x9;&#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;EXISTS (&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;##temptable temp2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;temp2.purchase_no = pval2.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pvah2.isdeleted = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva2.visitor_type_id = 7&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND salg.guest_source_visit_allocation_id is NULL&#xA;&#x9;&#x9;&#x9;&#x9;GROUP BY&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pvah2.purchase_visit_allocation_id&#xA;&#x9;&#x9;&#x9;),&#xA;&#x9;&#x9;&#x9;derived_visit_allocation AS (&#xA;&#x9;&#x9;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pva.visit_count_from,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pva.visit_count_to,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pva.visit_validity_type_id,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;CASE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN pva.visit_count_to = 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN pva.visit_count_from = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN&#x9;(pva.visit_count_to - pva.visit_count_from)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE (pva.visit_count_to - pva.visit_count_from) + 1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;END AS allocated_visit_count,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ISNULL(used_visit_allocations.used_visit_count, 0) AS used_visit_count,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pur.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;PPass.dbo.purchase pur&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation_link pval ON pval.purchase_no = pur.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation_grp pvag ON pvag.purchase_visit_allocation_grp_id = pval.purchase_visit_allocation_grp_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation pva ON pva.purchase_visit_allocation_grp_id = pvag.purchase_visit_allocation_grp_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.charge_owner_id = 25&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.visitor_type_id = 7&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.visit_allocation_type_id NOT IN (3,4)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pur.isDeleted = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;LEFT JOIN used_visit_allocations ON pva.purchase_visit_allocation_id = used_visit_allocations.purchase_visit_allocation_id&#xA;               &#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(&#x9;pva.valid_from &lt;= getdate()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.valid_to &gt;= getdate()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;OR pva.visit_validity_type_id = 2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;),&#xA;&#x9;&#x9;&#x9;calculated_visit_allocation AS&#xA;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;CASE WHEN derived_visit_allocation.visit_count_to = 9999 THEN&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CASE WHEN derived_visit_allocation.visit_validity_type_id = 2 THEN&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CASE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN derived_visit_allocation.visit_count_to = 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN derived_visit_allocation.visit_count_from = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN&#x9;(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from) + 1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(derived_visit_allocation.allocated_visit_count - derived_visit_allocation.used_visit_count)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;END AS visit_number,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;derived_visit_allocation.used_visit_count AS used_visit_number,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;derived_visit_allocation.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;FROM derived_visit_allocation&#xA;&#x9;&#x9;&#x9;)&#xA;&#xA;&#x9;&#x9;&#x9;UPDATE&#xA;&#x9;&#x9;&#x9;&#x9;##temptable&#xA;&#x9;&#x9;&#x9;SET&#xA;&#x9;&#x9;&#x9;&#x9;remaining_MGU_CLI2_count = calculated_visit_allocation.visit_number&#xA;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;##temptable&#xA;&#x9;&#x9;&#x9;&#x9;INNER JOIN calculated_visit_allocation ON ##temptable.purchase_no = calculated_visit_allocation.purchase_no&#xA;&#x9;&#x9;;WITH derived_credit_data AS (&#xA;&#x9;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;ISNULL(SUM(CASE WHEN vch.purchase_visit_allocation_his_id IS NULL THEN 1 ELSE 0 END),0) AS unused_visit,&#xA;&#x9;&#x9;&#x9;&#x9;ISNULL(SUM(CASE WHEN vch.purchase_visit_allocation_his_id IS NOT NULL THEN 1 ELSE 0 END),0) AS used_visit,&#xA;&#x9;&#x9;&#x9;&#x9;pval.purchase_no&#xA;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;PPass.dbo.visit_credit_his AS vch&#xA;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.visit_credit AS vc ON vch.visit_credit_id = vc.visit_credit_id&#xA;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.visit_credit_purchase_allocation AS vcpa ON vch.visit_credit_his_id = vcpa.visit_credit_his_id&#xA;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation AS pva ON vcpa.purchase_visit_allocation_id = pva.purchase_visit_allocation_id&#xA;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation_grp AS pvag ON pva.purchase_visit_allocation_grp_id = pvag.purchase_visit_allocation_grp_id&#xA;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation_link AS pval ON pvag.purchase_visit_allocation_grp_id = pval.purchase_visit_allocation_grp_id&#xA;&#x9;&#x9;&#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;vch.isdeleted = 0&#xA;&#x9;&#x9;&#x9;&#x9;AND vch.expiry_date &gt;= getdate()&#xA;&#x9;&#x9;&#x9;&#x9;AND vc.visit_credit_type_id = 1&#xA;&#x9;&#x9;&#x9;&#x9;AND vc.visitor_type_id = 3&#xA;&#x9;&#x9;&#x9;GROUP BY pval.purchase_no&#xA;&#x9;&#x9;)&#xA;&#x9;&#x9;UPDATE&#xA;&#x9;&#x9;&#x9;##temptable&#xA;&#x9;&#x9;SET&#xA;&#x9;&#x9;&#x9;REMAINING_MGU_COMP_COUNT = derived_credit_data.unused_visit&#xA;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;##temptable&#xA;&#x9;&#x9;&#x9;INNER JOIN derived_credit_data ON ##temptable.purchase_no = derived_credit_data.purchase_no&#xA;&#xA;&#xA;&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="strQuery">
      <DTS:VariableValue
        DTS:DataType="8">DECLARE @StartDate VARCHAR(10)='01/01/2023'
DECLARE @EndDate VARCHAR(10)='31/01/2023'


DECLARE @period CHAR(1)='M'


DECLARE @var_startDate VARCHAR(10)
SET @var_startDate=CONVERT(CHAR(8),CONVERT(date,@StartDate,103),112)
DECLARE @var_endDate VARCHAR(10)
SET @var_endDate=CONVERT(CHAR(8),CONVERT(date,@EndDate,103),112) 


IF(@period='W')
BEGIN

	SET @var_startDate= CAST(CAST(DATEADD(wk, DATEDIFF(wk, 6, GETDATE()), 0) AS DATE) AS VARCHAR(10))
	SET @var_endDate= CAST(CAST(DATEADD(wk, DATEDIFF(wk, 6, GETDATE()), 6) AS DATE) AS VARCHAR(10))

END

IF OBJECT_ID('tempdb..##temptable') IS NOT NULL
	DROP TABLE ##temptable

CREATE TABLE ##temptable (
		source_code 		varchar(20),
		consumer_no 		INT NOT NULL,
		external_identifier BIGINT NULL,
		membership_no 		BIGINT NULL,
		purchase_no 		INT NOT NULL,
		track_seq 			INT NOT NULL,
		title 				varchar(20),
		forename 			varchar(50),
		surname 			varchar(50),
		fullname 			varchar(120),
		source_desc 		varchar(255),
		product_version 	varchar(20),
		paid_to_date 		date,
		subs_issue_date 	date,
		subs_status 		varchar(5),
		track_start 		date,
		track_guests 		INT,
		track_from 			varchar(20),
		track_value 		FLOAT,
		creation_date 		date,
		lounge_name			varchar(100),
		airport 			varchar(100),
		trans_ccard_number 	varchar(100),
		external_ref 		varchar(100),
		track_batch 		INT,
		old_system_ref 		varchar(100),
		campaign_code 		varchar(100),
		lounge_code			varchar(20),
		city 				varchar(100),
		country 				varchar(100),
		vendor_tracking_code 	varchar(100),
		user_invitation_code 	varchar(100),
		remaining_mem_cli_count int,
		remaining_mem_cli2_count int,
		remaining_mem_pp_count 	int,
		remaining_gue_cli_count int,
		remaining_gue_cli2_count int,
		remaining_gue_pp_count 	int,
		remaining_mgu_cli_count int,
		remaining_mgu_cli2_count int,
		remaining_mgu_pp_count 	int,
		remaining_mgu_comp_count int,
		
		experience_category 	varchar(100),
		experience_type 		varchar(100),
		airport_terminal_name  varchar(100),
		airport_terminal_type  varchar(100),
		visit_type_id SMALLINT,
		visit_type	INT,
		ccard_type VARCHAR(100),
		effective_date DATETIME2,
		report_month date

);


INSERT INTO ##temptable(	
	source_code,
	consumer_no,
	external_identifier,
	membership_no,
	purchase_no,
	track_seq,
	title,
	forename,
	surname,
	fullname,
	source_desc,
	product_version,
	paid_to_date,
	subs_issue_date,
	subs_status,
	track_start,
	track_guests,
	track_from,
	track_value,
	creation_date,
	lounge_name,
	airport,
	trans_ccard_number,
	external_ref,
	track_batch,
	old_system_ref,
	campaign_code,
	lounge_code,
	city,
	country,
	vendor_tracking_code,
	user_invitation_code,
	remaining_mem_cli_count,
	remaining_mem_cli2_count,
	remaining_mem_pp_count,
	remaining_gue_cli_count,
	remaining_gue_cli2_count,
	remaining_gue_pp_count,
	remaining_mgu_cli_count,
	remaining_mgu_cli2_count,
	remaining_mgu_pp_count,
	remaining_mgu_comp_count,
	
	experience_category,
	experience_type,
	airport_terminal_name,
	airport_terminal_type,
	visit_type_id,
	ccard_type, 
	effective_date,
	report_month

	 )
SELECT	s.source_code,
		c.consumer_no,
		c.external_identifier,
		c.membership_no,
		p.purchase_no,
		t.track_seq,
		c.title,
		c.forename,
		c.surname,
		LTRIM(RTRIM(REPLACE(REPLACE(REPLACE(c.forename + ' ' + c.surname,' ',' |'),'| ',''),'|',''))) AS fullname,
		s.source_desc,
		p.product_version,
		p.paid_to_date,
		p.subs_issue_date,
		p.subs_status,
		t.track_start,
		t.track_guests,
		t.track_from,
		t.track_value,
		t.creation_date,
		l.lounge_name,
		a.pp_short_name AS airport,
		p.trans_ccard_number,
		t.external_ref,
		t.track_batch,
		p.old_system_ref,
		s.campaign_code,
		l.lounge_code,
		a.airport_city AS city,
		cou.code_desc AS country,
		siv.vendor_tracking_code,
		siv.user_invitation_code,
		0 AS remaining_mem_cli_count,
		0 AS remaining_mem_cli2_count,
 		0 AS remaining_mem_pp_count,
 		0 AS remaining_gue_cli_count,
 		0 AS remaining_gue_cli2_count,
 		0 AS remaining_gue_pp_count,
 		0 AS remaining_mgu_cli_count,
 		0 AS remaining_mgu_cli2_count,
 		0 AS remaining_mgu_pp_count,
 		0 AS remaining_mgu_comp_count,
 		
		'Lounge' as experience_category,
		'Lounge' as experience_type,
		ate.terminal_name as airport_terminal_name,
		CASE
			WHEN l.lounge_type = 'I' THEN 'I'
			WHEN l.lounge_type = 'D' THEN 'D'
			ELSE 'U'
		  END	as airport_terminal_type,
		t.visit_type_id,
		p.ccard_type,
		p.effective_date,
		CAST(DATEADD(MONTH, DATEDIFF(MONTH, 0, t.[creation_date]), 0) AS DATE)      AS 	report_month

--INTO ##temptable
FROM
		PPass.dbo.source_deal_config AS sdc WITH (NOLOCK)
		INNER JOIN PPass.dbo.source AS s WITH (NOLOCK) ON sdc.source_code = s.source_code
		INNER JOIN PPass.dbo.source_subscription AS ss WITH (NOLOCK) ON sdc.source_deal_config_id = ss.source_deal_config_id
		INNER JOIN PPass.dbo.purchase_subscription_link AS psl WITH (NOLOCK) ON ss.source_subscription_id = psl.source_subscription_id
		INNER JOIN PPass.dbo.purchase AS p WITH (NOLOCK) ON psl.purchase_no = p.purchase_no
		INNER JOIN PPass.dbo.consumer AS c WITH (NOLOCK) ON p.consumer_no = c.consumer_no
		INNER JOIN PPass.dbo.tracking AS t WITH (NOLOCK) ON p.purchase_no = t.purchase_no
		INNER JOIN PPass.dbo.lounge AS l WITH (NOLOCK) ON l.lounge_code = t.track_from
		INNER JOIN PPass.dbo.airport AS a WITH (NOLOCK) ON a.iso_airport_code = l.airport
		LEFT OUTER JOIN PPass.dbo.airport_terminal AS ate WITH (NOLOCK) ON l.airport_terminal_id = ate.airport_terminal_id
		LEFT OUTER JOIN PPass.dbo.code AS COU  WITH (NOLOCK) ON COU.code = l.country_code AND COU.codetype = 'CTRY'
		
		LEFT OUTER JOIN PPass.dbo.source_invitation_validation siv WITH (NOLOCK) ON siv.consumer_no = c.consumer_no
	WHERE
t.creation_date &gt;= @var_startDate AND t.creation_date &lt; DATEADD(d,1,@var_endDate)
 AND t.track_status &lt;&gt; 'NA' 
AND p.isDeleted = 0 
AND s.source_code in ( 'LKVSVISINFUKR18' )
--AND (p.consumer_no='1427229223' or c.membership_no='1427229223')
/* Load in the reedemed offers data */

INSERT INTO ##temptable (	
	source_code,
	consumer_no,
	external_identifier,
	membership_no,
	purchase_no,
	track_seq,
	title,
	forename,
	surname,
	fullname,
	source_desc,
	product_version,
	paid_to_date,
	subs_issue_date,
	subs_status,
	track_start,
	track_guests,
	track_from,
	track_value,
	creation_date,
	lounge_name,
	airport,
	trans_ccard_number,
	external_ref,
	track_batch,
	old_system_ref,
	campaign_code,
	lounge_code,
	city,
	country,
	vendor_tracking_code,
	user_invitation_code,
	remaining_mem_cli_count,
	remaining_mem_cli2_count,
	remaining_mem_pp_count,
	remaining_gue_cli_count,
	remaining_gue_cli2_count,
	remaining_gue_pp_count,
	remaining_mgu_cli_count,
	remaining_mgu_cli2_count,
	remaining_mgu_pp_count,
	remaining_mgu_comp_count,
	experience_category,
	experience_type,
	airport_terminal_name,
	airport_terminal_type,
	visit_type_id,
	report_month

	 )
SELECT
	s.source_code,
	c.consumer_no,
	c.external_identifier,
	c.membership_no,
	p.purchase_no,
	t.track_seq,
	c.title,
	c.forename,
	c.surname,
	LTRIM(RTRIM(REPLACE(REPLACE(REPLACE(c.forename + ' ' + c.surname,' ',' |'),'| ',''),'|',''))) AS fullname,
	s.source_desc,
	p.product_version,
	p.paid_to_date,
	p.subs_issue_date,
	p.subs_status,
	t.track_start,
	t.track_guests,
	t.track_from,
	t.track_value,
	t.creation_date,
	ord.outlet_name as lounge_name,
	a.pp_short_name AS airport,
	p.trans_ccard_number,
	t.external_ref,
	t.track_batch,
	p.old_system_ref,
	s.campaign_code,
	t.track_from as lounge_code,
	a.airport_city AS city,
	cou.code_desc AS country,
	siv.vendor_tracking_code,
	siv.user_invitation_code,
	0 AS remaining_mem_cli_count , 
	0 AS remaining_mem_cli2_count , 
	0 AS remaining_mem_pp_count , 
	0 AS remaining_gue_cli_count , 
	0 AS remaining_gue_cli2_count , 
	0 AS remaining_gue_pp_count , 
	0 AS remaining_mgu_cli_count , 
	0 AS remaining_mgu_cli2_count , 
	0 AS remaining_mgu_pp_count , 
	0 AS remaining_mgu_comp_count,
	
	ord.offer_category as experience_category,
		ord.offer_type as experience_type,
	ISNULL(ate.terminal_name, 'Unknown' ) as airport_terminal_name,
	'U' as airport_terminal_type,
	t.visit_type_id,
	CAST(DATEADD(MONTH, DATEDIFF(MONTH, 0, t.[creation_date]), 0) AS DATE)      AS 	report_month
FROM
	PPass.dbo.source_deal_config AS sdc WITH (NOLOCK)
	INNER JOIN PPass.dbo.source AS s WITH (NOLOCK) ON sdc.source_code = s.source_code
	INNER JOIN PPass.dbo.source_subscription AS ss WITH (NOLOCK) ON sdc.source_deal_config_id = ss.source_deal_config_id
	INNER JOIN PPass.dbo.purchase_subscription_link AS psl WITH (NOLOCK) ON ss.source_subscription_id = psl.source_subscription_id
	INNER JOIN PPass.dbo.purchase AS p WITH (NOLOCK) ON psl.purchase_no = p.purchase_no
	INNER JOIN PPass.dbo.consumer AS c WITH (NOLOCK) ON p.consumer_no = c.consumer_no
	INNER JOIN PPass.dbo.tracking AS t WITH (NOLOCK) ON p.purchase_no = t.purchase_no
	INNER JOIN PPass.dbo.offer_redemption_details AS ord WITH (NOLOCK) ON ord.consumer_no = c.consumer_no AND ord.track_seq = t.track_seq
	INNER JOIN PPass.dbo.airport AS a WITH (NOLOCK) ON a.iso_airport_code = ord.airport_iso_code
	LEFT JOIN PPass.dbo.outlet_airport_terminal AS oat WITH (NOLOCK) ON ord.outlet_id = oat.outlet_id
	LEFT JOIN PPass.dbo.airport_terminal AS ate WITH (NOLOCK) ON oat.airport_terminal_id = ate.airport_terminal_id
	LEFT OUTER JOIN PPass.dbo.code AS COU WITH (NOLOCK) ON cou.alpha_1 = a.iso_country_code
		AND cou.codetype = 'CTRY2'
		AND cou.alpha_5 &lt;&gt; ''
	LEFT OUTER JOIN PPass.dbo.source_invitation_validation siv WITH (NOLOCK) ON siv.consumer_no = c.consumer_no
	
WHERE
t.creation_date &gt;= @var_startDate AND t.creation_date &lt; DATEADD(d,1,@var_endDate)
 AND t.track_status &lt;&gt; 'NA' 
AND p.isDeleted = 0 
AND s.source_code in ('LKVSVISINFUKR18')
--AND (p.consumer_no='1427229223' or c.membership_no='1427229223')
/* update the temp table with an index */
--ALTER TABLE ##temptable 
--ADD CONSTRAINT PK_##temptable 
--PRIMARY KEY NONCLUSTERED (purchase_no, track_seq)
--			CREATE NONCLUSTERED INDEX ##temptable_idx1 ON ##temptable (source_code, consumer_no, fullname, track_start, lounge_name, external_ref) 
--			WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, FILLFACTOR = 100) ON [PRIMARY]

--Select * from ##temptable

		/*  MEM PPAYVISIT  */
		;WITH used_visit_allocations AS (
            	SELECT
					COUNT(1) AS used_visit_count,
					pvah2.purchase_visit_allocation_id
				FROM
					PPass.dbo.purchase_visit_allocation_his AS pvah2
					INNER JOIN PPass.dbo.purchase_visit_allocation pva2 ON pvah2.purchase_visit_allocation_id = pva2.purchase_visit_allocation_id
					INNER JOIN PPass.dbo.purchase_visit_allocation_link pval2 ON pva2.purchase_visit_allocation_grp_id = pval2.purchase_visit_allocation_grp_id
					LEFT OUTER JOIN PPass.dbo.source_visit_allocation_mem_gue_link salg ON pva2.source_visit_allocation_id = salg.guest_source_visit_allocation_id
				WHERE
						EXISTS (
							SELECT
								1
							FROM
								##temptable temp2
							WHERE
								temp2.purchase_no = pval2.purchase_no
						)
					AND pvah2.isdeleted = 0
					AND pva2.visitor_type_id = 1
					AND salg.guest_source_visit_allocation_id is NULL
				GROUP BY
					pvah2.purchase_visit_allocation_id
			),
			derived_visit_allocation AS (
           
				SELECT
					pva.visit_count_from,
					pva.visit_count_to,
					pva.visit_validity_type_id,
					
					CASE
						WHEN pva.visit_count_to = 9999
							THEN 9999
						WHEN pva.visit_count_from = 0
							THEN	(pva.visit_count_to - pva.visit_count_from)
						ELSE (pva.visit_count_to - pva.visit_count_from) + 1
					END AS allocated_visit_count,
					ISNULL(used_visit_allocations.used_visit_count, 0) AS used_visit_count,
					pur.purchase_no
				FROM
					PPass.dbo.purchase pur
					INNER JOIN PPass.dbo.purchase_visit_allocation_link pval ON pval.purchase_no = pur.purchase_no
					INNER JOIN PPass.dbo.purchase_visit_allocation_grp pvag ON pvag.purchase_visit_allocation_grp_id = pval.purchase_visit_allocation_grp_id
					INNER JOIN PPass.dbo.purchase_visit_allocation pva ON pva.purchase_visit_allocation_grp_id = pvag.purchase_visit_allocation_grp_id
					AND pva.charge_owner_id = 21
					AND pva.visitor_type_id = 1
					AND pva.visit_allocation_type_id NOT IN (3,4)
					AND pur.isDeleted = 0
					LEFT JOIN used_visit_allocations ON pva.purchase_visit_allocation_id = used_visit_allocations.purchase_visit_allocation_id
               	WHERE
						
						(
							(	pva.valid_from &lt;= getdate()
								AND pva.valid_to &gt;= getdate()
							)
							OR pva.visit_validity_type_id = 2
						)
			),
			calculated_visit_allocation AS
			(
				SELECT
					
					CASE WHEN derived_visit_allocation.visit_count_to = 9999 THEN
						9999
					ELSE
						
						CASE WHEN derived_visit_allocation.visit_validity_type_id = 2 THEN
							CASE
								WHEN derived_visit_allocation.visit_count_to = 9999
									THEN 9999
								WHEN derived_visit_allocation.visit_count_from = 0
									THEN	(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from)
								ELSE
									(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from) + 1
							END
						ELSE
							(derived_visit_allocation.allocated_visit_count - derived_visit_allocation.used_visit_count)
						END
					END AS visit_number,
					
					derived_visit_allocation.used_visit_count AS used_visit_number,
					derived_visit_allocation.purchase_no
				FROM derived_visit_allocation
			)

			UPDATE
				##temptable
			SET
				remaining_MEM_PP_count = calculated_visit_allocation.visit_number
				
			FROM
				##temptable
				INNER JOIN calculated_visit_allocation ON ##temptable.purchase_no = calculated_visit_allocation.purchase_no;

	/* MEM CPAYVISIT */
		;WITH used_visit_allocations AS (
            	SELECT
					COUNT(1) AS used_visit_count,
					pvah2.purchase_visit_allocation_id
				FROM
					PPass.dbo.purchase_visit_allocation_his AS pvah2
					INNER JOIN PPass.dbo.purchase_visit_allocation pva2 ON pvah2.purchase_visit_allocation_id = pva2.purchase_visit_allocation_id
					INNER JOIN PPass.dbo.purchase_visit_allocation_link pval2 ON pva2.purchase_visit_allocation_grp_id = pval2.purchase_visit_allocation_grp_id
					LEFT OUTER JOIN PPass.dbo.source_visit_allocation_mem_gue_link salg ON pva2.source_visit_allocation_id = salg.guest_source_visit_allocation_id
				WHERE
						EXISTS (
							SELECT
								1
							FROM
								##temptable temp2
							WHERE
								temp2.purchase_no = pval2.purchase_no
						)
					AND pvah2.isdeleted = 0
					AND pva2.visitor_type_id = 1
					AND salg.guest_source_visit_allocation_id is NULL
				GROUP BY
					pvah2.purchase_visit_allocation_id
			),
			derived_visit_allocation AS (
				SELECT
					pva.visit_count_from,
					pva.visit_count_to,
					pva.visit_validity_type_id,
					CASE
						WHEN pva.visit_count_to = 9999
							THEN 9999
						WHEN pva.visit_count_from = 0
							THEN	(pva.visit_count_to - pva.visit_count_from)
						ELSE (pva.visit_count_to - pva.visit_count_from) + 1
					END AS allocated_visit_count,
					ISNULL(used_visit_allocations.used_visit_count, 0) AS used_visit_count,
					pur.purchase_no
				FROM
					PPass.dbo.purchase pur
					INNER JOIN PPass.dbo.purchase_visit_allocation_link pval ON pval.purchase_no = pur.purchase_no
					INNER JOIN PPass.dbo.purchase_visit_allocation_grp pvag ON pvag.purchase_visit_allocation_grp_id = pval.purchase_visit_allocation_grp_id
					INNER JOIN PPass.dbo.purchase_visit_allocation pva ON pva.purchase_visit_allocation_grp_id = pvag.purchase_visit_allocation_grp_id
					AND pva.charge_owner_id = 22
					AND pva.visitor_type_id = 1
					AND pva.visit_allocation_type_id NOT IN (3,4)
					AND pur.isDeleted = 0
					LEFT JOIN used_visit_allocations ON pva.purchase_visit_allocation_id = used_visit_allocations.purchase_visit_allocation_id
               	WHERE
						(
							(	pva.valid_from &lt;= getdate()
								AND pva.valid_to &gt;= getdate()
							)
							OR pva.visit_validity_type_id = 2
						)
			),
			calculated_visit_allocation AS
			(
				SELECT
					CASE WHEN derived_visit_allocation.visit_count_to = 9999 THEN
						9999
					ELSE
						CASE WHEN derived_visit_allocation.visit_validity_type_id = 2 THEN
							CASE
								WHEN derived_visit_allocation.visit_count_to = 9999
									THEN 9999
								WHEN derived_visit_allocation.visit_count_from = 0
									THEN	(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from)
								ELSE
									(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from) + 1
							END
						ELSE
							(derived_visit_allocation.allocated_visit_count - derived_visit_allocation.used_visit_count)
						END
					END AS visit_number,
					derived_visit_allocation.used_visit_count AS used_visit_number,
					derived_visit_allocation.purchase_no
				FROM derived_visit_allocation
			)

			UPDATE
				##temptable
			SET
				remaining_MEM_CLI_count = calculated_visit_allocation.visit_number
			FROM
				##temptable ##temptable
				INNER JOIN calculated_visit_allocation ON ##temptable.purchase_no = calculated_visit_allocation.purchase_no;

				/* MEM CPAYVISIT2 */
		;WITH used_visit_allocations AS (
            	SELECT
					COUNT(1) AS used_visit_count,
					pvah2.purchase_visit_allocation_id
				FROM
					PPass.dbo.purchase_visit_allocation_his AS pvah2
					INNER JOIN PPass.dbo.purchase_visit_allocation pva2 ON pvah2.purchase_visit_allocation_id = pva2.purchase_visit_allocation_id
					INNER JOIN PPass.dbo.purchase_visit_allocation_link pval2 ON pva2.purchase_visit_allocation_grp_id = pval2.purchase_visit_allocation_grp_id
					LEFT OUTER JOIN PPass.dbo.source_visit_allocation_mem_gue_link salg ON pva2.source_visit_allocation_id = salg.guest_source_visit_allocation_id
				WHERE
						EXISTS (
							SELECT
								1
							FROM
								##temptable temp2
							WHERE
								temp2.purchase_no = pval2.purchase_no
						)
					AND pvah2.isdeleted = 0
					AND pva2.visitor_type_id = 1
					AND salg.guest_source_visit_allocation_id is NULL
				GROUP BY
					pvah2.purchase_visit_allocation_id
			),
			derived_visit_allocation AS (
				SELECT
					pva.visit_count_from,
					pva.visit_count_to,
					pva.visit_validity_type_id,
					CASE
						WHEN pva.visit_count_to = 9999
							THEN 9999
						WHEN pva.visit_count_from = 0
							THEN	(pva.visit_count_to - pva.visit_count_from)
						ELSE (pva.visit_count_to - pva.visit_count_from) + 1
					END AS allocated_visit_count,
					ISNULL(used_visit_allocations.used_visit_count, 0) AS used_visit_count,
					pur.purchase_no
				FROM
					PPass.dbo.purchase pur
					INNER JOIN PPass.dbo.purchase_visit_allocation_link pval ON pval.purchase_no = pur.purchase_no
					INNER JOIN PPass.dbo.purchase_visit_allocation_grp pvag ON pvag.purchase_visit_allocation_grp_id = pval.purchase_visit_allocation_grp_id
					INNER JOIN PPass.dbo.purchase_visit_allocation pva ON pva.purchase_visit_allocation_grp_id = pvag.purchase_visit_allocation_grp_id
					AND pva.charge_owner_id = 25
					AND pva.visitor_type_id = 1
					AND pva.visit_allocation_type_id NOT IN (3,4)
					AND pur.isDeleted = 0
					LEFT JOIN used_visit_allocations ON pva.purchase_visit_allocation_id = used_visit_allocations.purchase_visit_allocation_id
               	WHERE
						(
							(	pva.valid_from &lt;= getdate()
								AND pva.valid_to &gt;= getdate()
							)
							OR pva.visit_validity_type_id = 2
						)
			),
			calculated_visit_allocation AS
			(
				SELECT
					CASE WHEN derived_visit_allocation.visit_count_to = 9999 THEN
						9999
					ELSE
						CASE WHEN derived_visit_allocation.visit_validity_type_id = 2 THEN
							CASE
								WHEN derived_visit_allocation.visit_count_to = 9999
									THEN 9999
								WHEN derived_visit_allocation.visit_count_from = 0
									THEN	(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from)
								ELSE
									(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from) + 1
							END
						ELSE
							(derived_visit_allocation.allocated_visit_count - derived_visit_allocation.used_visit_count)
						END
					END AS visit_number,
					derived_visit_allocation.used_visit_count AS used_visit_number,
					derived_visit_allocation.purchase_no
				FROM derived_visit_allocation
			)

			UPDATE
				##temptable
			SET
				remaining_MEM_CLI2_count = calculated_visit_allocation.visit_number
				
			FROM
				##temptable
				INNER JOIN calculated_visit_allocation ON ##temptable.purchase_no = calculated_visit_allocation.purchase_no

/* GUE PPAYVISIT */
		;WITH used_visit_allocations AS (
            	SELECT
					COUNT(1) AS used_visit_count,
					pvah2.purchase_visit_allocation_id
				FROM
					PPass.dbo.purchase_visit_allocation_his AS pvah2
					INNER JOIN PPass.dbo.purchase_visit_allocation pva2 ON pvah2.purchase_visit_allocation_id = pva2.purchase_visit_allocation_id
					INNER JOIN PPass.dbo.purchase_visit_allocation_link pval2 ON pva2.purchase_visit_allocation_grp_id = pval2.purchase_visit_allocation_grp_id
					LEFT OUTER JOIN PPass.dbo.source_visit_allocation_mem_gue_link salg ON pva2.source_visit_allocation_id = salg.guest_source_visit_allocation_id
				WHERE
						EXISTS (
							SELECT
								1
							FROM
								##temptable temp2
							WHERE
								temp2.purchase_no = pval2.purchase_no
						)
					AND pvah2.isdeleted = 0
					AND pva2.visitor_type_id = 2
					AND salg.guest_source_visit_allocation_id is NULL
				GROUP BY
					pvah2.purchase_visit_allocation_id
			),
			derived_visit_allocation AS (
				SELECT
					pva.visit_count_from,
					pva.visit_count_to,
					pva.visit_validity_type_id,
					CASE
						WHEN pva.visit_count_to = 9999
							THEN 9999
						WHEN pva.visit_count_from = 0
							THEN	(pva.visit_count_to - pva.visit_count_from)
						ELSE (pva.visit_count_to - pva.visit_count_from) + 1
					END AS allocated_visit_count,
					ISNULL(used_visit_allocations.used_visit_count, 0) AS used_visit_count,
					pur.purchase_no
				FROM
					PPass.dbo.purchase pur
					INNER JOIN PPass.dbo.purchase_visit_allocation_link pval ON pval.purchase_no = pur.purchase_no
					INNER JOIN PPass.dbo.purchase_visit_allocation_grp pvag ON pvag.purchase_visit_allocation_grp_id = pval.purchase_visit_allocation_grp_id
					INNER JOIN PPass.dbo.purchase_visit_allocation pva ON pva.purchase_visit_allocation_grp_id = pvag.purchase_visit_allocation_grp_id
					AND pva.charge_owner_id = 21
					AND pva.visitor_type_id = 2
					AND pva.visit_allocation_type_id NOT IN (3,4)
					AND pur.isDeleted = 0
					LEFT JOIN used_visit_allocations ON pva.purchase_visit_allocation_id = used_visit_allocations.purchase_visit_allocation_id
               	WHERE
						(
							(	pva.valid_from &lt;= getdate()
								AND pva.valid_to &gt;= getdate()
							)
							OR pva.visit_validity_type_id = 2
						)
			),
			calculated_visit_allocation AS
			(
				SELECT
					CASE WHEN derived_visit_allocation.visit_count_to = 9999 THEN
						9999
					ELSE
						CASE WHEN derived_visit_allocation.visit_validity_type_id = 2 THEN
							CASE
								WHEN derived_visit_allocation.visit_count_to = 9999
									THEN 9999
								WHEN derived_visit_allocation.visit_count_from = 0
									THEN	(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from)
								ELSE
									(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from) + 1
							END
						ELSE
							(derived_visit_allocation.allocated_visit_count - derived_visit_allocation.used_visit_count)
						END
					END AS visit_number,
					derived_visit_allocation.used_visit_count AS used_visit_number,
					derived_visit_allocation.purchase_no
				FROM derived_visit_allocation
			)

			UPDATE
				##temptable
			SET
				remaining_GUE_PP_count = calculated_visit_allocation.visit_number
			FROM
				##temptable
				INNER JOIN calculated_visit_allocation ON ##temptable.purchase_no = calculated_visit_allocation.purchase_no

/* GUE CPAYLIST */
		;WITH used_visit_allocations AS (
            	SELECT
					COUNT(1) AS used_visit_count,
					pvah2.purchase_visit_allocation_id
				FROM
					PPass.dbo.purchase_visit_allocation_his AS pvah2
					INNER JOIN PPass.dbo.purchase_visit_allocation pva2 ON pvah2.purchase_visit_allocation_id = pva2.purchase_visit_allocation_id
					INNER JOIN PPass.dbo.purchase_visit_allocation_link pval2 ON pva2.purchase_visit_allocation_grp_id = pval2.purchase_visit_allocation_grp_id
					LEFT OUTER JOIN PPass.dbo.source_visit_allocation_mem_gue_link salg ON pva2.source_visit_allocation_id = salg.guest_source_visit_allocation_id
				WHERE
						EXISTS (
							SELECT
								1
							FROM
								##temptable temp2
							WHERE
								temp2.purchase_no = pval2.purchase_no
						)
					AND pvah2.isdeleted = 0
					AND pva2.visitor_type_id = 2
					AND salg.guest_source_visit_allocation_id is NULL
				GROUP BY
					pvah2.purchase_visit_allocation_id
			),
			derived_visit_allocation AS (
				SELECT
					pva.visit_count_from,
					pva.visit_count_to,
					pva.visit_validity_type_id,
					CASE
						WHEN pva.visit_count_to = 9999
							THEN 9999
						WHEN pva.visit_count_from = 0
							THEN	(pva.visit_count_to - pva.visit_count_from)
						ELSE (pva.visit_count_to - pva.visit_count_from) + 1
					END AS allocated_visit_count,
					ISNULL(used_visit_allocations.used_visit_count, 0) AS used_visit_count,
					pur.purchase_no
				FROM
					PPass.dbo.purchase pur
					INNER JOIN PPass.dbo.purchase_visit_allocation_link pval ON pval.purchase_no = pur.purchase_no
					INNER JOIN PPass.dbo.purchase_visit_allocation_grp pvag ON pvag.purchase_visit_allocation_grp_id = pval.purchase_visit_allocation_grp_id
					INNER JOIN PPass.dbo.purchase_visit_allocation pva ON pva.purchase_visit_allocation_grp_id = pvag.purchase_visit_allocation_grp_id
					AND pva.charge_owner_id = 22
					AND pva.visitor_type_id = 2
					AND pva.visit_allocation_type_id NOT IN (3,4)
					AND pur.isDeleted = 0
					LEFT JOIN used_visit_allocations ON pva.purchase_visit_allocation_id = used_visit_allocations.purchase_visit_allocation_id
               	WHERE
						(
							(	pva.valid_from &lt;= getdate()
								AND pva.valid_to &gt;= getdate()
							)
							OR pva.visit_validity_type_id = 2
						)
			),
			calculated_visit_allocation AS
			(
				SELECT
					CASE WHEN derived_visit_allocation.visit_count_to = 9999 THEN
						9999
					ELSE
						CASE WHEN derived_visit_allocation.visit_validity_type_id = 2 THEN
							CASE
								WHEN derived_visit_allocation.visit_count_to = 9999
									THEN 9999
								WHEN derived_visit_allocation.visit_count_from = 0
									THEN	(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from)
								ELSE
									(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from) + 1
							END
						ELSE
							(derived_visit_allocation.allocated_visit_count - derived_visit_allocation.used_visit_count)
						END
					END AS visit_number,
					derived_visit_allocation.used_visit_count AS used_visit_number,
					derived_visit_allocation.purchase_no
				FROM derived_visit_allocation
			)

			UPDATE
				##temptable
			SET
				remaining_GUE_CLI_count = calculated_visit_allocation.visit_number
			FROM
				##temptable
				INNER JOIN calculated_visit_allocation ON ##temptable.purchase_no = calculated_visit_allocation.purchase_no

/* GUE CPAYVISIT2 */
		;WITH used_visit_allocations AS (
            	SELECT
					COUNT(1) AS used_visit_count,
					pvah2.purchase_visit_allocation_id
				FROM
					PPass.dbo.purchase_visit_allocation_his AS pvah2
					INNER JOIN PPass.dbo.purchase_visit_allocation pva2 ON pvah2.purchase_visit_allocation_id = pva2.purchase_visit_allocation_id
					INNER JOIN PPass.dbo.purchase_visit_allocation_link pval2 ON pva2.purchase_visit_allocation_grp_id = pval2.purchase_visit_allocation_grp_id
					LEFT OUTER JOIN PPass.dbo.source_visit_allocation_mem_gue_link salg ON pva2.source_visit_allocation_id = salg.guest_source_visit_allocation_id
				WHERE
						EXISTS (
							SELECT
								1
							FROM
								##temptable temp2
							WHERE
								temp2.purchase_no = pval2.purchase_no
						)
					AND pvah2.isdeleted = 0
					AND pva2.visitor_type_id = 2
					AND salg.guest_source_visit_allocation_id is NULL
				GROUP BY
					pvah2.purchase_visit_allocation_id
			),
			derived_visit_allocation AS (
				SELECT
					pva.visit_count_from,
					pva.visit_count_to,
					pva.visit_validity_type_id,
					CASE
						WHEN pva.visit_count_to = 9999
							THEN 9999
						WHEN pva.visit_count_from = 0
							THEN	(pva.visit_count_to - pva.visit_count_from)
						ELSE (pva.visit_count_to - pva.visit_count_from) + 1
					END AS allocated_visit_count,
					ISNULL(used_visit_allocations.used_visit_count, 0) AS used_visit_count,
					pur.purchase_no
				FROM
					PPass.dbo.purchase pur
					INNER JOIN PPass.dbo.purchase_visit_allocation_link pval ON pval.purchase_no = pur.purchase_no
					INNER JOIN PPass.dbo.purchase_visit_allocation_grp pvag ON pvag.purchase_visit_allocation_grp_id = pval.purchase_visit_allocation_grp_id
					INNER JOIN PPass.dbo.purchase_visit_allocation pva ON pva.purchase_visit_allocation_grp_id = pvag.purchase_visit_allocation_grp_id
					AND pva.charge_owner_id = 25
					AND pva.visitor_type_id = 2
					AND pva.visit_allocation_type_id NOT IN (3,4)
					AND pur.isDeleted = 0
					LEFT JOIN used_visit_allocations ON pva.purchase_visit_allocation_id = used_visit_allocations.purchase_visit_allocation_id
               	WHERE
						(
							(	pva.valid_from &lt;= getdate()
								AND pva.valid_to &gt;= getdate()
							)
							OR pva.visit_validity_type_id = 2
						)
			),
			calculated_visit_allocation AS
			(
				SELECT
					CASE WHEN derived_visit_allocation.visit_count_to = 9999 THEN
						9999
					ELSE
						CASE WHEN derived_visit_allocation.visit_validity_type_id = 2 THEN
							CASE
								WHEN derived_visit_allocation.visit_count_to = 9999
									THEN 9999
								WHEN derived_visit_allocation.visit_count_from = 0
									THEN	(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from)
								ELSE
									(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from) + 1
							END
						ELSE
							(derived_visit_allocation.allocated_visit_count - derived_visit_allocation.used_visit_count)
						END
					END AS visit_number,
					derived_visit_allocation.used_visit_count AS used_visit_number,
					derived_visit_allocation.purchase_no
				FROM derived_visit_allocation
			)

			UPDATE
				##temptable
			SET
				remaining_GUE_CLI2_count = calculated_visit_allocation.visit_number
			FROM
				##temptable
				INNER JOIN calculated_visit_allocation ON ##temptable.purchase_no = calculated_visit_allocation.purchase_no

/*MGU PPAYVISIT */
		;WITH used_visit_allocations AS (
            	SELECT
					COUNT(1) AS used_visit_count,
					pvah2.purchase_visit_allocation_id
				FROM
					PPass.dbo.purchase_visit_allocation_his AS pvah2
					INNER JOIN PPass.dbo.purchase_visit_allocation pva2 ON pvah2.purchase_visit_allocation_id = pva2.purchase_visit_allocation_id
					INNER JOIN PPass.dbo.purchase_visit_allocation_link pval2 ON pva2.purchase_visit_allocation_grp_id = pval2.purchase_visit_allocation_grp_id
					LEFT OUTER JOIN PPass.dbo.source_visit_allocation_mem_gue_link salg ON pva2.source_visit_allocation_id = salg.guest_source_visit_allocation_id
				WHERE
						EXISTS (
							SELECT
								1
							FROM
								##temptable temp2
							WHERE
								temp2.purchase_no = pval2.purchase_no
						)
					AND pvah2.isdeleted = 0
					AND pva2.visitor_type_id = 3
					AND salg.guest_source_visit_allocation_id is NULL
				GROUP BY
					pvah2.purchase_visit_allocation_id
			),
			derived_visit_allocation AS (
				SELECT
					pva.visit_count_from,
					pva.visit_count_to,
					pva.visit_validity_type_id,
					CASE
						WHEN pva.visit_count_to = 9999
							THEN 9999
						WHEN pva.visit_count_from = 0
							THEN	(pva.visit_count_to - pva.visit_count_from)
						ELSE (pva.visit_count_to - pva.visit_count_from) + 1
					END AS allocated_visit_count,
					ISNULL(used_visit_allocations.used_visit_count, 0) AS used_visit_count,
					pur.purchase_no
				FROM
					PPass.dbo.purchase pur
					INNER JOIN PPass.dbo.purchase_visit_allocation_link pval ON pval.purchase_no = pur.purchase_no
					INNER JOIN PPass.dbo.purchase_visit_allocation_grp pvag ON pvag.purchase_visit_allocation_grp_id = pval.purchase_visit_allocation_grp_id
					INNER JOIN PPass.dbo.purchase_visit_allocation pva ON pva.purchase_visit_allocation_grp_id = pvag.purchase_visit_allocation_grp_id
					AND pva.charge_owner_id = 21
					AND pva.visitor_type_id = 3
					AND pva.visit_allocation_type_id NOT IN (3,4)
					AND pur.isDeleted = 0
					LEFT JOIN used_visit_allocations ON pva.purchase_visit_allocation_id = used_visit_allocations.purchase_visit_allocation_id
               	WHERE
						(
							(	pva.valid_from &lt;= getdate()
								AND pva.valid_to &gt;= getdate()
							)
							OR pva.visit_validity_type_id = 2
						)
			),
			calculated_visit_allocation AS
			(
				SELECT
					CASE WHEN derived_visit_allocation.visit_count_to = 9999 THEN
						9999
					ELSE
						CASE WHEN derived_visit_allocation.visit_validity_type_id = 2 THEN
							CASE
								WHEN derived_visit_allocation.visit_count_to = 9999
									THEN 9999
								WHEN derived_visit_allocation.visit_count_from = 0
									THEN	(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from)
								ELSE
									(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from) + 1
							END
						ELSE
							(derived_visit_allocation.allocated_visit_count - derived_visit_allocation.used_visit_count)
						END
					END AS visit_number,
					derived_visit_allocation.used_visit_count AS used_visit_number,
					derived_visit_allocation.purchase_no
				FROM derived_visit_allocation
			)

			UPDATE
				##temptable
			SET
				remaining_MGU_PP_count = calculated_visit_allocation.visit_number
			FROM
				##temptable
				INNER JOIN calculated_visit_allocation ON ##temptable.purchase_no = calculated_visit_allocation.purchase_no
/* MGU CPAYVISIT */
		;WITH used_visit_allocations AS (
            	SELECT
					COUNT(1) AS used_visit_count,
					pvah2.purchase_visit_allocation_id
				FROM
					PPass.dbo.purchase_visit_allocation_his AS pvah2
					INNER JOIN PPass.dbo.purchase_visit_allocation pva2 ON pvah2.purchase_visit_allocation_id = pva2.purchase_visit_allocation_id
					INNER JOIN PPass.dbo.purchase_visit_allocation_link pval2 ON pva2.purchase_visit_allocation_grp_id = pval2.purchase_visit_allocation_grp_id
					LEFT OUTER JOIN PPass.dbo.source_visit_allocation_mem_gue_link salg ON pva2.source_visit_allocation_id = salg.guest_source_visit_allocation_id
				WHERE
						EXISTS (
							SELECT
								1
							FROM
								##temptable temp2
							WHERE
								temp2.purchase_no = pval2.purchase_no
						)
					AND pvah2.isdeleted = 0
					AND pva2.visitor_type_id = 3
					AND salg.guest_source_visit_allocation_id is NULL
				GROUP BY
					pvah2.purchase_visit_allocation_id
			),
			derived_visit_allocation AS (
				SELECT
					pva.visit_count_from,
					pva.visit_count_to,
					pva.visit_validity_type_id,
					CASE
						WHEN pva.visit_count_to = 9999
							THEN 9999
						WHEN pva.visit_count_from = 0
							THEN	(pva.visit_count_to - pva.visit_count_from)
						ELSE (pva.visit_count_to - pva.visit_count_from) + 1
					END AS allocated_visit_count,
					ISNULL(used_visit_allocations.used_visit_count, 0) AS used_visit_count,
					pur.purchase_no
				FROM
					PPass.dbo.purchase pur
					INNER JOIN PPass.dbo.purchase_visit_allocation_link pval ON pval.purchase_no = pur.purchase_no
					INNER JOIN PPass.dbo.purchase_visit_allocation_grp pvag ON pvag.purchase_visit_allocation_grp_id = pval.purchase_visit_allocation_grp_id
					INNER JOIN PPass.dbo.purchase_visit_allocation pva ON pva.purchase_visit_allocation_grp_id = pvag.purchase_visit_allocation_grp_id
					AND pva.charge_owner_id = 22
					AND pva.visitor_type_id = 3
					AND pva.visit_allocation_type_id NOT IN (3,4)
					AND pur.isDeleted = 0
					LEFT JOIN used_visit_allocations ON pva.purchase_visit_allocation_id = used_visit_allocations.purchase_visit_allocation_id
               	WHERE
						(
							(	pva.valid_from &lt;= getdate()
								AND pva.valid_to &gt;= getdate()
							)
							OR pva.visit_validity_type_id = 2
						)
			),
			calculated_visit_allocation AS
			(
				SELECT
					CASE WHEN derived_visit_allocation.visit_count_to = 9999 THEN
						9999
					ELSE
						CASE WHEN derived_visit_allocation.visit_validity_type_id = 2 THEN
							CASE
								WHEN derived_visit_allocation.visit_count_to = 9999
									THEN 9999
								WHEN derived_visit_allocation.visit_count_from = 0
									THEN	(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from)
								ELSE
									(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from) + 1
							END
						ELSE
							(derived_visit_allocation.allocated_visit_count - derived_visit_allocation.used_visit_count)
						END
					END AS visit_number,
					derived_visit_allocation.used_visit_count AS used_visit_number,
					derived_visit_allocation.purchase_no
				FROM derived_visit_allocation
			)

			UPDATE
				##temptable
			SET
				remaining_MGU_CLI_count = calculated_visit_allocation.visit_number
			FROM
				##temptable
				INNER JOIN calculated_visit_allocation ON ##temptable.purchase_no = calculated_visit_allocation.purchase_no

/* MGU CPAYVISIT2 */
		;WITH used_visit_allocations AS (
            	SELECT
					COUNT(1) AS used_visit_count,
					pvah2.purchase_visit_allocation_id
				FROM
					PPass.dbo.purchase_visit_allocation_his AS pvah2
					INNER JOIN PPass.dbo.purchase_visit_allocation pva2 ON pvah2.purchase_visit_allocation_id = pva2.purchase_visit_allocation_id
					INNER JOIN PPass.dbo.purchase_visit_allocation_link pval2 ON pva2.purchase_visit_allocation_grp_id = pval2.purchase_visit_allocation_grp_id
					LEFT OUTER JOIN PPass.dbo.source_visit_allocation_mem_gue_link salg ON pva2.source_visit_allocation_id = salg.guest_source_visit_allocation_id
				WHERE
						EXISTS (
							SELECT
								1
							FROM
								##temptable temp2
							WHERE
								temp2.purchase_no = pval2.purchase_no
						)
					AND pvah2.isdeleted = 0
					AND pva2.visitor_type_id = 3
					AND salg.guest_source_visit_allocation_id is NULL
				GROUP BY
					pvah2.purchase_visit_allocation_id
			),
			derived_visit_allocation AS (
				SELECT
					pva.visit_count_from,
					pva.visit_count_to,
					pva.visit_validity_type_id,
					CASE
						WHEN pva.visit_count_to = 9999
							THEN 9999
						WHEN pva.visit_count_from = 0
							THEN	(pva.visit_count_to - pva.visit_count_from)
						ELSE (pva.visit_count_to - pva.visit_count_from) + 1
					END AS allocated_visit_count,
					ISNULL(used_visit_allocations.used_visit_count, 0) AS used_visit_count,
					pur.purchase_no
				FROM
					PPass.dbo.purchase pur
					INNER JOIN PPass.dbo.purchase_visit_allocation_link pval ON pval.purchase_no = pur.purchase_no
					INNER JOIN PPass.dbo.purchase_visit_allocation_grp pvag ON pvag.purchase_visit_allocation_grp_id = pval.purchase_visit_allocation_grp_id
					INNER JOIN PPass.dbo.purchase_visit_allocation pva ON pva.purchase_visit_allocation_grp_id = pvag.purchase_visit_allocation_grp_id
					AND pva.charge_owner_id = 25
					AND pva.visitor_type_id = 3
					AND pva.visit_allocation_type_id NOT IN (3,4)
					AND pur.isDeleted = 0
					LEFT JOIN used_visit_allocations ON pva.purchase_visit_allocation_id = used_visit_allocations.purchase_visit_allocation_id
               	WHERE
						(
							(	pva.valid_from &lt;= getdate()
								AND pva.valid_to &gt;= getdate()
							)
							OR pva.visit_validity_type_id = 2
						)
			),
			calculated_visit_allocation AS
			(
				SELECT
					CASE WHEN derived_visit_allocation.visit_count_to = 9999 THEN
						9999
					ELSE
						CASE WHEN derived_visit_allocation.visit_validity_type_id = 2 THEN
							CASE
								WHEN derived_visit_allocation.visit_count_to = 9999
									THEN 9999
								WHEN derived_visit_allocation.visit_count_from = 0
									THEN	(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from)
								ELSE
									(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from) + 1
							END
						ELSE
							(derived_visit_allocation.allocated_visit_count - derived_visit_allocation.used_visit_count)
						END
					END AS visit_number,
					derived_visit_allocation.used_visit_count AS used_visit_number,
					derived_visit_allocation.purchase_no
				FROM derived_visit_allocation
			)

			UPDATE
				##temptable
			SET
				remaining_MGU_CLI2_count = calculated_visit_allocation.visit_number
			FROM
				##temptable
				INNER JOIN calculated_visit_allocation ON ##temptable.purchase_no = calculated_visit_allocation.purchase_no

/* SHAREDMEM PPAYVISIT */
		;WITH used_visit_allocations AS (
            	SELECT
					COUNT(1) AS used_visit_count,
					pvah2.purchase_visit_allocation_id
				FROM
					PPass.dbo.purchase_visit_allocation_his AS pvah2
					INNER JOIN PPass.dbo.purchase_visit_allocation pva2 ON pvah2.purchase_visit_allocation_id = pva2.purchase_visit_allocation_id
					INNER JOIN PPass.dbo.purchase_visit_allocation_link pval2 ON pva2.purchase_visit_allocation_grp_id = pval2.purchase_visit_allocation_grp_id
					LEFT OUTER JOIN PPass.dbo.source_visit_allocation_mem_gue_link salg ON pva2.source_visit_allocation_id = salg.guest_source_visit_allocation_id
				WHERE
						EXISTS (
							SELECT
								1
							FROM
								##temptable temp2
							WHERE
								temp2.purchase_no = pval2.purchase_no
						)
					AND pvah2.isdeleted = 0
					AND pva2.visitor_type_id = 8
					AND salg.guest_source_visit_allocation_id is NULL
				GROUP BY
					pvah2.purchase_visit_allocation_id
			),
			derived_visit_allocation AS (
				SELECT
					pva.visit_count_from,
					pva.visit_count_to,
					pva.visit_validity_type_id,
					CASE
						WHEN pva.visit_count_to = 9999
							THEN 9999
						WHEN pva.visit_count_from = 0
							THEN	(pva.visit_count_to - pva.visit_count_from)
						ELSE (pva.visit_count_to - pva.visit_count_from) + 1
					END AS allocated_visit_count,
					ISNULL(used_visit_allocations.used_visit_count, 0) AS used_visit_count,
					pur.purchase_no
				FROM
					PPass.dbo.purchase pur
					INNER JOIN PPass.dbo.purchase_visit_allocation_link pval ON pval.purchase_no = pur.purchase_no
					INNER JOIN PPass.dbo.purchase_visit_allocation_grp pvag ON pvag.purchase_visit_allocation_grp_id = pval.purchase_visit_allocation_grp_id
					INNER JOIN PPass.dbo.purchase_visit_allocation pva ON pva.purchase_visit_allocation_grp_id = pvag.purchase_visit_allocation_grp_id
					AND pva.charge_owner_id = 21
					AND pva.visitor_type_id = 8
					AND pva.visit_allocation_type_id NOT IN (3,4)
					AND pur.isDeleted = 0
					LEFT JOIN used_visit_allocations ON pva.purchase_visit_allocation_id = used_visit_allocations.purchase_visit_allocation_id
               	WHERE
						(
							(	pva.valid_from &lt;= getdate()
								AND pva.valid_to &gt;= getdate()
							)
							OR pva.visit_validity_type_id = 2
						)
			),
			calculated_visit_allocation AS
			(
				SELECT
					CASE WHEN derived_visit_allocation.visit_count_to = 9999 THEN
						9999
					ELSE
						CASE WHEN derived_visit_allocation.visit_validity_type_id = 2 THEN
							CASE
								WHEN derived_visit_allocation.visit_count_to = 9999
									THEN 9999
								WHEN derived_visit_allocation.visit_count_from = 0
									THEN	(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from)
								ELSE
									(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from) + 1
							END
						ELSE
							(derived_visit_allocation.allocated_visit_count - derived_visit_allocation.used_visit_count)
						END
					END AS visit_number,
					derived_visit_allocation.used_visit_count AS used_visit_number,
					derived_visit_allocation.purchase_no
				FROM derived_visit_allocation
			)

			UPDATE
				##temptable
			SET
				remaining_MEM_PP_count = calculated_visit_allocation.visit_number
			FROM
				##temptable
				INNER JOIN calculated_visit_allocation ON ##temptable.purchase_no = calculated_visit_allocation.purchase_no

/* SHAREDMEM CPAYVISIT */
		;WITH used_visit_allocations AS (
            	SELECT
					COUNT(1) AS used_visit_count,
					pvah2.purchase_visit_allocation_id
				FROM
					PPass.dbo.purchase_visit_allocation_his AS pvah2
					INNER JOIN PPass.dbo.purchase_visit_allocation pva2 ON pvah2.purchase_visit_allocation_id = pva2.purchase_visit_allocation_id
					INNER JOIN PPass.dbo.purchase_visit_allocation_link pval2 ON pva2.purchase_visit_allocation_grp_id = pval2.purchase_visit_allocation_grp_id
					LEFT OUTER JOIN PPass.dbo.source_visit_allocation_mem_gue_link salg ON pva2.source_visit_allocation_id = salg.guest_source_visit_allocation_id
				WHERE
						EXISTS (
							SELECT
								1
							FROM
								##temptable temp2
							WHERE
								temp2.purchase_no = pval2.purchase_no
						)
					AND pvah2.isdeleted = 0
					AND pva2.visitor_type_id = 8
					AND salg.guest_source_visit_allocation_id is NULL
				GROUP BY
					pvah2.purchase_visit_allocation_id
			),
			derived_visit_allocation AS (
				SELECT
					pva.visit_count_from,
					pva.visit_count_to,
					pva.visit_validity_type_id,
					CASE
						WHEN pva.visit_count_to = 9999
							THEN 9999
						WHEN pva.visit_count_from = 0
							THEN	(pva.visit_count_to - pva.visit_count_from)
						ELSE (pva.visit_count_to - pva.visit_count_from) + 1
					END AS allocated_visit_count,
					ISNULL(used_visit_allocations.used_visit_count, 0) AS used_visit_count,
					pur.purchase_no
				FROM
					PPass.dbo.purchase pur
					INNER JOIN PPass.dbo.purchase_visit_allocation_link pval ON pval.purchase_no = pur.purchase_no
					INNER JOIN PPass.dbo.purchase_visit_allocation_grp pvag ON pvag.purchase_visit_allocation_grp_id = pval.purchase_visit_allocation_grp_id
					INNER JOIN PPass.dbo.purchase_visit_allocation pva ON pva.purchase_visit_allocation_grp_id = pvag.purchase_visit_allocation_grp_id
					AND pva.charge_owner_id = 22
					AND pva.visitor_type_id = 8
					AND pva.visit_allocation_type_id NOT IN (3,4)
					AND pur.isDeleted = 0
					LEFT JOIN used_visit_allocations ON pva.purchase_visit_allocation_id = used_visit_allocations.purchase_visit_allocation_id
               	WHERE
						(
							(	pva.valid_from &lt;= getdate()
								AND pva.valid_to &gt;= getdate()
							)
							OR pva.visit_validity_type_id = 2
						)
			),
			calculated_visit_allocation AS
			(
				SELECT
					CASE WHEN derived_visit_allocation.visit_count_to = 9999 THEN
						9999
					ELSE
						CASE WHEN derived_visit_allocation.visit_validity_type_id = 2 THEN
							CASE
								WHEN derived_visit_allocation.visit_count_to = 9999
									THEN 9999
								WHEN derived_visit_allocation.visit_count_from = 0
									THEN	(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from)
								ELSE
									(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from) + 1
							END
						ELSE
							(derived_visit_allocation.allocated_visit_count - derived_visit_allocation.used_visit_count)
						END
					END AS visit_number,
					derived_visit_allocation.used_visit_count AS used_visit_number,
					derived_visit_allocation.purchase_no
				FROM derived_visit_allocation
			)

			UPDATE
				##temptable
			SET
				remaining_MEM_CLI_count = calculated_visit_allocation.visit_number
			FROM
				##temptable
				INNER JOIN calculated_visit_allocation ON ##temptable.purchase_no = calculated_visit_allocation.purchase_no
/* SHAREDMEM CPAYVISIT2 */
		;WITH used_visit_allocations AS (
            	SELECT
					COUNT(1) AS used_visit_count,
					pvah2.purchase_visit_allocation_id
				FROM
					PPass.dbo.purchase_visit_allocation_his AS pvah2
					INNER JOIN PPass.dbo.purchase_visit_allocation pva2 ON pvah2.purchase_visit_allocation_id = pva2.purchase_visit_allocation_id
					INNER JOIN PPass.dbo.purchase_visit_allocation_link pval2 ON pva2.purchase_visit_allocation_grp_id = pval2.purchase_visit_allocation_grp_id
					LEFT OUTER JOIN PPass.dbo.source_visit_allocation_mem_gue_link salg ON pva2.source_visit_allocation_id = salg.guest_source_visit_allocation_id
				WHERE
						EXISTS (
							SELECT
								1
							FROM
								##temptable temp2
							WHERE
								temp2.purchase_no = pval2.purchase_no
						)
					AND pvah2.isdeleted = 0
					AND pva2.visitor_type_id = 8
					AND salg.guest_source_visit_allocation_id is NULL
				GROUP BY
					pvah2.purchase_visit_allocation_id
			),
			derived_visit_allocation AS (
				SELECT
					pva.visit_count_from,
					pva.visit_count_to,
					pva.visit_validity_type_id,
					CASE
						WHEN pva.visit_count_to = 9999
							THEN 9999
						WHEN pva.visit_count_from = 0
							THEN	(pva.visit_count_to - pva.visit_count_from)
						ELSE (pva.visit_count_to - pva.visit_count_from) + 1
					END AS allocated_visit_count,
					ISNULL(used_visit_allocations.used_visit_count, 0) AS used_visit_count,
					pur.purchase_no
				FROM
					PPass.dbo.purchase pur
					INNER JOIN PPass.dbo.purchase_visit_allocation_link pval ON pval.purchase_no = pur.purchase_no
					INNER JOIN PPass.dbo.purchase_visit_allocation_grp pvag ON pvag.purchase_visit_allocation_grp_id = pval.purchase_visit_allocation_grp_id
					INNER JOIN PPass.dbo.purchase_visit_allocation pva ON pva.purchase_visit_allocation_grp_id = pvag.purchase_visit_allocation_grp_id
					AND pva.charge_owner_id = 25
					AND pva.visitor_type_id = 8
					AND pva.visit_allocation_type_id NOT IN (3,4)
					AND pur.isDeleted = 0
					LEFT JOIN used_visit_allocations ON pva.purchase_visit_allocation_id = used_visit_allocations.purchase_visit_allocation_id
               	WHERE
						(
							(	pva.valid_from &lt;= getdate()
								AND pva.valid_to &gt;= getdate()
							)
							OR pva.visit_validity_type_id = 2
						)
			),
			calculated_visit_allocation AS
			(
				SELECT
					CASE WHEN derived_visit_allocation.visit_count_to = 9999 THEN
						9999
					ELSE
						CASE WHEN derived_visit_allocation.visit_validity_type_id = 2 THEN
							CASE
								WHEN derived_visit_allocation.visit_count_to = 9999
									THEN 9999
								WHEN derived_visit_allocation.visit_count_from = 0
									THEN	(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from)
								ELSE
									(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from) + 1
							END
						ELSE
							(derived_visit_allocation.allocated_visit_count - derived_visit_allocation.used_visit_count)
						END
					END AS visit_number,
					derived_visit_allocation.used_visit_count AS used_visit_number,
					derived_visit_allocation.purchase_no
				FROM derived_visit_allocation
			)

			UPDATE
				##temptable
			SET
				remaining_MEM_CLI2_count = calculated_visit_allocation.visit_number
			FROM
				##temptable
				INNER JOIN calculated_visit_allocation ON ##temptable.purchase_no = calculated_visit_allocation.purchase_no

/* SHAREDGUE PPAYVISIT */
		;WITH used_visit_allocations AS (
            	SELECT
					COUNT(1) AS used_visit_count,
					pvah2.purchase_visit_allocation_id
				FROM
					PPass.dbo.purchase_visit_allocation_his AS pvah2
					INNER JOIN PPass.dbo.purchase_visit_allocation pva2 ON pvah2.purchase_visit_allocation_id = pva2.purchase_visit_allocation_id
					INNER JOIN PPass.dbo.purchase_visit_allocation_link pval2 ON pva2.purchase_visit_allocation_grp_id = pval2.purchase_visit_allocation_grp_id
					LEFT OUTER JOIN PPass.dbo.source_visit_allocation_mem_gue_link salg ON pva2.source_visit_allocation_id = salg.guest_source_visit_allocation_id
				WHERE
						EXISTS (
							SELECT
								1
							FROM
								##temptable temp2
							WHERE
								temp2.purchase_no = pval2.purchase_no
						)
					AND pvah2.isdeleted = 0
					AND pva2.visitor_type_id = 9
					AND salg.guest_source_visit_allocation_id is NULL
				GROUP BY
					pvah2.purchase_visit_allocation_id
			),
			derived_visit_allocation AS (
				SELECT
					pva.visit_count_from,
					pva.visit_count_to,
					pva.visit_validity_type_id,
					CASE
						WHEN pva.visit_count_to = 9999
							THEN 9999
						WHEN pva.visit_count_from = 0
							THEN	(pva.visit_count_to - pva.visit_count_from)
						ELSE (pva.visit_count_to - pva.visit_count_from) + 1
					END AS allocated_visit_count,
					ISNULL(used_visit_allocations.used_visit_count, 0) AS used_visit_count,
					pur.purchase_no
				FROM
					PPass.dbo.purchase pur
					INNER JOIN PPass.dbo.purchase_visit_allocation_link pval ON pval.purchase_no = pur.purchase_no
					INNER JOIN PPass.dbo.purchase_visit_allocation_grp pvag ON pvag.purchase_visit_allocation_grp_id = pval.purchase_visit_allocation_grp_id
					INNER JOIN PPass.dbo.purchase_visit_allocation pva ON pva.purchase_visit_allocation_grp_id = pvag.purchase_visit_allocation_grp_id
					AND pva.charge_owner_id = 21
					AND pva.visitor_type_id = 9
					AND pva.visit_allocation_type_id NOT IN (3,4)
					AND pur.isDeleted = 0
					LEFT JOIN used_visit_allocations ON pva.purchase_visit_allocation_id = used_visit_allocations.purchase_visit_allocation_id
               	WHERE
						(
							(	pva.valid_from &lt;= getdate()
								AND pva.valid_to &gt;= getdate()
							)
							OR pva.visit_validity_type_id = 2
						)
			),
			calculated_visit_allocation AS
			(
				SELECT
					CASE WHEN derived_visit_allocation.visit_count_to = 9999 THEN
						9999
					ELSE
						CASE WHEN derived_visit_allocation.visit_validity_type_id = 2 THEN
							CASE
								WHEN derived_visit_allocation.visit_count_to = 9999
									THEN 9999
								WHEN derived_visit_allocation.visit_count_from = 0
									THEN	(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from)
								ELSE
									(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from) + 1
							END
						ELSE
							(derived_visit_allocation.allocated_visit_count - derived_visit_allocation.used_visit_count)
						END
					END AS visit_number,
					derived_visit_allocation.used_visit_count AS used_visit_number,
					derived_visit_allocation.purchase_no
				FROM derived_visit_allocation
			)

			UPDATE
				##temptable
			SET
				remaining_GUE_PP_count = calculated_visit_allocation.visit_number
			FROM
				##temptable
				INNER JOIN calculated_visit_allocation ON ##temptable.purchase_no = calculated_visit_allocation.purchase_no

/* SHAREDGUE CPAYVISIT */
		;WITH used_visit_allocations AS (
            	SELECT
					COUNT(1) AS used_visit_count,
					pvah2.purchase_visit_allocation_id
				FROM
					PPass.dbo.purchase_visit_allocation_his AS pvah2
					INNER JOIN PPass.dbo.purchase_visit_allocation pva2 ON pvah2.purchase_visit_allocation_id = pva2.purchase_visit_allocation_id
					INNER JOIN PPass.dbo.purchase_visit_allocation_link pval2 ON pva2.purchase_visit_allocation_grp_id = pval2.purchase_visit_allocation_grp_id
					LEFT OUTER JOIN PPass.dbo.source_visit_allocation_mem_gue_link salg ON pva2.source_visit_allocation_id = salg.guest_source_visit_allocation_id
				WHERE
						EXISTS (
							SELECT
								1
							FROM
								##temptable temp2
							WHERE
								temp2.purchase_no = pval2.purchase_no
						)
					AND pvah2.isdeleted = 0
					AND pva2.visitor_type_id = 9
					AND salg.guest_source_visit_allocation_id is NULL
				GROUP BY
					pvah2.purchase_visit_allocation_id
			),
			derived_visit_allocation AS (
				SELECT
					pva.visit_count_from,
					pva.visit_count_to,
					pva.visit_validity_type_id,
					CASE
						WHEN pva.visit_count_to = 9999
							THEN 9999
						WHEN pva.visit_count_from = 0
							THEN	(pva.visit_count_to - pva.visit_count_from)
						ELSE (pva.visit_count_to - pva.visit_count_from) + 1
					END AS allocated_visit_count,
					ISNULL(used_visit_allocations.used_visit_count, 0) AS used_visit_count,
					pur.purchase_no
				FROM
					PPass.dbo.purchase pur
					INNER JOIN PPass.dbo.purchase_visit_allocation_link pval ON pval.purchase_no = pur.purchase_no
					INNER JOIN PPass.dbo.purchase_visit_allocation_grp pvag ON pvag.purchase_visit_allocation_grp_id = pval.purchase_visit_allocation_grp_id
					INNER JOIN PPass.dbo.purchase_visit_allocation pva ON pva.purchase_visit_allocation_grp_id = pvag.purchase_visit_allocation_grp_id
					AND pva.charge_owner_id = 22
					AND pva.visitor_type_id = 9
					AND pva.visit_allocation_type_id NOT IN (3,4)
					AND pur.isDeleted = 0
					LEFT JOIN used_visit_allocations ON pva.purchase_visit_allocation_id = used_visit_allocations.purchase_visit_allocation_id
               	WHERE
						(
							(	pva.valid_from &lt;= getdate()
								AND pva.valid_to &gt;= getdate()
							)
							OR pva.visit_validity_type_id = 2
						)
			),
			calculated_visit_allocation AS
			(
				SELECT
					CASE WHEN derived_visit_allocation.visit_count_to = 9999 THEN
						9999
					ELSE
						CASE WHEN derived_visit_allocation.visit_validity_type_id = 2 THEN
							CASE
								WHEN derived_visit_allocation.visit_count_to = 9999
									THEN 9999
								WHEN derived_visit_allocation.visit_count_from = 0
									THEN	(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from)
								ELSE
									(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from) + 1
							END
						ELSE
							(derived_visit_allocation.allocated_visit_count - derived_visit_allocation.used_visit_count)
						END
					END AS visit_number,
					derived_visit_allocation.used_visit_count AS used_visit_number,
					derived_visit_allocation.purchase_no
				FROM derived_visit_allocation
			)

			UPDATE
				##temptable
			SET
				remaining_GUE_CLI_count = calculated_visit_allocation.visit_number
			FROM
				##temptable
				INNER JOIN calculated_visit_allocation ON ##temptable.purchase_no = calculated_visit_allocation.purchase_no

/* SHAREDGUE CPAYVISIT2 */
		;WITH used_visit_allocations AS (
            	SELECT
					COUNT(1) AS used_visit_count,
					pvah2.purchase_visit_allocation_id
				FROM
					PPass.dbo.purchase_visit_allocation_his AS pvah2
					INNER JOIN PPass.dbo.purchase_visit_allocation pva2 ON pvah2.purchase_visit_allocation_id = pva2.purchase_visit_allocation_id
					INNER JOIN PPass.dbo.purchase_visit_allocation_link pval2 ON pva2.purchase_visit_allocation_grp_id = pval2.purchase_visit_allocation_grp_id
					LEFT OUTER JOIN PPass.dbo.source_visit_allocation_mem_gue_link salg ON pva2.source_visit_allocation_id = salg.guest_source_visit_allocation_id
				WHERE
						EXISTS (
							SELECT
								1
							FROM
								##temptable temp2
							WHERE
								temp2.purchase_no = pval2.purchase_no
						)
					AND pvah2.isdeleted = 0
					AND pva2.visitor_type_id = 9
					AND salg.guest_source_visit_allocation_id is NULL
				GROUP BY
					pvah2.purchase_visit_allocation_id
			),
			derived_visit_allocation AS (
				SELECT
					pva.visit_count_from,
					pva.visit_count_to,
					pva.visit_validity_type_id,
					CASE
						WHEN pva.visit_count_to = 9999
							THEN 9999
						WHEN pva.visit_count_from = 0
							THEN	(pva.visit_count_to - pva.visit_count_from)
						ELSE (pva.visit_count_to - pva.visit_count_from) + 1
					END AS allocated_visit_count,
					ISNULL(used_visit_allocations.used_visit_count, 0) AS used_visit_count,
					pur.purchase_no
				FROM
					PPass.dbo.purchase pur
					INNER JOIN PPass.dbo.purchase_visit_allocation_link pval ON pval.purchase_no = pur.purchase_no
					INNER JOIN PPass.dbo.purchase_visit_allocation_grp pvag ON pvag.purchase_visit_allocation_grp_id = pval.purchase_visit_allocation_grp_id
					INNER JOIN PPass.dbo.purchase_visit_allocation pva ON pva.purchase_visit_allocation_grp_id = pvag.purchase_visit_allocation_grp_id
					AND pva.charge_owner_id = 25
					AND pva.visitor_type_id = 9
					AND pva.visit_allocation_type_id NOT IN (3,4)
					AND pur.isDeleted = 0
					LEFT JOIN used_visit_allocations ON pva.purchase_visit_allocation_id = used_visit_allocations.purchase_visit_allocation_id
               	WHERE
						(
							(	pva.valid_from &lt;= getdate()
								AND pva.valid_to &gt;= getdate()
							)
							OR pva.visit_validity_type_id = 2
						)
			),
			calculated_visit_allocation AS
			(
				SELECT
					CASE WHEN derived_visit_allocation.visit_count_to = 9999 THEN
						9999
					ELSE
						CASE WHEN derived_visit_allocation.visit_validity_type_id = 2 THEN
							CASE
								WHEN derived_visit_allocation.visit_count_to = 9999
									THEN 9999
								WHEN derived_visit_allocation.visit_count_from = 0
									THEN	(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from)
								ELSE
									(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from) + 1
							END
						ELSE
							(derived_visit_allocation.allocated_visit_count - derived_visit_allocation.used_visit_count)
						END
					END AS visit_number,
					derived_visit_allocation.used_visit_count AS used_visit_number,
					derived_visit_allocation.purchase_no
				FROM derived_visit_allocation
			)

			UPDATE
				##temptable
			SET
				remaining_GUE_CLI2_count = calculated_visit_allocation.visit_number
			FROM
				##temptable
				INNER JOIN calculated_visit_allocation ON ##temptable.purchase_no = calculated_visit_allocation.purchase_no
/* SHAREDMGU PPAYVISIT */

		;WITH used_visit_allocations AS (
            	SELECT
					COUNT(1) AS used_visit_count,
					pvah2.purchase_visit_allocation_id
				FROM
					PPass.dbo.purchase_visit_allocation_his AS pvah2
					INNER JOIN PPass.dbo.purchase_visit_allocation pva2 ON pvah2.purchase_visit_allocation_id = pva2.purchase_visit_allocation_id
					INNER JOIN PPass.dbo.purchase_visit_allocation_link pval2 ON pva2.purchase_visit_allocation_grp_id = pval2.purchase_visit_allocation_grp_id
					LEFT OUTER JOIN PPass.dbo.source_visit_allocation_mem_gue_link salg ON pva2.source_visit_allocation_id = salg.guest_source_visit_allocation_id
				WHERE
						EXISTS (
							SELECT
								1
							FROM
								##temptable temp2
							WHERE
								temp2.purchase_no = pval2.purchase_no
						)
					AND pvah2.isdeleted = 0
					AND pva2.visitor_type_id = 10
					AND salg.guest_source_visit_allocation_id is NULL
				GROUP BY
					pvah2.purchase_visit_allocation_id
			),
			derived_visit_allocation AS (
				SELECT
					pva.visit_count_from,
					pva.visit_count_to,
					pva.visit_validity_type_id,
					CASE
						WHEN pva.visit_count_to = 9999
							THEN 9999
						WHEN pva.visit_count_from = 0
							THEN	(pva.visit_count_to - pva.visit_count_from)
						ELSE (pva.visit_count_to - pva.visit_count_from) + 1
					END AS allocated_visit_count,
					ISNULL(used_visit_allocations.used_visit_count, 0) AS used_visit_count,
					pur.purchase_no
				FROM
					PPass.dbo.purchase pur
					INNER JOIN PPass.dbo.purchase_visit_allocation_link pval ON pval.purchase_no = pur.purchase_no
					INNER JOIN PPass.dbo.purchase_visit_allocation_grp pvag ON pvag.purchase_visit_allocation_grp_id = pval.purchase_visit_allocation_grp_id
					INNER JOIN PPass.dbo.purchase_visit_allocation pva ON pva.purchase_visit_allocation_grp_id = pvag.purchase_visit_allocation_grp_id
					AND pva.charge_owner_id = 21
					AND pva.visitor_type_id = 10
					AND pva.visit_allocation_type_id NOT IN (3,4)
					AND pur.isDeleted = 0
					LEFT JOIN used_visit_allocations ON pva.purchase_visit_allocation_id = used_visit_allocations.purchase_visit_allocation_id
               	WHERE
						(
							(	pva.valid_from &lt;= getdate()
								AND pva.valid_to &gt;= getdate()
							)
							OR pva.visit_validity_type_id = 2
						)
			),
			calculated_visit_allocation AS
			(
				SELECT
					CASE WHEN derived_visit_allocation.visit_count_to = 9999 THEN
						9999
					ELSE
						CASE WHEN derived_visit_allocation.visit_validity_type_id = 2 THEN
							CASE
								WHEN derived_visit_allocation.visit_count_to = 9999
									THEN 9999
								WHEN derived_visit_allocation.visit_count_from = 0
									THEN	(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from)
								ELSE
									(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from) + 1
							END
						ELSE
							(derived_visit_allocation.allocated_visit_count - derived_visit_allocation.used_visit_count)
						END
					END AS visit_number,
					derived_visit_allocation.used_visit_count AS used_visit_number,
					derived_visit_allocation.purchase_no
				FROM derived_visit_allocation
			)

			UPDATE
				##temptable
			SET
				remaining_MGU_PP_count = calculated_visit_allocation.visit_number
			FROM
				##temptable
				INNER JOIN calculated_visit_allocation ON ##temptable.purchase_no = calculated_visit_allocation.purchase_no
				/* SHAREDMGU CPAYVISIT */
		;WITH used_visit_allocations AS (
            	SELECT
					COUNT(1) AS used_visit_count,
					pvah2.purchase_visit_allocation_id
				FROM
					PPass.dbo.purchase_visit_allocation_his AS pvah2
					INNER JOIN PPass.dbo.purchase_visit_allocation pva2 ON pvah2.purchase_visit_allocation_id = pva2.purchase_visit_allocation_id
					INNER JOIN PPass.dbo.purchase_visit_allocation_link pval2 ON pva2.purchase_visit_allocation_grp_id = pval2.purchase_visit_allocation_grp_id
					LEFT OUTER JOIN PPass.dbo.source_visit_allocation_mem_gue_link salg ON pva2.source_visit_allocation_id = salg.guest_source_visit_allocation_id
				WHERE
						EXISTS (
							SELECT
								1
							FROM
								##temptable temp2
							WHERE
								temp2.purchase_no = pval2.purchase_no
						)
					AND pvah2.isdeleted = 0
					AND pva2.visitor_type_id = 10
					AND salg.guest_source_visit_allocation_id is NULL
				GROUP BY
					pvah2.purchase_visit_allocation_id
			),
			derived_visit_allocation AS (
				SELECT
					pva.visit_count_from,
					pva.visit_count_to,
					pva.visit_validity_type_id,
					CASE
						WHEN pva.visit_count_to = 9999
							THEN 9999
						WHEN pva.visit_count_from = 0
							THEN	(pva.visit_count_to - pva.visit_count_from)
						ELSE (pva.visit_count_to - pva.visit_count_from) + 1
					END AS allocated_visit_count,
					ISNULL(used_visit_allocations.used_visit_count, 0) AS used_visit_count,
					pur.purchase_no
				FROM
					PPass.dbo.purchase pur
					INNER JOIN PPass.dbo.purchase_visit_allocation_link pval ON pval.purchase_no = pur.purchase_no
					INNER JOIN PPass.dbo.purchase_visit_allocation_grp pvag ON pvag.purchase_visit_allocation_grp_id = pval.purchase_visit_allocation_grp_id
					INNER JOIN PPass.dbo.purchase_visit_allocation pva ON pva.purchase_visit_allocation_grp_id = pvag.purchase_visit_allocation_grp_id
					AND pva.charge_owner_id = 22
					AND pva.visitor_type_id = 10
					AND pva.visit_allocation_type_id NOT IN (3,4)
					AND pur.isDeleted = 0
					LEFT JOIN used_visit_allocations ON pva.purchase_visit_allocation_id = used_visit_allocations.purchase_visit_allocation_id
               	WHERE
						(
							(	pva.valid_from &lt;= getdate()
								AND pva.valid_to &gt;= getdate()
							)
							OR pva.visit_validity_type_id = 2
						)
			),
			calculated_visit_allocation AS
			(
				SELECT
					CASE WHEN derived_visit_allocation.visit_count_to = 9999 THEN
						9999
					ELSE
						CASE WHEN derived_visit_allocation.visit_validity_type_id = 2 THEN
							CASE
								WHEN derived_visit_allocation.visit_count_to = 9999
									THEN 9999
								WHEN derived_visit_allocation.visit_count_from = 0
									THEN	(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from)
								ELSE
									(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from) + 1
							END
						ELSE
							(derived_visit_allocation.allocated_visit_count - derived_visit_allocation.used_visit_count)
						END
					END AS visit_number,
					derived_visit_allocation.used_visit_count AS used_visit_number,
					derived_visit_allocation.purchase_no
				FROM derived_visit_allocation
			)

			UPDATE
				##temptable
			SET
				remaining_MGU_CLI_count = calculated_visit_allocation.visit_number
			FROM
				##temptable
				INNER JOIN calculated_visit_allocation ON ##temptable.purchase_no = calculated_visit_allocation.purchase_no
				/*SHAREDMGU CPAYVISIT2 */
		;WITH used_visit_allocations AS (
            	SELECT
					COUNT(1) AS used_visit_count,
					pvah2.purchase_visit_allocation_id
				FROM
					PPass.dbo.purchase_visit_allocation_his AS pvah2
					INNER JOIN PPass.dbo.purchase_visit_allocation pva2 ON pvah2.purchase_visit_allocation_id = pva2.purchase_visit_allocation_id
					INNER JOIN PPass.dbo.purchase_visit_allocation_link pval2 ON pva2.purchase_visit_allocation_grp_id = pval2.purchase_visit_allocation_grp_id
					LEFT OUTER JOIN PPass.dbo.source_visit_allocation_mem_gue_link salg ON pva2.source_visit_allocation_id = salg.guest_source_visit_allocation_id
				WHERE
						EXISTS (
							SELECT
								1
							FROM
								##temptable temp2
							WHERE
								temp2.purchase_no = pval2.purchase_no
						)
					AND pvah2.isdeleted = 0
					AND pva2.visitor_type_id = 10
					AND salg.guest_source_visit_allocation_id is NULL
				GROUP BY
					pvah2.purchase_visit_allocation_id
			),
			derived_visit_allocation AS (
				SELECT
					pva.visit_count_from,
					pva.visit_count_to,
					pva.visit_validity_type_id,
					CASE
						WHEN pva.visit_count_to = 9999
							THEN 9999
						WHEN pva.visit_count_from = 0
							THEN	(pva.visit_count_to - pva.visit_count_from)
						ELSE (pva.visit_count_to - pva.visit_count_from) + 1
					END AS allocated_visit_count,
					ISNULL(used_visit_allocations.used_visit_count, 0) AS used_visit_count,
					pur.purchase_no
				FROM
					PPass.dbo.purchase pur
					INNER JOIN PPass.dbo.purchase_visit_allocation_link pval ON pval.purchase_no = pur.purchase_no
					INNER JOIN PPass.dbo.purchase_visit_allocation_grp pvag ON pvag.purchase_visit_allocation_grp_id = pval.purchase_visit_allocation_grp_id
					INNER JOIN PPass.dbo.purchase_visit_allocation pva ON pva.purchase_visit_allocation_grp_id = pvag.purchase_visit_allocation_grp_id
					AND pva.charge_owner_id = 25
					AND pva.visitor_type_id = 10
					AND pva.visit_allocation_type_id NOT IN (3,4)
					AND pur.isDeleted = 0
					LEFT JOIN used_visit_allocations ON pva.purchase_visit_allocation_id = used_visit_allocations.purchase_visit_allocation_id
               	WHERE
						(
							(	pva.valid_from &lt;= getdate()
								AND pva.valid_to &gt;= getdate()
							)
							OR pva.visit_validity_type_id = 2
						)
			),
			calculated_visit_allocation AS
			(
				SELECT
					CASE WHEN derived_visit_allocation.visit_count_to = 9999 THEN
						9999
					ELSE
						CASE WHEN derived_visit_allocation.visit_validity_type_id = 2 THEN
							CASE
								WHEN derived_visit_allocation.visit_count_to = 9999
									THEN 9999
								WHEN derived_visit_allocation.visit_count_from = 0
									THEN	(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from)
								ELSE
									(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from) + 1
							END
						ELSE
							(derived_visit_allocation.allocated_visit_count - derived_visit_allocation.used_visit_count)
						END
					END AS visit_number,
					derived_visit_allocation.used_visit_count AS used_visit_number,
					derived_visit_allocation.purchase_no
				FROM derived_visit_allocation
			)

			UPDATE
				##temptable
			SET
				remaining_MGU_CLI2_count = calculated_visit_allocation.visit_number
			FROM
				##temptable
				INNER JOIN calculated_visit_allocation ON ##temptable.purchase_no = calculated_visit_allocation.purchase_no
/*OFFERMEM PPAYVISIT */
;WITH used_visit_allocations AS (
            	SELECT
					COUNT(1) AS used_visit_count,
					pvah2.purchase_visit_allocation_id
				FROM
					PPass.dbo.purchase_visit_allocation_his AS pvah2
					INNER JOIN PPass.dbo.purchase_visit_allocation pva2 ON pvah2.purchase_visit_allocation_id = pva2.purchase_visit_allocation_id
					INNER JOIN PPass.dbo.purchase_visit_allocation_link pval2 ON pva2.purchase_visit_allocation_grp_id = pval2.purchase_visit_allocation_grp_id
					LEFT OUTER JOIN PPass.dbo.source_visit_allocation_mem_gue_link salg ON pva2.source_visit_allocation_id = salg.guest_source_visit_allocation_id
				WHERE
						EXISTS (
							SELECT
								1
							FROM
								##temptable temp2
							WHERE
								temp2.purchase_no = pval2.purchase_no
						)
					AND pvah2.isdeleted = 0
					AND pva2.visitor_type_id = 6
					AND salg.guest_source_visit_allocation_id is NULL
				GROUP BY
					pvah2.purchase_visit_allocation_id
			),
			derived_visit_allocation AS (
				SELECT
					pva.visit_count_from,
					pva.visit_count_to,
					pva.visit_validity_type_id,
					CASE
						WHEN pva.visit_count_to = 9999
							THEN 9999
						WHEN pva.visit_count_from = 0
							THEN	(pva.visit_count_to - pva.visit_count_from)
						ELSE (pva.visit_count_to - pva.visit_count_from) + 1
					END AS allocated_visit_count,
					ISNULL(used_visit_allocations.used_visit_count, 0) AS used_visit_count,
					pur.purchase_no
				FROM
					PPass.dbo.purchase pur
					INNER JOIN PPass.dbo.purchase_visit_allocation_link pval ON pval.purchase_no = pur.purchase_no
					INNER JOIN PPass.dbo.purchase_visit_allocation_grp pvag ON pvag.purchase_visit_allocation_grp_id = pval.purchase_visit_allocation_grp_id
					INNER JOIN PPass.dbo.purchase_visit_allocation pva ON pva.purchase_visit_allocation_grp_id = pvag.purchase_visit_allocation_grp_id
					AND pva.charge_owner_id = 21
					AND pva.visitor_type_id = 6
					AND pva.visit_allocation_type_id NOT IN (3,4)
					AND pur.isDeleted = 0
					LEFT JOIN used_visit_allocations ON pva.purchase_visit_allocation_id = used_visit_allocations.purchase_visit_allocation_id
               	WHERE
						(
							(	pva.valid_from &lt;= getdate()
								AND pva.valid_to &gt;= getdate()
							)
							OR pva.visit_validity_type_id = 2
						)
			),
			calculated_visit_allocation AS
			(
				SELECT
					CASE WHEN derived_visit_allocation.visit_count_to = 9999 THEN
						9999
					ELSE
						CASE WHEN derived_visit_allocation.visit_validity_type_id = 2 THEN
							CASE
								WHEN derived_visit_allocation.visit_count_to = 9999
									THEN 9999
								WHEN derived_visit_allocation.visit_count_from = 0
									THEN	(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from)
								ELSE
									(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from) + 1
							END
						ELSE
							(derived_visit_allocation.allocated_visit_count - derived_visit_allocation.used_visit_count)
						END
					END AS visit_number,
					derived_visit_allocation.used_visit_count AS used_visit_number,
					derived_visit_allocation.purchase_no
				FROM derived_visit_allocation
			)

			UPDATE
				##temptable
			SET
				remaining_MEM_PP_count = calculated_visit_allocation.visit_number
			FROM
				##temptable
				INNER JOIN calculated_visit_allocation ON ##temptable.purchase_no = calculated_visit_allocation.purchase_no
		/* OFFERMEMCPAYLIST */
		;WITH used_visit_allocations AS (
            	SELECT
					COUNT(1) AS used_visit_count,
					pvah2.purchase_visit_allocation_id
				FROM
					PPass.dbo.purchase_visit_allocation_his AS pvah2
					INNER JOIN PPass.dbo.purchase_visit_allocation pva2 ON pvah2.purchase_visit_allocation_id = pva2.purchase_visit_allocation_id
					INNER JOIN PPass.dbo.purchase_visit_allocation_link pval2 ON pva2.purchase_visit_allocation_grp_id = pval2.purchase_visit_allocation_grp_id
					LEFT OUTER JOIN PPass.dbo.source_visit_allocation_mem_gue_link salg ON pva2.source_visit_allocation_id = salg.guest_source_visit_allocation_id
				WHERE
						EXISTS (
							SELECT
								1
							FROM
								##temptable temp2
							WHERE
								temp2.purchase_no = pval2.purchase_no
						)
					AND pvah2.isdeleted = 0
					AND pva2.visitor_type_id = 6
					AND salg.guest_source_visit_allocation_id is NULL
				GROUP BY
					pvah2.purchase_visit_allocation_id
			),
			derived_visit_allocation AS (
				SELECT
					pva.visit_count_from,
					pva.visit_count_to,
					pva.visit_validity_type_id,
					CASE
						WHEN pva.visit_count_to = 9999
							THEN 9999
						WHEN pva.visit_count_from = 0
							THEN	(pva.visit_count_to - pva.visit_count_from)
						ELSE (pva.visit_count_to - pva.visit_count_from) + 1
					END AS allocated_visit_count,
					ISNULL(used_visit_allocations.used_visit_count, 0) AS used_visit_count,
					pur.purchase_no
				FROM
					PPass.dbo.purchase pur
					INNER JOIN PPass.dbo.purchase_visit_allocation_link pval ON pval.purchase_no = pur.purchase_no
					INNER JOIN PPass.dbo.purchase_visit_allocation_grp pvag ON pvag.purchase_visit_allocation_grp_id = pval.purchase_visit_allocation_grp_id
					INNER JOIN PPass.dbo.purchase_visit_allocation pva ON pva.purchase_visit_allocation_grp_id = pvag.purchase_visit_allocation_grp_id
					AND pva.charge_owner_id = 22
					AND pva.visitor_type_id = 6
					AND pva.visit_allocation_type_id NOT IN (3,4)
					AND pur.isDeleted = 0
					LEFT JOIN used_visit_allocations ON pva.purchase_visit_allocation_id = used_visit_allocations.purchase_visit_allocation_id
               	WHERE
						(
							(	pva.valid_from &lt;= getdate()
								AND pva.valid_to &gt;= getdate()
							)
							OR pva.visit_validity_type_id = 2
						)
			),
			calculated_visit_allocation AS
			(
				SELECT
					CASE WHEN derived_visit_allocation.visit_count_to = 9999 THEN
						9999
					ELSE
						CASE WHEN derived_visit_allocation.visit_validity_type_id = 2 THEN
							CASE
								WHEN derived_visit_allocation.visit_count_to = 9999
									THEN 9999
								WHEN derived_visit_allocation.visit_count_from = 0
									THEN	(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from)
								ELSE
									(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from) + 1
							END
						ELSE
							(derived_visit_allocation.allocated_visit_count - derived_visit_allocation.used_visit_count)
						END
					END AS visit_number,
					derived_visit_allocation.used_visit_count AS used_visit_number,
					derived_visit_allocation.purchase_no
				FROM derived_visit_allocation
			)

			UPDATE
				##temptable
			SET
				remaining_MEM_CLI_count = calculated_visit_allocation.visit_number
			FROM
				##temptable
				INNER JOIN calculated_visit_allocation ON ##temptable.purchase_no = calculated_visit_allocation.purchase_no
		/* OFFERMEMCPAYLIST2 */
;WITH used_visit_allocations AS (
            	SELECT
					COUNT(1) AS used_visit_count,
					pvah2.purchase_visit_allocation_id
				FROM
					PPass.dbo.purchase_visit_allocation_his AS pvah2
					INNER JOIN PPass.dbo.purchase_visit_allocation pva2 ON pvah2.purchase_visit_allocation_id = pva2.purchase_visit_allocation_id
					INNER JOIN PPass.dbo.purchase_visit_allocation_link pval2 ON pva2.purchase_visit_allocation_grp_id = pval2.purchase_visit_allocation_grp_id
					LEFT OUTER JOIN PPass.dbo.source_visit_allocation_mem_gue_link salg ON pva2.source_visit_allocation_id = salg.guest_source_visit_allocation_id
				WHERE
						EXISTS (
							SELECT
								1
							FROM
								##temptable temp2
							WHERE
								temp2.purchase_no = pval2.purchase_no
						)
					AND pvah2.isdeleted = 0
					AND pva2.visitor_type_id = 6
					AND salg.guest_source_visit_allocation_id is NULL
				GROUP BY
					pvah2.purchase_visit_allocation_id
			),
			derived_visit_allocation AS (
				SELECT
					pva.visit_count_from,
					pva.visit_count_to,
					pva.visit_validity_type_id,
					CASE
						WHEN pva.visit_count_to = 9999
							THEN 9999
						WHEN pva.visit_count_from = 0
							THEN	(pva.visit_count_to - pva.visit_count_from)
						ELSE (pva.visit_count_to - pva.visit_count_from) + 1
					END AS allocated_visit_count,
					ISNULL(used_visit_allocations.used_visit_count, 0) AS used_visit_count,
					pur.purchase_no
				FROM
					PPass.dbo.purchase pur
					INNER JOIN PPass.dbo.purchase_visit_allocation_link pval ON pval.purchase_no = pur.purchase_no
					INNER JOIN PPass.dbo.purchase_visit_allocation_grp pvag ON pvag.purchase_visit_allocation_grp_id = pval.purchase_visit_allocation_grp_id
					INNER JOIN PPass.dbo.purchase_visit_allocation pva ON pva.purchase_visit_allocation_grp_id = pvag.purchase_visit_allocation_grp_id
					AND pva.charge_owner_id = 25
					AND pva.visitor_type_id = 6
					AND pva.visit_allocation_type_id NOT IN (3,4)
					AND pur.isDeleted = 0
					LEFT JOIN used_visit_allocations ON pva.purchase_visit_allocation_id = used_visit_allocations.purchase_visit_allocation_id
               	WHERE
						(
							(	pva.valid_from &lt;= getdate()
								AND pva.valid_to &gt;= getdate()
							)
							OR pva.visit_validity_type_id = 2
						)
			),
			calculated_visit_allocation AS
			(
				SELECT
					CASE WHEN derived_visit_allocation.visit_count_to = 9999 THEN
						9999
					ELSE
						CASE WHEN derived_visit_allocation.visit_validity_type_id = 2 THEN
							CASE
								WHEN derived_visit_allocation.visit_count_to = 9999
									THEN 9999
								WHEN derived_visit_allocation.visit_count_from = 0
									THEN	(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from)
								ELSE
									(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from) + 1
							END
						ELSE
							(derived_visit_allocation.allocated_visit_count - derived_visit_allocation.used_visit_count)
						END
					END AS visit_number,
					derived_visit_allocation.used_visit_count AS used_visit_number,
					derived_visit_allocation.purchase_no
				FROM derived_visit_allocation
			)

			UPDATE
				##temptable
			SET
				remaining_MEM_CLI2_count = calculated_visit_allocation.visit_number
			FROM
				##temptable
				INNER JOIN calculated_visit_allocation ON ##temptable.purchase_no = calculated_visit_allocation.purchase_no
		/* OFFERGUEPPAYLIST */
;WITH used_visit_allocations AS (
            	SELECT
					COUNT(1) AS used_visit_count,
					pvah2.purchase_visit_allocation_id
				FROM
					PPass.dbo.purchase_visit_allocation_his AS pvah2
					INNER JOIN PPass.dbo.purchase_visit_allocation pva2 ON pvah2.purchase_visit_allocation_id = pva2.purchase_visit_allocation_id
					INNER JOIN PPass.dbo.purchase_visit_allocation_link pval2 ON pva2.purchase_visit_allocation_grp_id = pval2.purchase_visit_allocation_grp_id
					LEFT OUTER JOIN PPass.dbo.source_visit_allocation_mem_gue_link salg ON pva2.source_visit_allocation_id = salg.guest_source_visit_allocation_id
				WHERE
						EXISTS (
							SELECT
								1
							FROM
								##temptable temp2
							WHERE
								temp2.purchase_no = pval2.purchase_no
						)
					AND pvah2.isdeleted = 0
					AND pva2.visitor_type_id = 5
					AND salg.guest_source_visit_allocation_id is NULL
				GROUP BY
					pvah2.purchase_visit_allocation_id
			),
			derived_visit_allocation AS (
				SELECT
					pva.visit_count_from,
					pva.visit_count_to,
					pva.visit_validity_type_id,
					CASE
						WHEN pva.visit_count_to = 9999
							THEN 9999
						WHEN pva.visit_count_from = 0
							THEN	(pva.visit_count_to - pva.visit_count_from)
						ELSE (pva.visit_count_to - pva.visit_count_from) + 1
					END AS allocated_visit_count,
					ISNULL(used_visit_allocations.used_visit_count, 0) AS used_visit_count,
					pur.purchase_no
				FROM
					PPass.dbo.purchase pur
					INNER JOIN PPass.dbo.purchase_visit_allocation_link pval ON pval.purchase_no = pur.purchase_no
					INNER JOIN PPass.dbo.purchase_visit_allocation_grp pvag ON pvag.purchase_visit_allocation_grp_id = pval.purchase_visit_allocation_grp_id
					INNER JOIN PPass.dbo.purchase_visit_allocation pva ON pva.purchase_visit_allocation_grp_id = pvag.purchase_visit_allocation_grp_id
					AND pva.charge_owner_id = 21
					AND pva.visitor_type_id = 5
					AND pva.visit_allocation_type_id NOT IN (3,4)
					AND pur.isDeleted = 0
					LEFT JOIN used_visit_allocations ON pva.purchase_visit_allocation_id = used_visit_allocations.purchase_visit_allocation_id
               	WHERE
						(
							(	pva.valid_from &lt;= getdate()
								AND pva.valid_to &gt;= getdate()
							)
							OR pva.visit_validity_type_id = 2
						)
			),
			calculated_visit_allocation AS
			(
				SELECT
					CASE WHEN derived_visit_allocation.visit_count_to = 9999 THEN
						9999
					ELSE
						CASE WHEN derived_visit_allocation.visit_validity_type_id = 2 THEN
							CASE
								WHEN derived_visit_allocation.visit_count_to = 9999
									THEN 9999
								WHEN derived_visit_allocation.visit_count_from = 0
									THEN	(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from)
								ELSE
									(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from) + 1
							END
						ELSE
							(derived_visit_allocation.allocated_visit_count - derived_visit_allocation.used_visit_count)
						END
					END AS visit_number,
					derived_visit_allocation.used_visit_count AS used_visit_number,
					derived_visit_allocation.purchase_no
				FROM derived_visit_allocation
			)

			UPDATE
				##temptable
			SET
				remaining_GUE_PP_count = calculated_visit_allocation.visit_number
			FROM
				##temptable
				INNER JOIN calculated_visit_allocation ON ##temptable.purchase_no = calculated_visit_allocation.purchase_no
		/* OFFERGUECPAYLIST */
;WITH used_visit_allocations AS (
            	SELECT
					COUNT(1) AS used_visit_count,
					pvah2.purchase_visit_allocation_id
				FROM
					PPass.dbo.purchase_visit_allocation_his AS pvah2
					INNER JOIN PPass.dbo.purchase_visit_allocation pva2 ON pvah2.purchase_visit_allocation_id = pva2.purchase_visit_allocation_id
					INNER JOIN PPass.dbo.purchase_visit_allocation_link pval2 ON pva2.purchase_visit_allocation_grp_id = pval2.purchase_visit_allocation_grp_id
					LEFT OUTER JOIN PPass.dbo.source_visit_allocation_mem_gue_link salg ON pva2.source_visit_allocation_id = salg.guest_source_visit_allocation_id
				WHERE
						EXISTS (
							SELECT
								1
							FROM
								##temptable temp2
							WHERE
								temp2.purchase_no = pval2.purchase_no
						)
					AND pvah2.isdeleted = 0
					AND pva2.visitor_type_id = 5
					AND salg.guest_source_visit_allocation_id is NULL
				GROUP BY
					pvah2.purchase_visit_allocation_id
			),
			derived_visit_allocation AS (
				SELECT
					pva.visit_count_from,
					pva.visit_count_to,
					pva.visit_validity_type_id,
					CASE
						WHEN pva.visit_count_to = 9999
							THEN 9999
						WHEN pva.visit_count_from = 0
							THEN	(pva.visit_count_to - pva.visit_count_from)
						ELSE (pva.visit_count_to - pva.visit_count_from) + 1
					END AS allocated_visit_count,
					ISNULL(used_visit_allocations.used_visit_count, 0) AS used_visit_count,
					pur.purchase_no
				FROM
					PPass.dbo.purchase pur
					INNER JOIN PPass.dbo.purchase_visit_allocation_link pval ON pval.purchase_no = pur.purchase_no
					INNER JOIN PPass.dbo.purchase_visit_allocation_grp pvag ON pvag.purchase_visit_allocation_grp_id = pval.purchase_visit_allocation_grp_id
					INNER JOIN PPass.dbo.purchase_visit_allocation pva ON pva.purchase_visit_allocation_grp_id = pvag.purchase_visit_allocation_grp_id
					AND pva.charge_owner_id = 22
					AND pva.visitor_type_id = 5
					AND pva.visit_allocation_type_id NOT IN (3,4)
					AND pur.isDeleted = 0
					LEFT JOIN used_visit_allocations ON pva.purchase_visit_allocation_id = used_visit_allocations.purchase_visit_allocation_id
               	WHERE
						(
							(	pva.valid_from &lt;= getdate()
								AND pva.valid_to &gt;= getdate()
							)
							OR pva.visit_validity_type_id = 2
						)
			),
			calculated_visit_allocation AS
			(
				SELECT
					CASE WHEN derived_visit_allocation.visit_count_to = 9999 THEN
						9999
					ELSE
						CASE WHEN derived_visit_allocation.visit_validity_type_id = 2 THEN
							CASE
								WHEN derived_visit_allocation.visit_count_to = 9999
									THEN 9999
								WHEN derived_visit_allocation.visit_count_from = 0
									THEN	(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from)
								ELSE
									(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from) + 1
							END
						ELSE
							(derived_visit_allocation.allocated_visit_count - derived_visit_allocation.used_visit_count)
						END
					END AS visit_number,
					derived_visit_allocation.used_visit_count AS used_visit_number,
					derived_visit_allocation.purchase_no
				FROM derived_visit_allocation
			)

			UPDATE
				##temptable
			SET
				remaining_GUE_CLI_count = calculated_visit_allocation.visit_number
			FROM
				##temptable
				INNER JOIN calculated_visit_allocation ON ##temptable.purchase_no = calculated_visit_allocation.purchase_no
		/* OFFERGUECPAYLIST2 */
;WITH used_visit_allocations AS (
            	SELECT
					COUNT(1) AS used_visit_count,
					pvah2.purchase_visit_allocation_id
				FROM
					PPass.dbo.purchase_visit_allocation_his AS pvah2
					INNER JOIN PPass.dbo.purchase_visit_allocation pva2 ON pvah2.purchase_visit_allocation_id = pva2.purchase_visit_allocation_id
					INNER JOIN PPass.dbo.purchase_visit_allocation_link pval2 ON pva2.purchase_visit_allocation_grp_id = pval2.purchase_visit_allocation_grp_id
					LEFT OUTER JOIN PPass.dbo.source_visit_allocation_mem_gue_link salg ON pva2.source_visit_allocation_id = salg.guest_source_visit_allocation_id
				WHERE
						EXISTS (
							SELECT
								1
							FROM
								##temptable temp2
							WHERE
								temp2.purchase_no = pval2.purchase_no
						)
					AND pvah2.isdeleted = 0
					AND pva2.visitor_type_id = 5
					AND salg.guest_source_visit_allocation_id is NULL
				GROUP BY
					pvah2.purchase_visit_allocation_id
			),
			derived_visit_allocation AS (
				SELECT
					pva.visit_count_from,
					pva.visit_count_to,
					pva.visit_validity_type_id,
					CASE
						WHEN pva.visit_count_to = 9999
							THEN 9999
						WHEN pva.visit_count_from = 0
							THEN	(pva.visit_count_to - pva.visit_count_from)
						ELSE (pva.visit_count_to - pva.visit_count_from) + 1
					END AS allocated_visit_count,
					ISNULL(used_visit_allocations.used_visit_count, 0) AS used_visit_count,
					pur.purchase_no
				FROM
					PPass.dbo.purchase pur
					INNER JOIN PPass.dbo.purchase_visit_allocation_link pval ON pval.purchase_no = pur.purchase_no
					INNER JOIN PPass.dbo.purchase_visit_allocation_grp pvag ON pvag.purchase_visit_allocation_grp_id = pval.purchase_visit_allocation_grp_id
					INNER JOIN PPass.dbo.purchase_visit_allocation pva ON pva.purchase_visit_allocation_grp_id = pvag.purchase_visit_allocation_grp_id
					AND pva.charge_owner_id = 25
					AND pva.visitor_type_id = 5
					AND pva.visit_allocation_type_id NOT IN (3,4)
					AND pur.isDeleted = 0
					LEFT JOIN used_visit_allocations ON pva.purchase_visit_allocation_id = used_visit_allocations.purchase_visit_allocation_id
               	WHERE
						(
							(	pva.valid_from &lt;= getdate()
								AND pva.valid_to &gt;= getdate()
							)
							OR pva.visit_validity_type_id = 2
						)
			),
			calculated_visit_allocation AS
			(
				SELECT
					CASE WHEN derived_visit_allocation.visit_count_to = 9999 THEN
						9999
					ELSE
						CASE WHEN derived_visit_allocation.visit_validity_type_id = 2 THEN
							CASE
								WHEN derived_visit_allocation.visit_count_to = 9999
									THEN 9999
								WHEN derived_visit_allocation.visit_count_from = 0
									THEN	(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from)
								ELSE
									(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from) + 1
							END
						ELSE
							(derived_visit_allocation.allocated_visit_count - derived_visit_allocation.used_visit_count)
						END
					END AS visit_number,
					derived_visit_allocation.used_visit_count AS used_visit_number,
					derived_visit_allocation.purchase_no
				FROM derived_visit_allocation
			)

			UPDATE
				##temptable
			SET
				remaining_GUE_CLI2_count = calculated_visit_allocation.visit_number
			FROM
				##temptable
				INNER JOIN calculated_visit_allocation ON ##temptable.purchase_no = calculated_visit_allocation.purchase_no
		/* OFFERMGUPPAYLIST */
;WITH used_visit_allocations AS (
            	SELECT
					COUNT(1) AS used_visit_count,
					pvah2.purchase_visit_allocation_id
				FROM
					PPass.dbo.purchase_visit_allocation_his AS pvah2
					INNER JOIN PPass.dbo.purchase_visit_allocation pva2 ON pvah2.purchase_visit_allocation_id = pva2.purchase_visit_allocation_id
					INNER JOIN PPass.dbo.purchase_visit_allocation_link pval2 ON pva2.purchase_visit_allocation_grp_id = pval2.purchase_visit_allocation_grp_id
					LEFT OUTER JOIN PPass.dbo.source_visit_allocation_mem_gue_link salg ON pva2.source_visit_allocation_id = salg.guest_source_visit_allocation_id
				WHERE
						EXISTS (
							SELECT
								1
							FROM
								##temptable temp2
							WHERE
								temp2.purchase_no = pval2.purchase_no
						)
					AND pvah2.isdeleted = 0
					AND pva2.visitor_type_id = 7
					AND salg.guest_source_visit_allocation_id is NULL
				GROUP BY
					pvah2.purchase_visit_allocation_id
			),
			derived_visit_allocation AS (
				SELECT
					pva.visit_count_from,
					pva.visit_count_to,
					pva.visit_validity_type_id,
					CASE
						WHEN pva.visit_count_to = 9999
							THEN 9999
						WHEN pva.visit_count_from = 0
							THEN	(pva.visit_count_to - pva.visit_count_from)
						ELSE (pva.visit_count_to - pva.visit_count_from) + 1
					END AS allocated_visit_count,
					ISNULL(used_visit_allocations.used_visit_count, 0) AS used_visit_count,
					pur.purchase_no
				FROM
					PPass.dbo.purchase pur
					INNER JOIN PPass.dbo.purchase_visit_allocation_link pval ON pval.purchase_no = pur.purchase_no
					INNER JOIN PPass.dbo.purchase_visit_allocation_grp pvag ON pvag.purchase_visit_allocation_grp_id = pval.purchase_visit_allocation_grp_id
					INNER JOIN PPass.dbo.purchase_visit_allocation pva ON pva.purchase_visit_allocation_grp_id = pvag.purchase_visit_allocation_grp_id
					AND pva.charge_owner_id = 21
					AND pva.visitor_type_id = 7
					AND pva.visit_allocation_type_id NOT IN (3,4)
					AND pur.isDeleted = 0
					LEFT JOIN used_visit_allocations ON pva.purchase_visit_allocation_id = used_visit_allocations.purchase_visit_allocation_id
               	WHERE
						(
							(	pva.valid_from &lt;= getdate()
								AND pva.valid_to &gt;= getdate()
							)
							OR pva.visit_validity_type_id = 2
						)
			),
			calculated_visit_allocation AS
			(
				SELECT
					CASE WHEN derived_visit_allocation.visit_count_to = 9999 THEN
						9999
					ELSE
						CASE WHEN derived_visit_allocation.visit_validity_type_id = 2 THEN
							CASE
								WHEN derived_visit_allocation.visit_count_to = 9999
									THEN 9999
								WHEN derived_visit_allocation.visit_count_from = 0
									THEN	(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from)
								ELSE
									(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from) + 1
							END
						ELSE
							(derived_visit_allocation.allocated_visit_count - derived_visit_allocation.used_visit_count)
						END
					END AS visit_number,
					derived_visit_allocation.used_visit_count AS used_visit_number,
					derived_visit_allocation.purchase_no
				FROM derived_visit_allocation
			)

			UPDATE
				##temptable
			SET
				remaining_MGU_PP_count = calculated_visit_allocation.visit_number
			FROM
				##temptable
				INNER JOIN calculated_visit_allocation ON ##temptable.purchase_no = calculated_visit_allocation.purchase_no
		/* OFFERMGUCPAYLIST */
;WITH used_visit_allocations AS (
            	SELECT
					COUNT(1) AS used_visit_count,
					pvah2.purchase_visit_allocation_id
				FROM
					PPass.dbo.purchase_visit_allocation_his AS pvah2
					INNER JOIN PPass.dbo.purchase_visit_allocation pva2 ON pvah2.purchase_visit_allocation_id = pva2.purchase_visit_allocation_id
					INNER JOIN PPass.dbo.purchase_visit_allocation_link pval2 ON pva2.purchase_visit_allocation_grp_id = pval2.purchase_visit_allocation_grp_id
					LEFT OUTER JOIN PPass.dbo.source_visit_allocation_mem_gue_link salg ON pva2.source_visit_allocation_id = salg.guest_source_visit_allocation_id
				WHERE
						EXISTS (
							SELECT
								1
							FROM
								##temptable temp2
							WHERE
								temp2.purchase_no = pval2.purchase_no
						)
					AND pvah2.isdeleted = 0
					AND pva2.visitor_type_id = 7
					AND salg.guest_source_visit_allocation_id is NULL
				GROUP BY
					pvah2.purchase_visit_allocation_id
			),
			derived_visit_allocation AS (
				SELECT
					pva.visit_count_from,
					pva.visit_count_to,
					pva.visit_validity_type_id,
					CASE
						WHEN pva.visit_count_to = 9999
							THEN 9999
						WHEN pva.visit_count_from = 0
							THEN	(pva.visit_count_to - pva.visit_count_from)
						ELSE (pva.visit_count_to - pva.visit_count_from) + 1
					END AS allocated_visit_count,
					ISNULL(used_visit_allocations.used_visit_count, 0) AS used_visit_count,
					pur.purchase_no
				FROM
					PPass.dbo.purchase pur
					INNER JOIN PPass.dbo.purchase_visit_allocation_link pval ON pval.purchase_no = pur.purchase_no
					INNER JOIN PPass.dbo.purchase_visit_allocation_grp pvag ON pvag.purchase_visit_allocation_grp_id = pval.purchase_visit_allocation_grp_id
					INNER JOIN PPass.dbo.purchase_visit_allocation pva ON pva.purchase_visit_allocation_grp_id = pvag.purchase_visit_allocation_grp_id
					AND pva.charge_owner_id = 22
					AND pva.visitor_type_id = 7
					AND pva.visit_allocation_type_id NOT IN (3,4)
					AND pur.isDeleted = 0
					LEFT JOIN used_visit_allocations ON pva.purchase_visit_allocation_id = used_visit_allocations.purchase_visit_allocation_id
               	WHERE
						(
							(	pva.valid_from &lt;= getdate()
								AND pva.valid_to &gt;= getdate()
							)
							OR pva.visit_validity_type_id = 2
						)
			),
			calculated_visit_allocation AS
			(
				SELECT
					CASE WHEN derived_visit_allocation.visit_count_to = 9999 THEN
						9999
					ELSE
						CASE WHEN derived_visit_allocation.visit_validity_type_id = 2 THEN
							CASE
								WHEN derived_visit_allocation.visit_count_to = 9999
									THEN 9999
								WHEN derived_visit_allocation.visit_count_from = 0
									THEN	(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from)
								ELSE
									(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from) + 1
							END
						ELSE
							(derived_visit_allocation.allocated_visit_count - derived_visit_allocation.used_visit_count)
						END
					END AS visit_number,
					derived_visit_allocation.used_visit_count AS used_visit_number,
					derived_visit_allocation.purchase_no
				FROM derived_visit_allocation
			)

			UPDATE
				##temptable
			SET
				remaining_MGU_CLI_count = calculated_visit_allocation.visit_number
			FROM
				##temptable
				INNER JOIN calculated_visit_allocation ON ##temptable.purchase_no = calculated_visit_allocation.purchase_no
		/* OFFERMGUCPAYLIST2 */
;WITH used_visit_allocations AS (
            	SELECT
					COUNT(1) AS used_visit_count,
					pvah2.purchase_visit_allocation_id
				FROM
					PPass.dbo.purchase_visit_allocation_his AS pvah2
					INNER JOIN PPass.dbo.purchase_visit_allocation pva2 ON pvah2.purchase_visit_allocation_id = pva2.purchase_visit_allocation_id
					INNER JOIN PPass.dbo.purchase_visit_allocation_link pval2 ON pva2.purchase_visit_allocation_grp_id = pval2.purchase_visit_allocation_grp_id
					LEFT OUTER JOIN PPass.dbo.source_visit_allocation_mem_gue_link salg ON pva2.source_visit_allocation_id = salg.guest_source_visit_allocation_id
				WHERE
						EXISTS (
							SELECT
								1
							FROM
								##temptable temp2
							WHERE
								temp2.purchase_no = pval2.purchase_no
						)
					AND pvah2.isdeleted = 0
					AND pva2.visitor_type_id = 7
					AND salg.guest_source_visit_allocation_id is NULL
				GROUP BY
					pvah2.purchase_visit_allocation_id
			),
			derived_visit_allocation AS (
				SELECT
					pva.visit_count_from,
					pva.visit_count_to,
					pva.visit_validity_type_id,
					CASE
						WHEN pva.visit_count_to = 9999
							THEN 9999
						WHEN pva.visit_count_from = 0
							THEN	(pva.visit_count_to - pva.visit_count_from)
						ELSE (pva.visit_count_to - pva.visit_count_from) + 1
					END AS allocated_visit_count,
					ISNULL(used_visit_allocations.used_visit_count, 0) AS used_visit_count,
					pur.purchase_no
				FROM
					PPass.dbo.purchase pur
					INNER JOIN PPass.dbo.purchase_visit_allocation_link pval ON pval.purchase_no = pur.purchase_no
					INNER JOIN PPass.dbo.purchase_visit_allocation_grp pvag ON pvag.purchase_visit_allocation_grp_id = pval.purchase_visit_allocation_grp_id
					INNER JOIN PPass.dbo.purchase_visit_allocation pva ON pva.purchase_visit_allocation_grp_id = pvag.purchase_visit_allocation_grp_id
					AND pva.charge_owner_id = 25
					AND pva.visitor_type_id = 7
					AND pva.visit_allocation_type_id NOT IN (3,4)
					AND pur.isDeleted = 0
					LEFT JOIN used_visit_allocations ON pva.purchase_visit_allocation_id = used_visit_allocations.purchase_visit_allocation_id
               	WHERE
						(
							(	pva.valid_from &lt;= getdate()
								AND pva.valid_to &gt;= getdate()
							)
							OR pva.visit_validity_type_id = 2
						)
			),
			calculated_visit_allocation AS
			(
				SELECT
					CASE WHEN derived_visit_allocation.visit_count_to = 9999 THEN
						9999
					ELSE
						CASE WHEN derived_visit_allocation.visit_validity_type_id = 2 THEN
							CASE
								WHEN derived_visit_allocation.visit_count_to = 9999
									THEN 9999
								WHEN derived_visit_allocation.visit_count_from = 0
									THEN	(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from)
								ELSE
									(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from) + 1
							END
						ELSE
							(derived_visit_allocation.allocated_visit_count - derived_visit_allocation.used_visit_count)
						END
					END AS visit_number,
					derived_visit_allocation.used_visit_count AS used_visit_number,
					derived_visit_allocation.purchase_no
				FROM derived_visit_allocation
			)

			UPDATE
				##temptable
			SET
				remaining_MGU_CLI2_count = calculated_visit_allocation.visit_number
			FROM
				##temptable
				INNER JOIN calculated_visit_allocation ON ##temptable.purchase_no = calculated_visit_allocation.purchase_no
		;WITH derived_credit_data AS (
			SELECT
				ISNULL(SUM(CASE WHEN vch.purchase_visit_allocation_his_id IS NULL THEN 1 ELSE 0 END),0) AS unused_visit,
				ISNULL(SUM(CASE WHEN vch.purchase_visit_allocation_his_id IS NOT NULL THEN 1 ELSE 0 END),0) AS used_visit,
				pval.purchase_no
			FROM
				PPass.dbo.visit_credit_his AS vch
				INNER JOIN PPass.dbo.visit_credit AS vc ON vch.visit_credit_id = vc.visit_credit_id
				INNER JOIN PPass.dbo.visit_credit_purchase_allocation AS vcpa ON vch.visit_credit_his_id = vcpa.visit_credit_his_id
				INNER JOIN PPass.dbo.purchase_visit_allocation AS pva ON vcpa.purchase_visit_allocation_id = pva.purchase_visit_allocation_id
				INNER JOIN PPass.dbo.purchase_visit_allocation_grp AS pvag ON pva.purchase_visit_allocation_grp_id = pvag.purchase_visit_allocation_grp_id
				INNER JOIN PPass.dbo.purchase_visit_allocation_link AS pval ON pvag.purchase_visit_allocation_grp_id = pval.purchase_visit_allocation_grp_id
			WHERE
				vch.isdeleted = 0
				AND vch.expiry_date &gt;= getdate()
				AND vc.visit_credit_type_id = 1
				AND vc.visitor_type_id = 3
			GROUP BY pval.purchase_no
		)
		UPDATE
			##temptable
		SET
			REMAINING_MGU_COMP_COUNT = derived_credit_data.unused_visit
		FROM
			##temptable
			INNER JOIN derived_credit_data ON ##temptable.purchase_no = derived_credit_data.purchase_no


</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{B30508E9-5B7D-4C69-8361-BBFA82A30F5F}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="strSourceCode">
      <DTS:VariableValue
        DTS:DataType="8">'LKVSVISINFUKR18'</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\SSA"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{f67db5d4-8fce-48e0-a25e-5e782ba6647f}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="SSA">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\SSA\Data Flow Task 1"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:DelayValidation="True"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{f5ddef04-7acb-4b0b-b644-3a5f22bf4a79}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="Data Flow Task 1"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\SSA\Data Flow Task 1\OLE DB Destination"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="OLE DB Destination"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[rprt].[tblLKLVCISSEEPlatformDeals]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\SSA\Data Flow Task 1\OLE DB Destination.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[DI-BILLING.OpsBilling]"
                      connectionManagerRefId="Package.ConnectionManagers[DI-BILLING.OpsBilling]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Source Code]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="20"
                          cachedName="Source Code"
                          externalMetadataColumnId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Source Code]"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[Source Code]" />
                        <inputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Member No]"
                          cachedDataType="i8"
                          cachedName="Member No"
                          externalMetadataColumnId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Member No]"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[Member No]" />
                        <inputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Membership Plan]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="20"
                          cachedName="Membership Plan"
                          externalMetadataColumnId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Membership Plan]"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[Membership Plan]" />
                        <inputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Member Status]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="5"
                          cachedName="Member Status"
                          externalMetadataColumnId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Member Status]"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[Member Status]" />
                        <inputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Paid To Date]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="10"
                          cachedName="Paid To Date"
                          externalMetadataColumnId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Paid To Date]"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[Paid To Date]" />
                        <inputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Experience Transaction Date]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="10"
                          cachedName="Experience Transaction Date"
                          externalMetadataColumnId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Experience Transaction Date]"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[Experience Transaction Date]" />
                        <inputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Date Processed]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="10"
                          cachedName="Date Processed"
                          externalMetadataColumnId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Date Processed]"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[Date Processed]" />
                        <inputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Guest Visits]"
                          cachedDataType="i4"
                          cachedName="Guest Visits"
                          externalMetadataColumnId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Guest Visits]"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[Guest Visits]" />
                        <inputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Batch No]"
                          cachedDataType="r8"
                          cachedName="Batch No"
                          externalMetadataColumnId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Batch No]"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[Batch No]" />
                        <inputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Reference]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="100"
                          cachedName="Reference"
                          externalMetadataColumnId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Reference]"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[Reference]" />
                        <inputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Lounge Code]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="20"
                          cachedName="Lounge Code"
                          externalMetadataColumnId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Lounge Code]"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[Lounge Code]" />
                        <inputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Lounge]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="100"
                          cachedName="Lounge"
                          externalMetadataColumnId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Lounge]"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[Lounge]" />
                        <inputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Airport]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="100"
                          cachedName="Airport"
                          externalMetadataColumnId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Airport]"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[Airport]" />
                        <inputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[City]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="100"
                          cachedName="City"
                          externalMetadataColumnId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[City]"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[City]" />
                        <inputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Country]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="100"
                          cachedName="Country"
                          externalMetadataColumnId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Country]"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[Country]" />
                        <inputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Inclusive PP Member Visit]"
                          cachedDataType="ui1"
                          cachedName="Inclusive PP Member Visit"
                          externalMetadataColumnId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Inclusive PP Member Visit]"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[Inclusive PP Member Visit]" />
                        <inputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Complimentary Member Visit]"
                          cachedDataType="ui1"
                          cachedName="Complimentary Member Visit"
                          externalMetadataColumnId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Complimentary Member Visit]"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[Complimentary Member Visit]" />
                        <inputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Cardholder Pays Member Visit]"
                          cachedDataType="ui1"
                          cachedName="Cardholder Pays Member Visit"
                          externalMetadataColumnId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Cardholder Pays Member Visit]"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[Cardholder Pays Member Visit]" />
                        <inputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Inclusive PP Guest Visit]"
                          cachedDataType="ui1"
                          cachedName="Inclusive PP Guest Visit"
                          externalMetadataColumnId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Inclusive PP Guest Visit]"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[Inclusive PP Guest Visit]" />
                        <inputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Complimentary Guest Visit]"
                          cachedDataType="ui1"
                          cachedName="Complimentary Guest Visit"
                          externalMetadataColumnId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Complimentary Guest Visit]"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[Complimentary Guest Visit]" />
                        <inputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Cardholder Pays Guest Visit]"
                          cachedDataType="ui1"
                          cachedName="Cardholder Pays Guest Visit"
                          externalMetadataColumnId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Cardholder Pays Guest Visit]"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[Cardholder Pays Guest Visit]" />
                        <inputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Lounge Visit Offer]"
                          cachedDataType="ui1"
                          cachedName="Lounge Visit Offer"
                          externalMetadataColumnId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Lounge Visit Offer]"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[Lounge Visit Offer]" />
                        <inputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Inclusive PP Member]"
                          cachedDataType="i4"
                          cachedName="Inclusive PP Member"
                          externalMetadataColumnId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Inclusive PP Member]"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[Inclusive PP Member]" />
                        <inputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Inclusive PP Guest]"
                          cachedDataType="i4"
                          cachedName="Inclusive PP Guest"
                          externalMetadataColumnId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Inclusive PP Guest]"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[Inclusive PP Guest]" />
                        <inputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Inclusive PP Member/Guest]"
                          cachedDataType="i4"
                          cachedName="Inclusive PP Member/Guest"
                          externalMetadataColumnId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Inclusive PP Member/Guest]"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[Inclusive PP Member/Guest]" />
                        <inputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Complimentary Member/Guest]"
                          cachedDataType="i4"
                          cachedName="Complimentary Member/Guest"
                          externalMetadataColumnId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Complimentary Member/Guest]"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[Complimentary Member/Guest]" />
                        <inputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Cardholder Visit Currency Member]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="2"
                          cachedName="Cardholder Visit Currency Member"
                          externalMetadataColumnId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Cardholder Visit Currency Member]"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[Cardholder Visit Currency Member]" />
                        <inputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Cardholder Visit Amount Member]"
                          cachedDataType="numeric"
                          cachedName="Cardholder Visit Amount Member"
                          cachedPrecision="10"
                          cachedScale="2"
                          externalMetadataColumnId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Cardholder Visit Amount Member]"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[Cardholder Visit Amount Member]" />
                        <inputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Cardholder Visit Currency Guest]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="2"
                          cachedName="Cardholder Visit Currency Guest"
                          externalMetadataColumnId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Cardholder Visit Currency Guest]"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[Cardholder Visit Currency Guest]" />
                        <inputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Cardholder Visit Amount Guest]"
                          cachedDataType="numeric"
                          cachedName="Cardholder Visit Amount Guest"
                          cachedPrecision="10"
                          cachedScale="2"
                          externalMetadataColumnId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Cardholder Visit Amount Guest]"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[Cardholder Visit Amount Guest]" />
                        <inputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Total Cardholder Amount Currency]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="2"
                          cachedName="Total Cardholder Amount Currency"
                          externalMetadataColumnId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Total Cardholder Amount Currency]"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[Total Cardholder Amount Currency]" />
                        <inputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Total Cardholder Amount]"
                          cachedDataType="numeric"
                          cachedName="Total Cardholder Amount"
                          cachedPrecision="19"
                          cachedScale="2"
                          externalMetadataColumnId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Total Cardholder Amount]"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[Total Cardholder Amount]" />
                        <inputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Cost Centre]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="100"
                          cachedName="Cost Centre"
                          externalMetadataColumnId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Cost Centre]"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[Cost Centre]" />
                        <inputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Campaign Code]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="100"
                          cachedName="Campaign Code"
                          externalMetadataColumnId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Campaign Code]"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[Campaign Code]" />
                        <inputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Vendor Code]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="100"
                          cachedName="Vendor Code"
                          externalMetadataColumnId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Vendor Code]"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[Vendor Code]" />
                        <inputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[User Invitation Code]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="100"
                          cachedName="User Invitation Code"
                          externalMetadataColumnId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[User Invitation Code]"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[User Invitation Code]" />
                        <inputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[CCard No]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="100"
                          cachedName="CCard No"
                          externalMetadataColumnId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[CCard No]"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[CCard No]" />
                        <inputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Client 1 Pays Member Visit]"
                          cachedDataType="ui1"
                          cachedName="Client 1 Pays Member Visit"
                          externalMetadataColumnId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Client 1 Pays Member Visit]"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[Client 1 Pays Member Visit]" />
                        <inputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Client 2 Pays Member Visit]"
                          cachedDataType="ui1"
                          cachedName="Client 2 Pays Member Visit"
                          externalMetadataColumnId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Client 2 Pays Member Visit]"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[Client 2 Pays Member Visit]" />
                        <inputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Client 1 Pays Guest Activity]"
                          cachedDataType="ui1"
                          cachedName="Client 1 Pays Guest Activity"
                          externalMetadataColumnId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Client 1 Pays Guest Activity]"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[Client 1 Pays Guest Activity]" />
                        <inputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Client 2 Pays Guest Activity]"
                          cachedDataType="ui1"
                          cachedName="Client 2 Pays Guest Activity"
                          externalMetadataColumnId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Client 2 Pays Guest Activity]"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[Client 2 Pays Guest Activity]" />
                        <inputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Client 1 Member]"
                          cachedDataType="i4"
                          cachedName="Client 1 Member"
                          externalMetadataColumnId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Client 1 Member]"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[Client 1 Member]" />
                        <inputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Client 2 Member]"
                          cachedDataType="i4"
                          cachedName="Client 2 Member"
                          externalMetadataColumnId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Client 2 Member]"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[Client 2 Member]" />
                        <inputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Client 1 Guest]"
                          cachedDataType="i4"
                          cachedName="Client 1 Guest"
                          externalMetadataColumnId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Client 1 Guest]"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[Client 1 Guest]" />
                        <inputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Client 2 Guest]"
                          cachedDataType="i4"
                          cachedName="Client 2 Guest"
                          externalMetadataColumnId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Client 2 Guest]"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[Client 2 Guest]" />
                        <inputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Client 1 Member/Guest]"
                          cachedDataType="i4"
                          cachedName="Client 1 Member/Guest"
                          externalMetadataColumnId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Client 1 Member/Guest]"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[Client 1 Member/Guest]" />
                        <inputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Client 2 Member/Guest]"
                          cachedDataType="i4"
                          cachedName="Client 2 Member/Guest"
                          externalMetadataColumnId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Client 2 Member/Guest]"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[Client 2 Member/Guest]" />
                        <inputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Client 1 Visit Currency Member]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="2"
                          cachedName="Client 1 Visit Currency Member"
                          externalMetadataColumnId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Client 1 Visit Currency Member]"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[Client 1 Visit Currency Member]" />
                        <inputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Client 1 Visit Amount Member]"
                          cachedDataType="numeric"
                          cachedName="Client 1 Visit Amount Member"
                          cachedPrecision="10"
                          cachedScale="2"
                          externalMetadataColumnId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Client 1 Visit Amount Member]"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[Client 1 Visit Amount Member]" />
                        <inputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Client 1 Visit Currency Guest]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="2"
                          cachedName="Client 1 Visit Currency Guest"
                          externalMetadataColumnId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Client 1 Visit Currency Guest]"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[Client 1 Visit Currency Guest]" />
                        <inputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Client 1 Visit Amount Guest]"
                          cachedDataType="numeric"
                          cachedName="Client 1 Visit Amount Guest"
                          cachedPrecision="10"
                          cachedScale="2"
                          externalMetadataColumnId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Client 1 Visit Amount Guest]"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[Client 1 Visit Amount Guest]" />
                        <inputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Total Client 1 Amount Currency]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="2"
                          cachedName="Total Client 1 Amount Currency"
                          externalMetadataColumnId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Total Client 1 Amount Currency]"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[Total Client 1 Amount Currency]" />
                        <inputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Total Client 1 Amount]"
                          cachedDataType="numeric"
                          cachedName="Total Client 1 Amount"
                          cachedPrecision="11"
                          cachedScale="2"
                          externalMetadataColumnId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Total Client 1 Amount]"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[Total Client 1 Amount]" />
                        <inputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Client 2 Visit Currency Member]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="2"
                          cachedName="Client 2 Visit Currency Member"
                          externalMetadataColumnId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Client 2 Visit Currency Member]"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[Client 2 Visit Currency Member]" />
                        <inputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Client 2 Visit Amount Member]"
                          cachedDataType="numeric"
                          cachedName="Client 2 Visit Amount Member"
                          cachedPrecision="10"
                          cachedScale="2"
                          externalMetadataColumnId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Client 2 Visit Amount Member]"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[Client 2 Visit Amount Member]" />
                        <inputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Client 2 Visit Currency Guest]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="2"
                          cachedName="Client 2 Visit Currency Guest"
                          externalMetadataColumnId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Client 2 Visit Currency Guest]"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[Client 2 Visit Currency Guest]" />
                        <inputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Client 2 Visit Amount Guest]"
                          cachedDataType="numeric"
                          cachedName="Client 2 Visit Amount Guest"
                          cachedPrecision="10"
                          cachedScale="2"
                          externalMetadataColumnId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Client 2 Visit Amount Guest]"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[Client 2 Visit Amount Guest]" />
                        <inputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Total Client 2 Amount Currency]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="2"
                          cachedName="Total Client 2 Amount Currency"
                          externalMetadataColumnId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Total Client 2 Amount Currency]"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[Total Client 2 Amount Currency]" />
                        <inputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Total Client 2 Amount]"
                          cachedDataType="numeric"
                          cachedName="Total Client 2 Amount"
                          cachedPrecision="11"
                          cachedScale="2"
                          externalMetadataColumnId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Total Client 2 Amount]"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[Total Client 2 Amount]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Report_Month]"
                          codePage="1252"
                          dataType="str"
                          length="10"
                          name="Report_Month" />
                        <externalMetadataColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Source Code]"
                          codePage="1252"
                          dataType="str"
                          length="20"
                          name="Source Code" />
                        <externalMetadataColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Member No]"
                          dataType="i8"
                          name="Member No" />
                        <externalMetadataColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[CCard No]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          name="CCard No" />
                        <externalMetadataColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Title]"
                          codePage="1252"
                          dataType="str"
                          length="20"
                          name="Title" />
                        <externalMetadataColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[First Name]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="First Name" />
                        <externalMetadataColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Last Name]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Last Name" />
                        <externalMetadataColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Membership Plan]"
                          codePage="1252"
                          dataType="str"
                          length="20"
                          name="Membership Plan" />
                        <externalMetadataColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Member Status]"
                          codePage="1252"
                          dataType="str"
                          length="5"
                          name="Member Status" />
                        <externalMetadataColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Paid To Date]"
                          codePage="1252"
                          dataType="str"
                          length="10"
                          name="Paid To Date" />
                        <externalMetadataColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Experience Transaction Date]"
                          codePage="1252"
                          dataType="str"
                          length="10"
                          name="Experience Transaction Date" />
                        <externalMetadataColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Date Processed]"
                          codePage="1252"
                          dataType="str"
                          length="10"
                          name="Date Processed" />
                        <externalMetadataColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Guest Visits]"
                          dataType="i4"
                          name="Guest Visits" />
                        <externalMetadataColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Batch No]"
                          dataType="i4"
                          name="Batch No" />
                        <externalMetadataColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Reference]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          name="Reference" />
                        <externalMetadataColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Lounge Code]"
                          codePage="1252"
                          dataType="str"
                          length="20"
                          name="Lounge Code" />
                        <externalMetadataColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Lounge]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          name="Lounge" />
                        <externalMetadataColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Airport]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          name="Airport" />
                        <externalMetadataColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[City]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          name="City" />
                        <externalMetadataColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Country]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          name="Country" />
                        <externalMetadataColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Inclusive PP Member Visit]"
                          dataType="i4"
                          name="Inclusive PP Member Visit" />
                        <externalMetadataColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Complimentary Member Visit]"
                          dataType="i4"
                          name="Complimentary Member Visit" />
                        <externalMetadataColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Cardholder Pays Member Visit]"
                          dataType="i4"
                          name="Cardholder Pays Member Visit" />
                        <externalMetadataColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Inclusive PP Guest Visit]"
                          dataType="i4"
                          name="Inclusive PP Guest Visit" />
                        <externalMetadataColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Complimentary Guest Visit]"
                          dataType="i4"
                          name="Complimentary Guest Visit" />
                        <externalMetadataColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Cardholder Pays Guest Visit]"
                          dataType="i4"
                          name="Cardholder Pays Guest Visit" />
                        <externalMetadataColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Lounge Visit Offer]"
                          dataType="i4"
                          name="Lounge Visit Offer" />
                        <externalMetadataColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Inclusive PP Member]"
                          dataType="i4"
                          name="Inclusive PP Member" />
                        <externalMetadataColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Inclusive PP Guest]"
                          dataType="i4"
                          name="Inclusive PP Guest" />
                        <externalMetadataColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Inclusive PP Member/Guest]"
                          dataType="i4"
                          name="Inclusive PP Member/Guest" />
                        <externalMetadataColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Complimentary Member/Guest]"
                          dataType="i4"
                          name="Complimentary Member/Guest" />
                        <externalMetadataColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Cardholder Visit Currency Member]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Cardholder Visit Currency Member" />
                        <externalMetadataColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Cardholder Visit Amount Member]"
                          dataType="r8"
                          name="Cardholder Visit Amount Member" />
                        <externalMetadataColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Cardholder Visit Currency Guest]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Cardholder Visit Currency Guest" />
                        <externalMetadataColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Cardholder Visit Amount Guest]"
                          dataType="r8"
                          name="Cardholder Visit Amount Guest" />
                        <externalMetadataColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Total Cardholder Amount Currency]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Total Cardholder Amount Currency" />
                        <externalMetadataColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Total Cardholder Amount]"
                          dataType="r8"
                          name="Total Cardholder Amount" />
                        <externalMetadataColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Cost Centre]"
                          codePage="1252"
                          dataType="str"
                          length="300"
                          name="Cost Centre" />
                        <externalMetadataColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Campaign Code]"
                          codePage="1252"
                          dataType="str"
                          length="300"
                          name="Campaign Code" />
                        <externalMetadataColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Vendor Code]"
                          codePage="1252"
                          dataType="str"
                          length="300"
                          name="Vendor Code" />
                        <externalMetadataColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[User Invitation Code]"
                          codePage="1252"
                          dataType="str"
                          length="300"
                          name="User Invitation Code" />
                        <externalMetadataColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Client 1 Pays Member Visit]"
                          dataType="i4"
                          name="Client 1 Pays Member Visit" />
                        <externalMetadataColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Client 2 Pays Member Visit]"
                          dataType="i4"
                          name="Client 2 Pays Member Visit" />
                        <externalMetadataColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Client 1 Pays Guest Activity]"
                          dataType="i4"
                          name="Client 1 Pays Guest Activity" />
                        <externalMetadataColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Client 2 Pays Guest Activity]"
                          dataType="i4"
                          name="Client 2 Pays Guest Activity" />
                        <externalMetadataColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Client 1 Member]"
                          dataType="i4"
                          name="Client 1 Member" />
                        <externalMetadataColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Client 2 Member]"
                          dataType="i4"
                          name="Client 2 Member" />
                        <externalMetadataColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Client 1 Guest]"
                          dataType="i4"
                          name="Client 1 Guest" />
                        <externalMetadataColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Client 2 Guest]"
                          dataType="i4"
                          name="Client 2 Guest" />
                        <externalMetadataColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Client 1 Member/Guest]"
                          dataType="i4"
                          name="Client 1 Member/Guest" />
                        <externalMetadataColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Client 2 Member/Guest]"
                          dataType="i4"
                          name="Client 2 Member/Guest" />
                        <externalMetadataColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Client 1 Visit Currency Member]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Client 1 Visit Currency Member" />
                        <externalMetadataColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Client 1 Visit Amount Member]"
                          dataType="r8"
                          name="Client 1 Visit Amount Member" />
                        <externalMetadataColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Client 1 Visit Currency Guest]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Client 1 Visit Currency Guest" />
                        <externalMetadataColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Client 1 Visit Amount Guest]"
                          dataType="r8"
                          name="Client 1 Visit Amount Guest" />
                        <externalMetadataColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Total Client 1 Amount Currency]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Total Client 1 Amount Currency" />
                        <externalMetadataColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Total Client 1 Amount]"
                          dataType="r8"
                          name="Total Client 1 Amount" />
                        <externalMetadataColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Client 2 Visit Currency Member]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Client 2 Visit Currency Member" />
                        <externalMetadataColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Client 2 Visit Amount Member]"
                          dataType="r8"
                          name="Client 2 Visit Amount Member" />
                        <externalMetadataColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Client 2 Visit Currency Guest]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Client 2 Visit Currency Guest" />
                        <externalMetadataColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Client 2 Visit Amount Guest]"
                          dataType="r8"
                          name="Client 2 Visit Amount Guest" />
                        <externalMetadataColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Total Client 2 Amount Currency]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Total Client 2 Amount Currency" />
                        <externalMetadataColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Total Client 2 Amount]"
                          dataType="r8"
                          name="Total Client 2 Amount" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\SSA\Data Flow Task 1\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\SSA\Data Flow Task 1\OLE DB Source"
                  componentClassID="Microsoft.OLEDBSource"
                  contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
                  description="OLE DB Source"
                  name="OLE DB Source"
                  usesDispositions="true"
                  version="7">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset"></property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">SELECT DISTINCT
       source_code AS [Source Code]
	   ,membership_no as [Member No]
	   ,product_version AS [Membership Plan]
	   ,subs_status AS [Member Status]
	   ,REPLACE(CONVERT(VARCHAR(12),paid_to_date,6),' ','-') AS [Paid To Date]
	   ,REPLACE(CONVERT(VARCHAR(12),track_start,6),' ','-') AS [Experience Transaction Date]
	   ,REPLACE(CONVERT(VARCHAR(12),creation_date,6),' ','-') AS [Date Processed]
	   ,temp.trans_ccard_number AS [CCard No]
	   ,track_guests AS [Guest Visits]
	   ,track_value AS [Batch No]
	   ,external_ref AS [Reference]
	   ,lounge_code AS [Lounge Code]
	   ,lounge_name AS [Lounge]
	   ,airport AS [Airport]
	   ,city AS [City]
	   ,country AS [Country]
	   ,count_mem_cli AS [Client 1 Pays Member Visit]
	   ,[count_mem_cli2]			AS [Client 2 Pays Member Visit]
	   ,count_mem_pp AS [Inclusive PP Member Visit]
	   ,count_mem_comp AS [Complimentary Member Visit]
	   ,count_mem_mem AS [Cardholder Pays Member Visit]

	   ,count_gue_cli AS [Client 1 Pays Guest Activity]
	   ,[count_gue_cli2]			AS [Client 2 Pays Guest Activity]

	   ,count_gue_pp AS [Inclusive PP Guest Visit]
	   ,count_gue_comp AS [Complimentary Guest Visit]
	   ,count_gue_mem AS [Cardholder Pays Guest Visit]
	   ,count_gue_lou AS [Lounge Visit Offer]
	   ,remaining_mem_cli_count	AS [Client 1 Member]
      ,remaining_mem_cli2_count	AS [Client 2 Member]
	   ,remaining_mem_pp_count AS [Inclusive PP Member]

	   ,remaining_gue_cli_count	AS [Client 1 Guest]
      ,remaining_gue_cli2_count AS [Client 2 Guest]
	   ,remaining_gue_pp_count AS [Inclusive PP Guest]
	   ,remaining_mgu_cli_count	AS [Client 1 Member/Guest]
      ,remaining_mgu_cli2_count	AS [Client 2 Member/Guest]


	   ,remaining_mgu_pp_count AS [Inclusive PP Member/Guest]
	   ,remaining_mgu_comp_count AS [Complimentary Member/Guest]
	   ,[fee_mem_cli_curr]		AS [Client 1 Visit Currency Member]
      ,[fee_mem_cli]			AS [Client 1 Visit Amount Member]
      ,[fee_gue_cli_curr]		AS [Client 1 Visit Currency Guest]
      ,[fee_gue_cli]			AS [Client 1 Visit Amount Guest]


	  , CASE
        WHEN LEN([fee_mem_cli_curr]) &gt; 0
            THEN [fee_mem_cli_curr]
        WHEN LEN([fee_gue_cli_curr]) &gt; 0
            THEN [fee_gue_cli_curr]
        ELSE
            ' '
		END 					AS [Total Client 1 Amount Currency]
      , CASE
        WHEN (fee_mem_cli_curr = fee_gue_cli_curr)
             AND LEN(fee_mem_cli_curr) &gt; 0
            THEN fee_mem_cli + fee_gue_cli
        WHEN LEN(fee_mem_cli_curr) &gt; 0
            THEN fee_mem_cli
        WHEN LEN(fee_gue_cli_curr) &gt; 0
            THEN fee_gue_cli
        ELSE
            0.00
		END  						AS [Total Client 1 Amount]

		,[fee_mem_cli2_curr]						AS [Client 2 Visit Currency Member]
	  ,[fee_mem_cli2]							AS [Client 2 Visit Amount Member]
      ,[fee_gue_cli2_curr]						AS [Client 2 Visit Currency Guest]
      ,[fee_gue_cli2]							AS [Client 2 Visit Amount Guest]
	  , CASE
			WHEN LEN([fee_mem_cli2_curr]) &gt; 0
				THEN [fee_mem_cli2_curr]
			WHEN LEN([fee_gue_cli2_curr]) &gt; 0
				THEN [fee_gue_cli2_curr]
			ELSE
				' '
		END   										AS [Total Client 2 Amount Currency]
	  , CASE
			WHEN (fee_mem_cli2_curr = fee_gue_cli2_curr)
				 AND LEN(fee_mem_cli2_curr) &gt; 0
				THEN fee_mem_cli2 + fee_gue_cli2
			WHEN LEN(fee_mem_cli2_curr) &gt; 0
				THEN fee_mem_cli2
			WHEN LEN(fee_gue_cli2_curr) &gt; 0
				THEN fee_gue_cli2
			ELSE
				0.00
		END 										AS [Total Client 2 Amount]

		 ,fee_mem_mem_curr						AS [Cardholder Visit Currency Member]
      ,fee_mem_mem						AS [Cardholder Visit Amount Member]
      ,fee_gue_mem_curr						AS [Cardholder Visit Currency Guest]
      ,fee_gue_mem						AS [Cardholder Visit Amount Guest]
	  , CASE
			WHEN LEN(fee_mem_mem_curr) &gt; 0
				THEN fee_mem_mem_curr
			WHEN LEN(fee_gue_mem_curr) &gt; 0
				THEN fee_gue_mem_curr
			ELSE
				' '
		END 							AS [Total Cardholder Amount Currency]
	  , CASE
			WHEN (fee_mem_mem_curr = fee_gue_mem_curr)
				 AND LEN(fee_mem_mem_curr) &gt; 0
				THEN fee_mem_mem + fee_gue_mem
			WHEN LEN(fee_mem_mem_curr) &gt; 0
				THEN fee_mem_mem
			WHEN LEN(fee_gue_mem_curr) &gt; 0
				THEN fee_gue_mem
			ELSE
				0.00
		END 								AS [Total Cardholder Amount]
	   
	   
	   ,old_system_ref AS [Cost Centre]
	   ,campaign_code AS [Campaign Code]
	   ,vendor_tracking_code AS [Vendor Code]
	   ,user_invitation_code AS [User Invitation Code]

 FROM
	##temptable AS temp
	INNER JOIN PPass.dbo.purchase_visit_summary_data AS pvsd WITH (NOLOCK) ON temp.purchase_no = pvsd.purchase_no AND temp.track_seq = pvsd.track_seq</property>
                    <property
                      dataType="System.String"
                      description="The variable that contains the SQL command to be executed."
                      name="SqlCommandVariable">User::strQuery</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">2</property>
                    <property
                      dataType="System.String"
                      description="The mappings between the parameters in the SQL command and variables."
                      name="ParameterMapping"></property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\SSA\Data Flow Task 1\OLE DB Source.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[PPass]"
                      connectionManagerRefId="Package.ConnectionManagers[PPass]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output]"
                      name="OLE DB Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[Source Code]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Source Code]"
                          length="20"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[Source Code]"
                          name="Source Code"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[Member No]"
                          dataType="i8"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Member No]"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[Member No]"
                          name="Member No"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[Membership Plan]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Membership Plan]"
                          length="20"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[Membership Plan]"
                          name="Membership Plan"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[Member Status]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Member Status]"
                          length="5"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[Member Status]"
                          name="Member Status"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[Paid To Date]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Paid To Date]"
                          length="10"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[Paid To Date]"
                          name="Paid To Date"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[Experience Transaction Date]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Experience Transaction Date]"
                          length="10"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[Experience Transaction Date]"
                          name="Experience Transaction Date"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[Date Processed]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Date Processed]"
                          length="10"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[Date Processed]"
                          name="Date Processed"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[Guest Visits]"
                          dataType="i4"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Guest Visits]"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[Guest Visits]"
                          name="Guest Visits"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[Batch No]"
                          dataType="r8"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Batch No]"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[Batch No]"
                          name="Batch No"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[Reference]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Reference]"
                          length="100"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[Reference]"
                          name="Reference"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[Lounge Code]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Lounge Code]"
                          length="20"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[Lounge Code]"
                          name="Lounge Code"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[Lounge]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Lounge]"
                          length="100"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[Lounge]"
                          name="Lounge"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[Airport]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Airport]"
                          length="100"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[Airport]"
                          name="Airport"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[City]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[City]"
                          length="100"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[City]"
                          name="City"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[Country]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Country]"
                          length="100"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[Country]"
                          name="Country"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[Inclusive PP Member Visit]"
                          dataType="ui1"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Inclusive PP Member Visit]"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[Inclusive PP Member Visit]"
                          name="Inclusive PP Member Visit"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[Complimentary Member Visit]"
                          dataType="ui1"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Complimentary Member Visit]"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[Complimentary Member Visit]"
                          name="Complimentary Member Visit"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[Cardholder Pays Member Visit]"
                          dataType="ui1"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Cardholder Pays Member Visit]"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[Cardholder Pays Member Visit]"
                          name="Cardholder Pays Member Visit"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[Inclusive PP Guest Visit]"
                          dataType="ui1"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Inclusive PP Guest Visit]"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[Inclusive PP Guest Visit]"
                          name="Inclusive PP Guest Visit"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[Complimentary Guest Visit]"
                          dataType="ui1"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Complimentary Guest Visit]"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[Complimentary Guest Visit]"
                          name="Complimentary Guest Visit"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[Cardholder Pays Guest Visit]"
                          dataType="ui1"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Cardholder Pays Guest Visit]"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[Cardholder Pays Guest Visit]"
                          name="Cardholder Pays Guest Visit"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[Lounge Visit Offer]"
                          dataType="ui1"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Lounge Visit Offer]"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[Lounge Visit Offer]"
                          name="Lounge Visit Offer"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[Inclusive PP Member]"
                          dataType="i4"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Inclusive PP Member]"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[Inclusive PP Member]"
                          name="Inclusive PP Member"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[Inclusive PP Guest]"
                          dataType="i4"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Inclusive PP Guest]"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[Inclusive PP Guest]"
                          name="Inclusive PP Guest"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[Inclusive PP Member/Guest]"
                          dataType="i4"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Inclusive PP Member/Guest]"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[Inclusive PP Member/Guest]"
                          name="Inclusive PP Member/Guest"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[Complimentary Member/Guest]"
                          dataType="i4"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Complimentary Member/Guest]"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[Complimentary Member/Guest]"
                          name="Complimentary Member/Guest"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[Cardholder Visit Currency Member]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Cardholder Visit Currency Member]"
                          length="2"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[Cardholder Visit Currency Member]"
                          name="Cardholder Visit Currency Member"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[Cardholder Visit Amount Member]"
                          dataType="numeric"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Cardholder Visit Amount Member]"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[Cardholder Visit Amount Member]"
                          name="Cardholder Visit Amount Member"
                          precision="10"
                          scale="2"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[Cardholder Visit Currency Guest]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Cardholder Visit Currency Guest]"
                          length="2"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[Cardholder Visit Currency Guest]"
                          name="Cardholder Visit Currency Guest"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[Cardholder Visit Amount Guest]"
                          dataType="numeric"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Cardholder Visit Amount Guest]"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[Cardholder Visit Amount Guest]"
                          name="Cardholder Visit Amount Guest"
                          precision="10"
                          scale="2"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[Total Cardholder Amount Currency]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Total Cardholder Amount Currency]"
                          length="2"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[Total Cardholder Amount Currency]"
                          name="Total Cardholder Amount Currency"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[Total Cardholder Amount]"
                          dataType="numeric"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Total Cardholder Amount]"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[Total Cardholder Amount]"
                          name="Total Cardholder Amount"
                          precision="19"
                          scale="2"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[Cost Centre]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Cost Centre]"
                          length="100"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[Cost Centre]"
                          name="Cost Centre"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[Campaign Code]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Campaign Code]"
                          length="100"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[Campaign Code]"
                          name="Campaign Code"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[Vendor Code]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Vendor Code]"
                          length="100"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[Vendor Code]"
                          name="Vendor Code"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[User Invitation Code]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[User Invitation Code]"
                          length="100"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[User Invitation Code]"
                          name="User Invitation Code"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[CCard No]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[CCard No]"
                          length="100"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[CCard No]"
                          name="CCard No"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[Client 1 Pays Member Visit]"
                          dataType="ui1"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Client 1 Pays Member Visit]"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[Client 1 Pays Member Visit]"
                          name="Client 1 Pays Member Visit"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[Client 2 Pays Member Visit]"
                          dataType="ui1"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Client 2 Pays Member Visit]"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[Client 2 Pays Member Visit]"
                          name="Client 2 Pays Member Visit"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[Client 1 Pays Guest Activity]"
                          dataType="ui1"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Client 1 Pays Guest Activity]"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[Client 1 Pays Guest Activity]"
                          name="Client 1 Pays Guest Activity"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[Client 2 Pays Guest Activity]"
                          dataType="ui1"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Client 2 Pays Guest Activity]"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[Client 2 Pays Guest Activity]"
                          name="Client 2 Pays Guest Activity"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[Client 1 Member]"
                          dataType="i4"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Client 1 Member]"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[Client 1 Member]"
                          name="Client 1 Member"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[Client 2 Member]"
                          dataType="i4"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Client 2 Member]"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[Client 2 Member]"
                          name="Client 2 Member"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[Client 1 Guest]"
                          dataType="i4"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Client 1 Guest]"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[Client 1 Guest]"
                          name="Client 1 Guest"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[Client 2 Guest]"
                          dataType="i4"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Client 2 Guest]"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[Client 2 Guest]"
                          name="Client 2 Guest"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[Client 1 Member/Guest]"
                          dataType="i4"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Client 1 Member/Guest]"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[Client 1 Member/Guest]"
                          name="Client 1 Member/Guest"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[Client 2 Member/Guest]"
                          dataType="i4"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Client 2 Member/Guest]"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[Client 2 Member/Guest]"
                          name="Client 2 Member/Guest"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[Client 1 Visit Currency Member]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Client 1 Visit Currency Member]"
                          length="2"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[Client 1 Visit Currency Member]"
                          name="Client 1 Visit Currency Member"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[Client 1 Visit Amount Member]"
                          dataType="numeric"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Client 1 Visit Amount Member]"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[Client 1 Visit Amount Member]"
                          name="Client 1 Visit Amount Member"
                          precision="10"
                          scale="2"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[Client 1 Visit Currency Guest]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Client 1 Visit Currency Guest]"
                          length="2"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[Client 1 Visit Currency Guest]"
                          name="Client 1 Visit Currency Guest"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[Client 1 Visit Amount Guest]"
                          dataType="numeric"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Client 1 Visit Amount Guest]"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[Client 1 Visit Amount Guest]"
                          name="Client 1 Visit Amount Guest"
                          precision="10"
                          scale="2"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[Total Client 1 Amount Currency]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Total Client 1 Amount Currency]"
                          length="2"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[Total Client 1 Amount Currency]"
                          name="Total Client 1 Amount Currency"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[Total Client 1 Amount]"
                          dataType="numeric"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Total Client 1 Amount]"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[Total Client 1 Amount]"
                          name="Total Client 1 Amount"
                          precision="11"
                          scale="2"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[Client 2 Visit Currency Member]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Client 2 Visit Currency Member]"
                          length="2"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[Client 2 Visit Currency Member]"
                          name="Client 2 Visit Currency Member"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[Client 2 Visit Amount Member]"
                          dataType="numeric"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Client 2 Visit Amount Member]"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[Client 2 Visit Amount Member]"
                          name="Client 2 Visit Amount Member"
                          precision="10"
                          scale="2"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[Client 2 Visit Currency Guest]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Client 2 Visit Currency Guest]"
                          length="2"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[Client 2 Visit Currency Guest]"
                          name="Client 2 Visit Currency Guest"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[Client 2 Visit Amount Guest]"
                          dataType="numeric"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Client 2 Visit Amount Guest]"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[Client 2 Visit Amount Guest]"
                          name="Client 2 Visit Amount Guest"
                          precision="10"
                          scale="2"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[Total Client 2 Amount Currency]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Total Client 2 Amount Currency]"
                          length="2"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[Total Client 2 Amount Currency]"
                          name="Total Client 2 Amount Currency"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[Total Client 2 Amount]"
                          dataType="numeric"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Total Client 2 Amount]"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].Columns[Total Client 2 Amount]"
                          name="Total Client 2 Amount"
                          precision="11"
                          scale="2"
                          truncationRowDisposition="FailComponent" />
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Source Code]"
                          codePage="1252"
                          dataType="str"
                          length="20"
                          name="Source Code" />
                        <externalMetadataColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Member No]"
                          dataType="i8"
                          name="Member No" />
                        <externalMetadataColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Membership Plan]"
                          codePage="1252"
                          dataType="str"
                          length="20"
                          name="Membership Plan" />
                        <externalMetadataColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Member Status]"
                          codePage="1252"
                          dataType="str"
                          length="5"
                          name="Member Status" />
                        <externalMetadataColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Paid To Date]"
                          codePage="1252"
                          dataType="str"
                          length="8000"
                          name="Paid To Date" />
                        <externalMetadataColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Experience Transaction Date]"
                          codePage="1252"
                          dataType="str"
                          length="8000"
                          name="Experience Transaction Date" />
                        <externalMetadataColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Date Processed]"
                          codePage="1252"
                          dataType="str"
                          length="8000"
                          name="Date Processed" />
                        <externalMetadataColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Guest Visits]"
                          dataType="i4"
                          name="Guest Visits" />
                        <externalMetadataColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Batch No]"
                          dataType="r8"
                          name="Batch No" />
                        <externalMetadataColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Reference]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          name="Reference" />
                        <externalMetadataColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Lounge Code]"
                          codePage="1252"
                          dataType="str"
                          length="20"
                          name="Lounge Code" />
                        <externalMetadataColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Lounge]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          name="Lounge" />
                        <externalMetadataColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Airport]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          name="Airport" />
                        <externalMetadataColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[City]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          name="City" />
                        <externalMetadataColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Country]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          name="Country" />
                        <externalMetadataColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Inclusive PP Member Visit]"
                          dataType="ui1"
                          name="Inclusive PP Member Visit" />
                        <externalMetadataColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Complimentary Member Visit]"
                          dataType="ui1"
                          name="Complimentary Member Visit" />
                        <externalMetadataColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Cardholder Pays Member Visit]"
                          dataType="ui1"
                          name="Cardholder Pays Member Visit" />
                        <externalMetadataColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Inclusive PP Guest Visit]"
                          dataType="ui1"
                          name="Inclusive PP Guest Visit" />
                        <externalMetadataColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Complimentary Guest Visit]"
                          dataType="ui1"
                          name="Complimentary Guest Visit" />
                        <externalMetadataColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Cardholder Pays Guest Visit]"
                          dataType="ui1"
                          name="Cardholder Pays Guest Visit" />
                        <externalMetadataColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Lounge Visit Offer]"
                          dataType="ui1"
                          name="Lounge Visit Offer" />
                        <externalMetadataColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Inclusive PP Member]"
                          dataType="i4"
                          name="Inclusive PP Member" />
                        <externalMetadataColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Inclusive PP Guest]"
                          dataType="i4"
                          name="Inclusive PP Guest" />
                        <externalMetadataColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Inclusive PP Member/Guest]"
                          dataType="i4"
                          name="Inclusive PP Member/Guest" />
                        <externalMetadataColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Complimentary Member/Guest]"
                          dataType="i4"
                          name="Complimentary Member/Guest" />
                        <externalMetadataColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Cardholder Visit Currency Member]"
                          codePage="1252"
                          dataType="str"
                          length="2"
                          name="Cardholder Visit Currency Member" />
                        <externalMetadataColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Cardholder Visit Amount Member]"
                          dataType="numeric"
                          name="Cardholder Visit Amount Member"
                          precision="10"
                          scale="2" />
                        <externalMetadataColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Cardholder Visit Currency Guest]"
                          codePage="1252"
                          dataType="str"
                          length="2"
                          name="Cardholder Visit Currency Guest" />
                        <externalMetadataColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Cardholder Visit Amount Guest]"
                          dataType="numeric"
                          name="Cardholder Visit Amount Guest"
                          precision="10"
                          scale="2" />
                        <externalMetadataColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Total Cardholder Amount Currency]"
                          codePage="1252"
                          dataType="str"
                          length="2"
                          name="Total Cardholder Amount Currency" />
                        <externalMetadataColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Total Cardholder Amount]"
                          dataType="numeric"
                          name="Total Cardholder Amount"
                          precision="11"
                          scale="2" />
                        <externalMetadataColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Cost Centre]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          name="Cost Centre" />
                        <externalMetadataColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Campaign Code]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          name="Campaign Code" />
                        <externalMetadataColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Vendor Code]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          name="Vendor Code" />
                        <externalMetadataColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[User Invitation Code]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          name="User Invitation Code" />
                        <externalMetadataColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[CCard No]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          name="CCard No" />
                        <externalMetadataColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Client 1 Pays Member Visit]"
                          dataType="ui1"
                          name="Client 1 Pays Member Visit" />
                        <externalMetadataColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Client 2 Pays Member Visit]"
                          dataType="ui1"
                          name="Client 2 Pays Member Visit" />
                        <externalMetadataColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Client 1 Pays Guest Activity]"
                          dataType="ui1"
                          name="Client 1 Pays Guest Activity" />
                        <externalMetadataColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Client 2 Pays Guest Activity]"
                          dataType="ui1"
                          name="Client 2 Pays Guest Activity" />
                        <externalMetadataColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Client 1 Member]"
                          dataType="i4"
                          name="Client 1 Member" />
                        <externalMetadataColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Client 2 Member]"
                          dataType="i4"
                          name="Client 2 Member" />
                        <externalMetadataColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Client 1 Guest]"
                          dataType="i4"
                          name="Client 1 Guest" />
                        <externalMetadataColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Client 2 Guest]"
                          dataType="i4"
                          name="Client 2 Guest" />
                        <externalMetadataColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Client 1 Member/Guest]"
                          dataType="i4"
                          name="Client 1 Member/Guest" />
                        <externalMetadataColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Client 2 Member/Guest]"
                          dataType="i4"
                          name="Client 2 Member/Guest" />
                        <externalMetadataColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Client 1 Visit Currency Member]"
                          codePage="1252"
                          dataType="str"
                          length="2"
                          name="Client 1 Visit Currency Member" />
                        <externalMetadataColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Client 1 Visit Amount Member]"
                          dataType="numeric"
                          name="Client 1 Visit Amount Member"
                          precision="10"
                          scale="2" />
                        <externalMetadataColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Client 1 Visit Currency Guest]"
                          codePage="1252"
                          dataType="str"
                          length="2"
                          name="Client 1 Visit Currency Guest" />
                        <externalMetadataColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Client 1 Visit Amount Guest]"
                          dataType="numeric"
                          name="Client 1 Visit Amount Guest"
                          precision="10"
                          scale="2" />
                        <externalMetadataColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Total Client 1 Amount Currency]"
                          codePage="1252"
                          dataType="str"
                          length="2"
                          name="Total Client 1 Amount Currency" />
                        <externalMetadataColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Total Client 1 Amount]"
                          dataType="numeric"
                          name="Total Client 1 Amount"
                          precision="11"
                          scale="2" />
                        <externalMetadataColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Client 2 Visit Currency Member]"
                          codePage="1252"
                          dataType="str"
                          length="2"
                          name="Client 2 Visit Currency Member" />
                        <externalMetadataColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Client 2 Visit Amount Member]"
                          dataType="numeric"
                          name="Client 2 Visit Amount Member"
                          precision="10"
                          scale="2" />
                        <externalMetadataColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Client 2 Visit Currency Guest]"
                          codePage="1252"
                          dataType="str"
                          length="2"
                          name="Client 2 Visit Currency Guest" />
                        <externalMetadataColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Client 2 Visit Amount Guest]"
                          dataType="numeric"
                          name="Client 2 Visit Amount Guest"
                          precision="10"
                          scale="2" />
                        <externalMetadataColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Total Client 2 Amount Currency]"
                          codePage="1252"
                          dataType="str"
                          length="2"
                          name="Total Client 2 Amount Currency" />
                        <externalMetadataColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Total Client 2 Amount]"
                          dataType="numeric"
                          name="Total Client 2 Amount"
                          precision="11"
                          scale="2" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Error Output]"
                      isErrorOut="true"
                      name="OLE DB Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Source Code]"
                          codePage="1252"
                          dataType="str"
                          length="20"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Source Code]"
                          name="Source Code" />
                        <outputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Member No]"
                          dataType="i8"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Member No]"
                          name="Member No" />
                        <outputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Membership Plan]"
                          codePage="1252"
                          dataType="str"
                          length="20"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Membership Plan]"
                          name="Membership Plan" />
                        <outputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Member Status]"
                          codePage="1252"
                          dataType="str"
                          length="5"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Member Status]"
                          name="Member Status" />
                        <outputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Paid To Date]"
                          codePage="1252"
                          dataType="str"
                          length="8000"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Paid To Date]"
                          name="Paid To Date" />
                        <outputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Experience Transaction Date]"
                          codePage="1252"
                          dataType="str"
                          length="8000"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Experience Transaction Date]"
                          name="Experience Transaction Date" />
                        <outputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Date Processed]"
                          codePage="1252"
                          dataType="str"
                          length="8000"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Date Processed]"
                          name="Date Processed" />
                        <outputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[CCard No]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[CCard No]"
                          name="CCard No" />
                        <outputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Guest Visits]"
                          dataType="i4"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Guest Visits]"
                          name="Guest Visits" />
                        <outputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Batch No]"
                          dataType="r8"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Batch No]"
                          name="Batch No" />
                        <outputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Reference]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Reference]"
                          name="Reference" />
                        <outputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Lounge Code]"
                          codePage="1252"
                          dataType="str"
                          length="20"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Lounge Code]"
                          name="Lounge Code" />
                        <outputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Lounge]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Lounge]"
                          name="Lounge" />
                        <outputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Airport]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Airport]"
                          name="Airport" />
                        <outputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[City]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[City]"
                          name="City" />
                        <outputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Country]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Country]"
                          name="Country" />
                        <outputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Client 1 Pays Member Visit]"
                          dataType="ui1"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Client 1 Pays Member Visit]"
                          name="Client 1 Pays Member Visit" />
                        <outputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Client 2 Pays Member Visit]"
                          dataType="ui1"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Client 2 Pays Member Visit]"
                          name="Client 2 Pays Member Visit" />
                        <outputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Inclusive PP Member Visit]"
                          dataType="ui1"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Inclusive PP Member Visit]"
                          name="Inclusive PP Member Visit" />
                        <outputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Complimentary Member Visit]"
                          dataType="ui1"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Complimentary Member Visit]"
                          name="Complimentary Member Visit" />
                        <outputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Cardholder Pays Member Visit]"
                          dataType="ui1"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Cardholder Pays Member Visit]"
                          name="Cardholder Pays Member Visit" />
                        <outputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Client 1 Pays Guest Activity]"
                          dataType="ui1"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Client 1 Pays Guest Activity]"
                          name="Client 1 Pays Guest Activity" />
                        <outputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Client 2 Pays Guest Activity]"
                          dataType="ui1"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Client 2 Pays Guest Activity]"
                          name="Client 2 Pays Guest Activity" />
                        <outputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Inclusive PP Guest Visit]"
                          dataType="ui1"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Inclusive PP Guest Visit]"
                          name="Inclusive PP Guest Visit" />
                        <outputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Complimentary Guest Visit]"
                          dataType="ui1"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Complimentary Guest Visit]"
                          name="Complimentary Guest Visit" />
                        <outputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Cardholder Pays Guest Visit]"
                          dataType="ui1"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Cardholder Pays Guest Visit]"
                          name="Cardholder Pays Guest Visit" />
                        <outputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Lounge Visit Offer]"
                          dataType="ui1"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Lounge Visit Offer]"
                          name="Lounge Visit Offer" />
                        <outputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Client 1 Member]"
                          dataType="i4"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Client 1 Member]"
                          name="Client 1 Member" />
                        <outputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Client 2 Member]"
                          dataType="i4"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Client 2 Member]"
                          name="Client 2 Member" />
                        <outputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Inclusive PP Member]"
                          dataType="i4"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Inclusive PP Member]"
                          name="Inclusive PP Member" />
                        <outputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Client 1 Guest]"
                          dataType="i4"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Client 1 Guest]"
                          name="Client 1 Guest" />
                        <outputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Client 2 Guest]"
                          dataType="i4"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Client 2 Guest]"
                          name="Client 2 Guest" />
                        <outputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Inclusive PP Guest]"
                          dataType="i4"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Inclusive PP Guest]"
                          name="Inclusive PP Guest" />
                        <outputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Client 1 Member/Guest]"
                          dataType="i4"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Client 1 Member/Guest]"
                          name="Client 1 Member/Guest" />
                        <outputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Client 2 Member/Guest]"
                          dataType="i4"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Client 2 Member/Guest]"
                          name="Client 2 Member/Guest" />
                        <outputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Inclusive PP Member/Guest]"
                          dataType="i4"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Inclusive PP Member/Guest]"
                          name="Inclusive PP Member/Guest" />
                        <outputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Complimentary Member/Guest]"
                          dataType="i4"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Complimentary Member/Guest]"
                          name="Complimentary Member/Guest" />
                        <outputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Client 1 Visit Currency Member]"
                          codePage="1252"
                          dataType="str"
                          length="2"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Client 1 Visit Currency Member]"
                          name="Client 1 Visit Currency Member" />
                        <outputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Client 1 Visit Amount Member]"
                          dataType="numeric"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Client 1 Visit Amount Member]"
                          name="Client 1 Visit Amount Member"
                          precision="10"
                          scale="2" />
                        <outputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Client 1 Visit Currency Guest]"
                          codePage="1252"
                          dataType="str"
                          length="2"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Client 1 Visit Currency Guest]"
                          name="Client 1 Visit Currency Guest" />
                        <outputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Client 1 Visit Amount Guest]"
                          dataType="numeric"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Client 1 Visit Amount Guest]"
                          name="Client 1 Visit Amount Guest"
                          precision="10"
                          scale="2" />
                        <outputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Total Client 1 Amount Currency]"
                          codePage="1252"
                          dataType="str"
                          length="2"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Total Client 1 Amount Currency]"
                          name="Total Client 1 Amount Currency" />
                        <outputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Total Client 1 Amount]"
                          dataType="numeric"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Total Client 1 Amount]"
                          name="Total Client 1 Amount"
                          precision="11"
                          scale="2" />
                        <outputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Client 2 Visit Currency Member]"
                          codePage="1252"
                          dataType="str"
                          length="2"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Client 2 Visit Currency Member]"
                          name="Client 2 Visit Currency Member" />
                        <outputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Client 2 Visit Amount Member]"
                          dataType="numeric"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Client 2 Visit Amount Member]"
                          name="Client 2 Visit Amount Member"
                          precision="10"
                          scale="2" />
                        <outputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Client 2 Visit Currency Guest]"
                          codePage="1252"
                          dataType="str"
                          length="2"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Client 2 Visit Currency Guest]"
                          name="Client 2 Visit Currency Guest" />
                        <outputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Client 2 Visit Amount Guest]"
                          dataType="numeric"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Client 2 Visit Amount Guest]"
                          name="Client 2 Visit Amount Guest"
                          precision="10"
                          scale="2" />
                        <outputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Total Client 2 Amount Currency]"
                          codePage="1252"
                          dataType="str"
                          length="2"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Total Client 2 Amount Currency]"
                          name="Total Client 2 Amount Currency" />
                        <outputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Total Client 2 Amount]"
                          dataType="numeric"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Total Client 2 Amount]"
                          name="Total Client 2 Amount"
                          precision="11"
                          scale="2" />
                        <outputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Cardholder Visit Currency Member]"
                          codePage="1252"
                          dataType="str"
                          length="2"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Cardholder Visit Currency Member]"
                          name="Cardholder Visit Currency Member" />
                        <outputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Cardholder Visit Amount Member]"
                          dataType="numeric"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Cardholder Visit Amount Member]"
                          name="Cardholder Visit Amount Member"
                          precision="10"
                          scale="2" />
                        <outputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Cardholder Visit Currency Guest]"
                          codePage="1252"
                          dataType="str"
                          length="2"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Cardholder Visit Currency Guest]"
                          name="Cardholder Visit Currency Guest" />
                        <outputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Cardholder Visit Amount Guest]"
                          dataType="numeric"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Cardholder Visit Amount Guest]"
                          name="Cardholder Visit Amount Guest"
                          precision="10"
                          scale="2" />
                        <outputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Total Cardholder Amount Currency]"
                          codePage="1252"
                          dataType="str"
                          length="2"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Total Cardholder Amount Currency]"
                          name="Total Cardholder Amount Currency" />
                        <outputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Total Cardholder Amount]"
                          dataType="numeric"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Total Cardholder Amount]"
                          name="Total Cardholder Amount"
                          precision="11"
                          scale="2" />
                        <outputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Cost Centre]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Cost Centre]"
                          name="Cost Centre" />
                        <outputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Campaign Code]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Campaign Code]"
                          name="Campaign Code" />
                        <outputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Vendor Code]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Vendor Code]"
                          name="Vendor Code" />
                        <outputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[User Invitation Code]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[User Invitation Code]"
                          name="User Invitation Code" />
                        <outputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\SSA\Data Flow Task 1.Paths[OLE DB Source Output]"
                  endId="Package\SSA\Data Flow Task 1\OLE DB Destination.Inputs[OLE DB Destination Input]"
                  name="OLE DB Source Output"
                  startId="Package\SSA\Data Flow Task 1\OLE DB Source.Outputs[OLE DB Source Output]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\SSA\Execute SQL Task"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:DelayValidation="True"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{f7e7468d-eeac-4248-809f-9af69214d089}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Execute SQL Task"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{DE205D8A-DF9F-410E-A52B-2F655746C1BF}"
              SQLTask:SqlStmtSourceType="Variable"
              SQLTask:SqlStatementSource="User::strQuery" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\SSA\Execute SQL Task 1"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{2d8aba76-b006-4a7f-b753-047f84eddcea}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Execute SQL Task 1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{394A1823-FD15-487A-91A2-F3EF3B7817BB}"
              SQLTask:SqlStatementSource="TRUNCATE TABLE OpsBilling.rprt.tblLKLVCISSEEPlatformDeals" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\SSA\Execute SQL Task 2"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{8e05334e-aae2-4d78-8447-809639579533}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Execute SQL Task 2"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{394A1823-FD15-487A-91A2-F3EF3B7817BB}"
              SQLTask:SqlStatementSource="SELECT DISTINCT VisaEntityBilled,[Client ID/SourceCode]  FROM CMS.dbo.tbl_bi_deals WHERE [Client ID/SourceCode] IN ('LKVSBANPLTBLR18','LKVSTECGLDBLR19','LKVSVISINFUKR18','LKVSVISPLTUKR18','LKVSVISSIGUKR18','LKVSVISSIGGEO20','LKVSVCEINFUKR19','LKVSVCEPLTUKR19','LKVSVCESIGUKR19','LKVSVISINFKAZ21','LKVSVISPLTKAZ21','LKVSVISSIGKAZ21','LKVSCENINFKAZ21','LKVSCONVARUKR20','LKVSFORINFKAZ20','LKVSMTBINFRUS19','LKVSOSCVARUKR20','LKVSBANBUSSRB19','LKVSBANINFSRB19','LKVSBANPLTSRB19','LKVSBELINFBLR19','LKVSBELPLTBLR19','LKVSBPSINFBLR18','LKVSPRIINFBLR18','LKVSRAIINFSRB19','LKVSRAIPLTSRB19','LKVSSBSINFKAZ19','LKVSTBCINFGEO21','LKVSVTBINFGEO20','LKVSVTBSIGGEO20')&#xA;AND Status='Active'"
              SQLTask:ResultType="ResultSetType_Rowset" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ResultBinding
                SQLTask:ResultName="0"
                SQLTask:DtsVariableName="User::objSourceCode" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\SSA\Script Task"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="Script Task"
          DTS:DTSID="{edaecbd5-ad3a-4bd4-b6f3-074f6d89666a}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Script Task"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_09e06ea0bc6940099f5c574a85e65203"
              VSTAMajorVersion="14"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadOnlyVariables="User::objSourceCode"
              ReadWriteVariables="User::strSourceCode">
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_a8434976b86c46bc9bca0fb848d436f4")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_a8434976b86c46bc9bca0fb848d436f4")]
[assembly: AssemblyCopyright("Copyright @  2022")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a8434976b86c46bc9bca0fb848d436f4.Properties.Settings.get_Default():ST_a8434976b86c46bc9bca0fb848d436f4.Properties.Sett" +
    "ings")]

namespace ST_a8434976b86c46bc9bca0fb848d436f4.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Data.OleDb;
#endregion

namespace ST_a8434976b86c46bc9bca0fb848d436f4
{
	/// <summary>
	/// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
	/// or parent of this class.
	/// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
		#region Help:  Using Integration Services variables and parameters in a script
		/* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

		#endregion

		#region Help:  Firing Integration Services events from a script
		/* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
		#endregion

		#region Help:  Using Integration Services connection managers in a script
		/* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
		#endregion


		/// <summary>
		/// This method is called when this script task executes in the control flow.
		/// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
		/// To open Help, press F1.
		/// </summary>
		public void Main()
		{
			// TODO: Add your code here

			OleDbDataAdapter da = new OleDbDataAdapter();

			DataTable dt = new DataTable();

			//dt = (DataTable)Dts.Variables["User::objSourceCode"].Value;

			da.Fill(dt, Dts.Variables["User::objSourceCode"].Value);

			if (da != null)
			{
				if (dt.Rows.Count > 0)
				{
					string str = "";
					foreach (DataRow dr in dt.Rows)
					{
						str = str + "'" + dr[1].ToString() + "',";
					}
					//MessageBox.Show(str.ToString().Substring(0,str.ToString().Length-1));
					Dts.Variables["User::strSourceCode"].Value = str.ToString().Substring(0, str.ToString().Length - 1);
				}
			}

			Dts.TaskResult = (int)ScriptResults.Success;
		}

		#region ScriptResults declaration
		/// <summary>
		/// This enum provides a convenient shorthand within the scope of this class for setting the
		/// result of the script.
		/// 
		/// This code was generated automatically.
		/// </summary>
		enum ScriptResults
		{
			Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
			Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
		};
		#endregion

	}
}]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>ST_a8434976b86c46bc9bca0fb848d436f4</msb:CodeName>
		<msb:DisplayName>ST_a8434976b86c46bc9bca0fb848d436f4</msb:DisplayName>
		<msb:ProjectId>{03A0AB96-F215-4EA8-AB66-627AB12CE6EE}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_09e06ea0bc6940099f5c574a85e65203.csproj"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="ST_09e06ea0bc6940099f5c574a85e65203.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?><Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"><PropertyGroup><ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids><Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration><Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform><ProductVersion>8.0.30703</ProductVersion><SchemaVersion>2.0</SchemaVersion><ProjectGuid>{43470EE6-84E0-45F3-9BAB-0F6992B38701}</ProjectGuid><OutputType>Library</OutputType><AppDesignerFolder>Properties</AppDesignerFolder><RootNamespace>ST_a8434976b86c46bc9bca0fb848d436f4</RootNamespace><AssemblyName>ST_09e06ea0bc6940099f5c574a85e65203</AssemblyName><TargetFrameworkVersion>v4.5</TargetFrameworkVersion><FileAlignment>512</FileAlignment><ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch><TargetFrameworkProfile></TargetFrameworkProfile></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Debug' "><DebugSymbols>true</DebugSymbols><DebugType>full</DebugType><Optimize>false</Optimize><OutputPath>.\bin\Debug\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>DEBUG;TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Release' "><DebugSymbols>false</DebugSymbols><Optimize>true</Optimize><OutputPath>.\bin\Release\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><ItemGroup><Reference Include="System" /><Reference Include="System.Data" /><Reference Include="System.Windows.Forms" /><Reference Include="System.Xml" /><Reference Include="Microsoft.SqlServer.ManagedDTS, Version=13.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.ScriptTask, Version=13.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" /></ItemGroup><ItemGroup><AppDesigner Include="Properties\" /><Compile Include="Properties\AssemblyInfo.cs"><SubType>Code</SubType></Compile><EmbeddedResource Include="Properties\Resources.resx"><Generator>ResXFileCodeGenerator</Generator><LastGenOutput>Resources.Designer.cs</LastGenOutput></EmbeddedResource><Compile Include="Properties\Resources.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Resources.resx</DependentUpon></Compile><None Include="Properties\Settings.settings"><Generator>SettingsSingleFileGenerator</Generator><LastGenOutput>Settings.Designer.cs</LastGenOutput></None><Compile Include="Properties\Settings.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Settings.settings</DependentUpon></Compile><Compile Include="ScriptMain.cs"><SubType>Code</SubType></Compile></ItemGroup><!-- Include the build rules for a C# project.--><Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" /><ProjectExtensions><VisualStudio><FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}"><ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" /><Host Name="ScriptTask" /><ProjectClient><HostIdentifier>SSIS_ST130</HostIdentifier></ProjectClient></FlavorProperties></VisualStudio></ProjectExtensions></Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a8434976b86c46bc9bca0fb848d436f4.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a8434976b86c46bc9bca0fb848d436f4.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a8434976b86c46bc9bca0fb848d436f4.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_a8434976b86c46bc9bca0fb848d436f4.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_a8434976b86c46bc9bca0fb848d436f4.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_09e06ea0bc6940099f5c574a85e65203.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAN7I02MAAAAAAAAAAOAAIiALATAAABIAAAAIAAAAAAAAgjAA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAADAwAABPAAAAAEAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAiBAAAAAgAAAAEgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAQAAAAAYAAAAUAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAABk
MAAAAAAAAEgAAAACAAUAtCEAAMQNAAABAAAAAAAAAHgvAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABswBQDeAAAAAQAAEXMQAAAKcxEAAAoKJQYCKBIAAApvEwAA
CnIBAABwbxQAAApvFQAACm8WAAAKJjmfAAAABm8XAAAKbxgAAAoWPo4AAAByKQAAcAsGbxcAAApv
GQAACgwrKQhvGgAACnQRAAABDQdyKwAAcAkXbxsAAApvHAAACnIvAABwKB0AAAoLCG8eAAAKLc/e
FAh1EgAAARMEEQQsBxEEbx8AAArcAigSAAAKbxMAAApyNQAAcG8UAAAKB28cAAAKFgdvHAAACm8g
AAAKF1lvIQAACm8iAAAKAigSAAAKFm8jAAAKKgAAARAAAAIAVQA1igAUAAAAAB4CKCQAAAoqHgIo
JQAACiqufgEAAAQtHnJdAABw0AMAAAIoJgAACm8nAAAKcygAAAqAAQAABH4BAAAEKhp+AgAABCoe
AoACAAAEKhp+AwAABCoeAigpAAAKKi5zCAAABoADAAAEKgAAQlNKQgEAAQAAAAAADAAAAHY0LjAu
MzAzMTkAAAAABQBsAAAAVAQAACN+AADABAAAhAYAACNTdHJpbmdzAAAAAEQLAADQAAAAI1VTABQM
AAAQAAAAI0dVSUQAAAAkDAAAoAEAACNCbG9iAAAAAAAAAAIAAAFXHaIBCQMAAAD6ATMAFgAAAQAA
ACUAAAAFAAAABgAAAAkAAAABAAAAKQAAAAIAAAAQAAAAAQAAAAIAAAADAAAABAAAAAEAAAAFAAAA
AQAAAAEAAAAAAA8EAQAAAAAABgCgAiEFBgAvAyEFBgDsAQ4FDwCVBQAABgAZApIEBgCDApIEBgBk
ApIEBgAWA5IEBgDAApIEBgDZApIEBgAwApIEBgBLAmcDCgD0Ar4DCgBIAb4DDgCwAHkABgDnBOoF
DgBsBnkABgDDAEUEBgBMBEUEBgDPAQ4FBgArBkUEBgDGBEEFBgC2BH0EEgCfAfkDEgAAAvkDEgB/
AWgEBgC0ASEFDgDWBIUACgDnA74DFgDXBfMAFgC6APMADgCkBHkADgBkAXkABgCDA0UEBgATAUUE
BgDPAEUEBgB4BpIEAAAAAEkAAAAAAAEAAQABABAAXQQlADkAAQABAAAAEABIBaQFVQABAAMAAAEQ
AOEFpAVpAAMABwADAQAADQYAAE0ABAAKABEAUQSkABEAOAGoABEAoACsAAYGcQCwAFaA/QWzAFaA
GAGzAFAgAAAAAIYAYwQGAAEATCEAAAAAhhgBBQYAAQBUIQAAAACDGAEFBgABAFwhAAAAAJMIwgS3
AAEAiCEAAAAAkwggAbwAAQCPIQAAAACTCCwBwQABAJchAAAAAJYIMgbHAAIAniEAAAAAhhgBBQYA
AgCmIQAAAACRGAcFzAACAAAAAQBhAwkAAQUBABEAAQUGABkAAQUKACkAAQUQADEAAQUQADkAAQUQ
AEEAAQUQAEkAAQUQAFEAAQUQAFkAAQUQAGEAAQUQAGkAAQUGAKEAAQUGAMkAAQUVANkAAQUGAOEA
AQUGAHkAAQUGAHEABQYnAOkA0wUsAPEAPAQxAPkATQM3AOEANwQ7AHkAGwZCAAkBWQZIAAkB8wRM
AIEATQY3AIkAPARRAKkAgQNWABEBJAZaAIEAYwZiAJEAlwEGABEBlANIABEBigNmAPkAVwNsAOkA
PgYBAHEAAQUGAKkAAQUGABkB4QBxABkBdAZ6ALEAAQWAANEAAQUGAAgAFACaAAgAGACfACkAcwAH
AS4ACwDfAC4AEwDoAC4AGwAHAS4AIwAQAS4AKwA5AS4AMwA5AS4AOwA5AS4AQwAQAS4ASwA/AS4A
UwA5AS4AWwBWAUMAYwCfAEkAcwAHAWEAewCfAGMAawCfABsAAwABAAQAAwAAAMYE0AAAAEAB1QAA
ADYG2gACAAQAAwACAAUABQABAAYABQACAAcABwAEgAAAAQAAAOsgb1oAAAAAAAABAAAABAAAAAAA
AAAAAAAAiACXAAAAAAANAAAAAAAAAAAAAACRAJ8DAAAAAAQAAAAAAAAAAAAAAIgAeQAAAAAABAAA
AAAAAAAAAAAAiABFBAAAAAANAAAAAAAAAAAAAACRAFIAAAAAAAAAAAABAAAAUgUAAAUAAgAAAABT
VF8wOWUwNmVhMGJjNjk0MDA5OWY1YzU3NGE4NWU2NTIwMwBTVF9hODQzNDk3NmI4NmM0NmJjOWJj
YTBmYjg0OGQ0MzZmNAA8TW9kdWxlPgBNaWNyb3NvZnQuU3FsU2VydmVyLk1hbmFnZWREVFMAdmFs
dWVfXwBTeXN0ZW0uRGF0YQBTeXN0ZW0uRGF0YS5PbGVEYgBtc2NvcmxpYgBkZWZhdWx0SW5zdGFu
Y2UARGF0YVRhYmxlAFZhcmlhYmxlAElEaXNwb3NhYmxlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5
cGVGcm9tSGFuZGxlAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlJ1bnRpbWUAVHlwZQBGYWlsdXJl
AGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAHJlc291cmNlQ3VsdHVyZQBWU1RBUlRTY3JpcHRPYmpl
Y3RNb2RlbEJhc2UASW50ZXJuYWxEYXRhQ29sbGVjdGlvbkJhc2UAQXBwbGljYXRpb25TZXR0aW5n
c0Jhc2UARGlzcG9zZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBDb21waWxlckdlbmVyYXRlZEF0dHJp
YnV0ZQBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAERlYnVnZ2FibGVBdHRyaWJ1dGUARWRp
dG9yQnJvd3NhYmxlQXR0cmlidXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlUcmFk
ZW1hcmtBdHRyaWJ1dGUAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAEFzc2VtYmx5Q29uZmlndXJh
dGlvbkF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAENvbXBpbGF0aW9uUmVs
YXhhdGlvbnNBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJp
Z2h0QXR0cmlidXRlAFNTSVNTY3JpcHRUYXNrRW50cnlQb2ludEF0dHJpYnV0ZQBBc3NlbWJseUNv
bXBhbnlBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAZ2V0X1ZhbHVlAHNl
dF9WYWx1ZQB2YWx1ZQBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFRvU3RyaW5nAFN1YnN0cmlu
ZwBnZXRfTGVuZ3RoAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuU2NyaXB0VGFzawBNaWNyb3NvZnQuU3Fs
U2VydmVyLkR0cy5UYXNrcy5TY3JpcHRUYXNrAFNjcmlwdE9iamVjdE1vZGVsAFN5c3RlbS5Db21w
b25lbnRNb2RlbABTVF8wOWUwNmVhMGJjNjk0MDA5OWY1YzU3NGE4NWU2NTIwMy5kbGwARmlsbABn
ZXRfSXRlbQBTeXN0ZW0ARW51bQByZXNvdXJjZU1hbgBTY3JpcHRNYWluAFN5c3RlbS5Db25maWd1
cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9uAFN5c3RlbS5SZWZsZWN0aW9uAERhdGFSb3dDb2xs
ZWN0aW9uAEN1bHR1cmVJbmZvAGdldF9SZXNvdXJjZU1hbmFnZXIAT2xlRGJEYXRhQWRhcHRlcgBJ
RW51bWVyYXRvcgBHZXRFbnVtZXJhdG9yAC5jdG9yAC5jY3RvcgBTeXN0ZW0uRGlhZ25vc3RpY3MA
U3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNUX2E4NDM0
OTc2Yjg2YzQ2YmM5YmNhMGZiODQ4ZDQzNmY0LlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNl
cwBEZWJ1Z2dpbmdNb2RlcwBTVF9hODQzNDk3NmI4NmM0NmJjOWJjYTBmYjg0OGQ0MzZmNC5Qcm9w
ZXJ0aWVzAGdldF9WYXJpYWJsZXMAU2V0dGluZ3MAU3lzdGVtLkNvbGxlY3Rpb25zAFN1Y2Nlc3MA
Z2V0X0R0cwBTY3JpcHRSZXN1bHRzAGdldF9Sb3dzAENvbmNhdABPYmplY3QAZ2V0X0RlZmF1bHQA
c2V0X1Rhc2tSZXN1bHQAZ2V0X0N1cnJlbnQAZ2V0X0NvdW50AE1vdmVOZXh0AERhdGFSb3cAZ2V0
X0Fzc2VtYmx5AAAAAAAnVQBzAGUAcgA6ADoAbwBiAGoAUwBvAHUAcgBjAGUAQwBvAGQAZQAAAQAD
JwABBScALAABJ1UAcwBlAHIAOgA6AHMAdAByAFMAbwB1AHIAYwBlAEMAbwBkAGUAAHFTAFQAXwBh
ADgANAAzADQAOQA3ADYAYgA4ADYAYwA0ADYAYgBjADkAYgBjAGEAMABmAGIAOAA0ADgAZAA0ADMA
NgBmADQALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAAACCJdh5nmEJ
S58uRzmhYIhYAAQgAQEIAyAAAQUgAQEREQQgAQEOBSABARFhCwcFEj0OEkESRRJJBCAAEnUEIAAS
eQUgARJ9HAMgABwGIAIIEj0cBSAAEoCBAyAACAQgABJBBCABHAgDIAAOBwAEDg4ODg4DIAACBSAC
DggIBCABARwIAAESgI0RgJEFIAASgJUHIAIBDhKAlQi3elxWGTTgiQiJhF3NgIDMkQQAAAAABAEA
AAADBhJZAwYSXQMGEhACBggDBhEUBAAAElkEAAASXQUAAQESXQQAABIQAwAAAQQIABJZBAgAEl0E
CAASEAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEIAQACAAAAAAAoAQAj
U1RfYTg0MzQ5NzZiODZjNDZiYzliY2EwZmI4NDhkNDM2ZjQAAAUBAAAAABYBABFDb3B5cmlnaHQg
QCAgMjAyMgAASQEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC41AQBUDhRGcmFtZXdvcmtEaXNw
bGF5TmFtZRIuTkVUIEZyYW1ld29yayA0LjW0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJj
ZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1
dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1
bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAAWDAAAAAAAAAAAAAAcjAAAAAg
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAGQwAAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5k
bGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAA
AEgAAABYQAAAGgQAAAAAAAAAAAAAGgQ0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8A
AAAAAL0E7/4AAAEAAAABAG9a6yAAAAEAb1rrID8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABE
AAAAAQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8A
bgAAAAAAAACwBHoDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAFYDAAABADAAMAAw
ADAAMAA0AGIAMAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEA
bgB5AE4AYQBtAGUAAAAAAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAA
AAAAUwBUAF8AYQA4ADQAMwA0ADkANwA2AGIAOAA2AGMANAA2AGIAYwA5AGIAYwBhADAAZgBiADgA
NAA4AGQANAAzADYAZgA0AAAAPgAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAu
ADgANAAyADcALgAyADMAMQA1ADEAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAA
UwBUAF8AMAA5AGUAMAA2AGUAYQAwAGIAYwA2ADkANAAwADAAOQA5AGYANQBjADUANwA0AGEAOAA1
AGUANgA1ADIAMAAzAC4AZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQA
AABDAG8AcAB5AHIAaQBnAGgAdAAgAEAAIAAgADIAMAAyADIAAAAqAAEAAQBMAGUAZwBhAGwAVABy
AGEAZABlAG0AYQByAGsAcwAAAAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4A
YQBtAGUAAABTAFQAXwAwADkAZQAwADYAZQBhADAAYgBjADYAOQA0ADAAMAA5ADkAZgA1AGMANQA3
ADQAYQA4ADUAZQA2ADUAMgAwADMALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0A
ZQAAAAAAUwBUAF8AYQA4ADQAMwA0ADkANwA2AGIAOAA2AGMANAA2AGIAYwA5AGIAYwBhADAAZgBi
ADgANAA4AGQANAAzADYAZgA0AAAAQgAPAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAA
MQAuADAALgA4ADQAMgA3AC4AMgAzADEANQAxAAAAAABGAA8AAQBBAHMAcwBlAG0AYgBsAHkAIABW
AGUAcgBzAGkAbwBuAAAAMQAuADAALgA4ADQAMgA3AC4AMgAzADEANQAxAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAAIQwAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\SSA.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{3434539b-efb4-4af4-b36f-b23c04b74e91}"
          DTS:From="Package\SSA\Execute SQL Task 1"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\SSA\Execute SQL Task" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\SSA.PrecedenceConstraints[Constraint 1]"
          DTS:CreationName=""
          DTS:DTSID="{6e05bde3-1b37-48fa-90ef-0af96132d560}"
          DTS:From="Package\SSA\Execute SQL Task"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package\SSA\Data Flow Task 1" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\SSA.PrecedenceConstraints[Constraint 4]"
          DTS:CreationName=""
          DTS:DTSID="{7b1c53bc-17de-4b94-8a5e-407c0759ceda}"
          DTS:From="Package\SSA\Execute SQL Task 2"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 4"
          DTS:To="Package\SSA\Script Task" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\SSA.PrecedenceConstraints[Constraint 5]"
          DTS:CreationName=""
          DTS:DTSID="{ac37d75b-2b56-411e-bf45-c4f2fbe97dd4}"
          DTS:From="Package\SSA\Script Task"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 5"
          DTS:To="Package\SSA\Execute SQL Task 1" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="160,42"
          Id="Package\SSA\Data Flow Task 1"
          TopLeft="99,365" />
        <NodeLayout
          Size="163,42"
          Id="Package\SSA\Execute SQL Task"
          TopLeft="98,272" />
        <NodeLayout
          Size="172,42"
          Id="Package\SSA\Execute SQL Task 1"
          TopLeft="94,178" />
        <NodeLayout
          Size="172,42"
          Id="Package\SSA\Execute SQL Task 2"
          TopLeft="105,18" />
        <NodeLayout
          Size="131,42"
          Id="Package\SSA\Script Task"
          TopLeft="120,97" />
        <EdgeLayout
          Id="Package\SSA.PrecedenceConstraints[Constraint]"
          TopLeft="179.75,220">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,52"
              Start="0,0"
              End="0,44.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,44.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\SSA.PrecedenceConstraints[Constraint 1]"
          TopLeft="179.25,314">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,51"
              Start="0,0"
              End="0,43.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,43.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\SSA.PrecedenceConstraints[Constraint 4]"
          TopLeft="188.25,60">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,37"
              Start="0,0"
              End="0,29.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,29.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\SSA.PrecedenceConstraints[Constraint 5]"
          TopLeft="182.75,139">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,39"
              Start="0,0"
              End="0,31.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,31.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="346,465"
          Size="346,508"
          Id="Package\SSA"
          TopLeft="60,60" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\SSA\Data Flow Task 1">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="171,42"
          Id="Package\SSA\Data Flow Task 1\OLE DB Destination"
          TopLeft="332,157" />
        <NodeLayout
          Size="150,42"
          Id="Package\SSA\Data Flow Task 1\OLE DB Source"
          TopLeft="344,63" />
        <EdgeLayout
          Id="Package\SSA\Data Flow Task 1.Paths[OLE DB Source Output]"
          TopLeft="418.25,105">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,52"
              Start="0,0"
              End="0,44.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,44.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\SSA\Data Flow Task 1\OLE DB Destination">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\SSA\Data Flow Task 1\OLE DB Source">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>