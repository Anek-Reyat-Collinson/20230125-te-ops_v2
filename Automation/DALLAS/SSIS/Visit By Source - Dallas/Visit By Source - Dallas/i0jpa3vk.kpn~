<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="6/24/2022 12:37:58 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="TCG03267CDE"
  DTS:CreatorName="TCG\Harshad.Deshmukh"
  DTS:DTSID="{A1B28040-3F73-421E-903B-1B614F4CFA7D}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="15.0.2000.170"
  DTS:LocaleID="2057"
  DTS:ObjectName="Dallas - Visit By Source"
  DTS:PackageType="5"
  DTS:VersionBuild="57"
  DTS:VersionGUID="{377F082F-929B-4E28-A2E9-D27830570952}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[DI-BILLING.OpsBilling]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{394A1823-FD15-487A-91A2-F3EF3B7817BB}"
      DTS:ObjectName="DI-BILLING.OpsBilling">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="1"
          DTS:ConnectRetryInterval="5"
          DTS:ConnectionString="Data Source=DI-BILLING;Initial Catalog=OpsBilling;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Flat File Connection Manager]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{9A3DA5D6-DB31-407D-96FD-19A147EB2CFE}"
      DTS:ObjectName="Flat File Connection Manager">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="2057"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:ColumnNamesInFirstDataRow="True"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252"
          DTS:ConnectionString="\\clbnas01\OpsDataTeam\8. Team\Harshad\Ops Automation\Dallas\Dallas Source Code List.csv">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Type"
              DTS:DTSID="{B1E49D9A-C38F-4D3A-93D4-1465892A4E5E}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Source Code"
              DTS:DTSID="{8182134E-58A4-4E00-8C25-217D5E5CE02A}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Bin Length"
              DTS:DTSID="{D861516E-2D29-47C9-BDB0-37083A48D825}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[PPass]"
      DTS:CreationName="OLEDB"
      DTS:DelayValidation="True"
      DTS:DTSID="{DE205D8A-DF9F-410E-A52B-2F655746C1BF}"
      DTS:ObjectName="PPass">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Retain="True"
          DTS:ConnectRetryCount="1"
          DTS:ConnectRetryInterval="5"
          DTS:ConnectionString="Data Source=10.204.200.67;User ID=OPSBI_ETL;Initial Catalog=PPass;Provider=SQLNCLI11.1;Persist Security Info=True;Auto Translate=False;">
          <DTS:Password
            DTS:Name="Password"
            Sensitive="1"
            Encrypted="1">AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAAwhmqfWwFw06Wdr3kWIU4/wAAAAAIAAAARABUAFMAAAADZgAAwAAAABAAAABsGIufVI/tKGvWEqJR2YWPAAAAAASAAACgAAAAEAAAAIteMtctTd8nZDpE/uzY+v8gAAAAxYj51Jj6R6MUZMP4rtWI4zrpqSfCLJirsl+RzFHNioUUAAAAa7ZqZ+APrpePYaqROvdUmzF9K6c</DTS:Password>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{E94B5B17-E4A1-4307-89E2-E5DBFF977809}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="UPPER( @[$Project::strUseReportMonth])   == &quot;Y&quot; ?   (DT_DATE)(DT_DBDATE)DATEADD(&quot;D&quot;,-(DAY(DATEADD(&quot;M&quot;,1,@[$Project::dtReportMonth]))),DATEADD(&quot;M&quot;,1,@[$Project::dtReportMonth])): (DT_DATE)(DT_DBDATE)DATEADD(&quot;D&quot;,-(DAY(DATEADD(&quot;M&quot;,1,Dateadd(&quot;M&quot;,-1 ,getdate())))),DATEADD(&quot;M&quot;,1,Dateadd(&quot;M&quot;,-1 ,getdate())))"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="dtEndDate">
      <DTS:VariableValue
        DTS:DataType="7">12/31/2022</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{A9EC7299-8BA5-4D2B-9AE0-7C5515D1408B}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="UPPER( @[$Project::strUseReportMonth])   == &quot;Y&quot; ?   (DT_DATE)(DT_DBDATE)Dateadd(&quot;D&quot;,-1*Day( @[$Project::dtReportMonth] ) +1,    @[$Project::dtReportMonth]): (DT_DATE)(DT_DBDATE) Dateadd(&quot;D&quot;,-1*Day(Dateadd(&quot;M&quot;,-1 ,getdate())) +1  ,Dateadd(&quot;M&quot;,-1 ,getdate()))"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="dtReportMonth">
      <DTS:VariableValue
        DTS:DataType="7">12/1/2022</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{6D09FEA5-5C5B-43F4-8FD5-B39DFB6BF1D2}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="UPPER( @[$Project::strUseReportMonth])   == &quot;Y&quot; ?   (DT_DATE)(DT_DBDATE)Dateadd(&quot;D&quot;,-1*Day( @[$Project::dtReportMonth] ) +1,    @[$Project::dtReportMonth]): (DT_DATE)(DT_DBDATE) Dateadd(&quot;D&quot;,-1*Day(Dateadd(&quot;M&quot;,-1 ,getdate())) +1  ,Dateadd(&quot;M&quot;,-1 ,getdate()))"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="dtStartDate">
      <DTS:VariableValue
        DTS:DataType="7">12/1/2022</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{CDAD262F-613D-436B-8760-83D01B1EC76B}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;DECLARE @StartDate VARCHAR(10)=&quot;+ &quot;'&quot;+(DT_WSTR, 10) @[User::dtStartDate] +&quot;'&quot;+ &quot;&#xA;DECLARE @EndDate VARCHAR(10)=&quot;+ &quot;'&quot;+(DT_WSTR, 10) @[User::dtEndDate] +&quot;'&quot;+ &quot;&#xA;&#xA;DECLARE @var_startDate VARCHAR(10)&#xA;SET @var_startDate=CONVERT(CHAR(8),CONVERT(date,@StartDate,103),112)&#xA;DECLARE @var_endDate VARCHAR(10)&#xA;SET @var_endDate=CONVERT(CHAR(8),CONVERT(date,@EndDate,103),112)&#xA;&#xA;&#xA;IF OBJECT_ID('tempdb..##temptable') IS NOT NULL&#xA;&#x9;DROP TABLE ##temptable&#xA;&#xA;CREATE TABLE ##temptable (&#xA;&#x9;&#x9;source_code &#x9;&#x9;varchar(20),&#xA;&#x9;&#x9;consumer_no &#x9;&#x9;INT NOT NULL,&#xA;&#x9;&#x9;external_identifier BIGINT NULL,&#xA;&#x9;&#x9;membership_no &#x9;&#x9;BIGINT NULL,&#xA;&#x9;&#x9;purchase_no &#x9;&#x9;INT NOT NULL,&#xA;&#x9;&#x9;track_seq &#x9;&#x9;&#x9;INT NOT NULL,&#xA;&#x9;&#x9;title &#x9;&#x9;&#x9;&#x9;varchar(20),&#xA;&#x9;&#x9;forename &#x9;&#x9;&#x9;varchar(50),&#xA;&#x9;&#x9;surname &#x9;&#x9;&#x9;varchar(50),&#xA;&#x9;&#x9;fullname &#x9;&#x9;&#x9;varchar(120),&#xA;&#x9;&#x9;source_desc &#x9;&#x9;varchar(255),&#xA;&#x9;&#x9;product_version &#x9;varchar(20),&#xA;&#x9;&#x9;paid_to_date &#x9;&#x9;date,&#xA;&#x9;&#x9;subs_issue_date &#x9;date,&#xA;&#x9;&#x9;subs_status &#x9;&#x9;varchar(5),&#xA;&#x9;&#x9;track_start &#x9;&#x9;date,&#xA;&#x9;&#x9;track_guests &#x9;&#x9;INT,&#xA;&#x9;&#x9;track_from &#x9;&#x9;&#x9;varchar(20),&#xA;&#x9;&#x9;track_value &#x9;&#x9;FLOAT,&#xA;&#x9;&#x9;creation_date &#x9;&#x9;date,&#xA;&#x9;&#x9;lounge_name&#x9;&#x9;&#x9;varchar(100),&#xA;&#x9;&#x9;airport &#x9;&#x9;&#x9;varchar(100),&#xA;&#x9;&#x9;trans_ccard_number &#x9;varchar(100),&#xA;&#x9;&#x9;external_ref &#x9;&#x9;varchar(100),&#xA;&#x9;&#x9;track_batch &#x9;&#x9;INT,&#xA;&#x9;&#x9;old_system_ref &#x9;&#x9;varchar(100),&#xA;&#x9;&#x9;campaign_code &#x9;&#x9;varchar(100),&#xA;&#x9;&#x9;lounge_code&#x9;&#x9;&#x9;varchar(20),&#xA;&#x9;&#x9;city &#x9;&#x9;&#x9;&#x9;varchar(100),&#xA;&#x9;&#x9;country &#x9;&#x9;&#x9;&#x9;varchar(100),&#xA;&#x9;&#x9;vendor_tracking_code &#x9;varchar(100),&#xA;&#x9;&#x9;user_invitation_code &#x9;varchar(100),&#xA;&#x9;&#x9;remaining_mem_cli_count int,&#xA;&#x9;&#x9;remaining_mem_cli2_count int,&#xA;&#x9;&#x9;remaining_mem_pp_count &#x9;int,&#xA;&#x9;&#x9;remaining_gue_cli_count int,&#xA;&#x9;&#x9;remaining_gue_cli2_count int,&#xA;&#x9;&#x9;remaining_gue_pp_count &#x9;int,&#xA;&#x9;&#x9;remaining_mgu_cli_count int,&#xA;&#x9;&#x9;remaining_mgu_cli2_count int,&#xA;&#x9;&#x9;remaining_mgu_pp_count &#x9;int,&#xA;&#x9;&#x9;remaining_mgu_comp_count int,&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;experience_category &#x9;varchar(100),&#xA;&#x9;&#x9;experience_type &#x9;&#x9;varchar(100),&#xA;&#x9;&#x9;airport_terminal_name  varchar(100),&#xA;&#x9;&#x9;airport_terminal_type  varchar(100),&#xA;&#x9;&#x9;visit_type_id SMALLINT,&#xA;&#x9;&#x9;visit_type&#x9;INT,&#xA;&#x9;&#x9;ccard_type VARCHAR(100),&#xA;&#x9;&#x9;effective_date DATETIME2,&#xA;&#x9;&#x9;report_month date&#xA;&#xA;);&#xA;&#xA;&#xA;INSERT INTO ##temptable(&#x9;&#xA;&#x9;source_code,&#xA;&#x9;consumer_no,&#xA;&#x9;external_identifier,&#xA;&#x9;membership_no,&#xA;&#x9;purchase_no,&#xA;&#x9;track_seq,&#xA;&#x9;title,&#xA;&#x9;forename,&#xA;&#x9;surname,&#xA;&#x9;fullname,&#xA;&#x9;source_desc,&#xA;&#x9;product_version,&#xA;&#x9;paid_to_date,&#xA;&#x9;subs_issue_date,&#xA;&#x9;subs_status,&#xA;&#x9;track_start,&#xA;&#x9;track_guests,&#xA;&#x9;track_from,&#xA;&#x9;track_value,&#xA;&#x9;creation_date,&#xA;&#x9;lounge_name,&#xA;&#x9;airport,&#xA;&#x9;trans_ccard_number,&#xA;&#x9;external_ref,&#xA;&#x9;track_batch,&#xA;&#x9;old_system_ref,&#xA;&#x9;campaign_code,&#xA;&#x9;lounge_code,&#xA;&#x9;city,&#xA;&#x9;country,&#xA;&#x9;vendor_tracking_code,&#xA;&#x9;user_invitation_code,&#xA;&#x9;remaining_mem_cli_count,&#xA;&#x9;remaining_mem_cli2_count,&#xA;&#x9;remaining_mem_pp_count,&#xA;&#x9;remaining_gue_cli_count,&#xA;&#x9;remaining_gue_cli2_count,&#xA;&#x9;remaining_gue_pp_count,&#xA;&#x9;remaining_mgu_cli_count,&#xA;&#x9;remaining_mgu_cli2_count,&#xA;&#x9;remaining_mgu_pp_count,&#xA;&#x9;remaining_mgu_comp_count,&#xA;&#x9;&#xA;&#x9;experience_category,&#xA;&#x9;experience_type,&#xA;&#x9;airport_terminal_name,&#xA;&#x9;airport_terminal_type,&#xA;&#x9;visit_type_id,&#xA;&#x9;ccard_type, &#xA;&#x9;effective_date,&#xA;&#x9;report_month&#xA;&#xA;&#x9; )&#xA;SELECT&#x9;s.source_code,&#xA;&#x9;&#x9;c.consumer_no,&#xA;&#x9;&#x9;c.external_identifier,&#xA;&#x9;&#x9;c.membership_no,&#xA;&#x9;&#x9;p.purchase_no,&#xA;&#x9;&#x9;t.track_seq,&#xA;&#x9;&#x9;c.title,&#xA;&#x9;&#x9;c.forename,&#xA;&#x9;&#x9;c.surname,&#xA;&#x9;&#x9;LTRIM(RTRIM(REPLACE(REPLACE(REPLACE(c.forename + ' ' + c.surname,' ',' |'),'| ',''),'|',''))) AS fullname,&#xA;&#x9;&#x9;s.source_desc,&#xA;&#x9;&#x9;p.product_version,&#xA;&#x9;&#x9;p.paid_to_date,&#xA;&#x9;&#x9;p.subs_issue_date,&#xA;&#x9;&#x9;p.subs_status,&#xA;&#x9;&#x9;t.track_start,&#xA;&#x9;&#x9;t.track_guests,&#xA;&#x9;&#x9;t.track_from,&#xA;&#x9;&#x9;t.track_value,&#xA;&#x9;&#x9;t.creation_date,&#xA;&#x9;&#x9;l.lounge_name,&#xA;&#x9;&#x9;a.pp_short_name AS airport,&#xA;&#x9;&#x9;p.trans_ccard_number,&#xA;&#x9;&#x9;t.external_ref,&#xA;&#x9;&#x9;t.track_batch,&#xA;&#x9;&#x9;p.old_system_ref,&#xA;&#x9;&#x9;s.campaign_code,&#xA;&#x9;&#x9;l.lounge_code,&#xA;&#x9;&#x9;a.airport_city AS city,&#xA;&#x9;&#x9;cou.code_desc AS country,&#xA;&#x9;&#x9;siv.vendor_tracking_code,&#xA;&#x9;&#x9;siv.user_invitation_code,&#xA;&#x9;&#x9;0 AS remaining_mem_cli_count,&#xA;&#x9;&#x9;0 AS remaining_mem_cli2_count,&#xA; &#x9;&#x9;0 AS remaining_mem_pp_count,&#xA; &#x9;&#x9;0 AS remaining_gue_cli_count,&#xA; &#x9;&#x9;0 AS remaining_gue_cli2_count,&#xA; &#x9;&#x9;0 AS remaining_gue_pp_count,&#xA; &#x9;&#x9;0 AS remaining_mgu_cli_count,&#xA; &#x9;&#x9;0 AS remaining_mgu_cli2_count,&#xA; &#x9;&#x9;0 AS remaining_mgu_pp_count,&#xA; &#x9;&#x9;0 AS remaining_mgu_comp_count,&#xA; &#x9;&#x9;&#xA;&#x9;&#x9;'Lounge' as experience_category,&#xA;&#x9;&#x9;'Lounge' as experience_type,&#xA;&#x9;&#x9;ate.terminal_name as airport_terminal_name,&#xA;&#x9;&#x9;CASE&#xA;&#x9;&#x9;&#x9;WHEN l.lounge_type = 'I' THEN 'I'&#xA;&#x9;&#x9;&#x9;WHEN l.lounge_type = 'D' THEN 'D'&#xA;&#x9;&#x9;&#x9;ELSE 'U'&#xA;&#x9;&#x9;  END&#x9;as airport_terminal_type,&#xA;&#x9;&#x9;t.visit_type_id,&#xA;&#x9;&#x9;p.ccard_type,&#xA;&#x9;&#x9;p.effective_date,&#xA;&#x9;&#x9;CAST(DATEADD(MONTH, DATEDIFF(MONTH, 0, t.[creation_date]), 0) AS DATE)      AS &#x9;report_month&#xA;&#xA;--INTO ##temptable&#xA;FROM&#xA;&#x9;&#x9;PPass.dbo.source_deal_config AS sdc WITH (NOLOCK)&#xA;&#x9;&#x9;INNER JOIN PPass.dbo.source AS s WITH (NOLOCK) ON sdc.source_code = s.source_code&#xA;&#x9;&#x9;INNER JOIN PPass.dbo.source_subscription AS ss WITH (NOLOCK) ON sdc.source_deal_config_id = ss.source_deal_config_id&#xA;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_subscription_link AS psl WITH (NOLOCK) ON ss.source_subscription_id = psl.source_subscription_id&#xA;&#x9;&#x9;INNER JOIN PPass.dbo.purchase AS p WITH (NOLOCK) ON psl.purchase_no = p.purchase_no&#xA;&#x9;&#x9;INNER JOIN PPass.dbo.consumer AS c WITH (NOLOCK) ON p.consumer_no = c.consumer_no&#xA;&#x9;&#x9;INNER JOIN PPass.dbo.tracking AS t WITH (NOLOCK) ON p.purchase_no = t.purchase_no&#xA;&#x9;&#x9;INNER JOIN PPass.dbo.lounge AS l WITH (NOLOCK) ON l.lounge_code = t.track_from&#xA;&#x9;&#x9;INNER JOIN PPass.dbo.airport AS a WITH (NOLOCK) ON a.iso_airport_code = l.airport&#xA;&#x9;&#x9;LEFT OUTER JOIN PPass.dbo.airport_terminal AS ate WITH (NOLOCK) ON l.airport_terminal_id = ate.airport_terminal_id&#xA;&#x9;&#x9;LEFT OUTER JOIN PPass.dbo.code AS COU  WITH (NOLOCK) ON COU.code = l.country_code AND COU.codetype = 'CTRY'&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;LEFT OUTER JOIN PPass.dbo.source_invitation_validation siv WITH (NOLOCK) ON siv.consumer_no = c.consumer_no&#xA;&#x9;WHERE&#xA;t.creation_date &gt;= @var_startDate AND t.creation_date &lt; DATEADD(d,1,@var_endDate)&#xA; AND t.track_status &lt;&gt; 'NA' &#xA;AND p.isDeleted = 0 &#xA;AND s.source_code in ( Select SourceCode from ##VisitBySourceSourceCodes)&#xA;--AND (p.consumer_no='1427229223' or c.membership_no='1427229223')&#xA;/* Load in the reedemed offers data */&#xA;&#xA;INSERT INTO ##temptable (&#x9;&#xA;&#x9;source_code,&#xA;&#x9;consumer_no,&#xA;&#x9;external_identifier,&#xA;&#x9;membership_no,&#xA;&#x9;purchase_no,&#xA;&#x9;track_seq,&#xA;&#x9;title,&#xA;&#x9;forename,&#xA;&#x9;surname,&#xA;&#x9;fullname,&#xA;&#x9;source_desc,&#xA;&#x9;product_version,&#xA;&#x9;paid_to_date,&#xA;&#x9;subs_issue_date,&#xA;&#x9;subs_status,&#xA;&#x9;track_start,&#xA;&#x9;track_guests,&#xA;&#x9;track_from,&#xA;&#x9;track_value,&#xA;&#x9;creation_date,&#xA;&#x9;lounge_name,&#xA;&#x9;airport,&#xA;&#x9;trans_ccard_number,&#xA;&#x9;external_ref,&#xA;&#x9;track_batch,&#xA;&#x9;old_system_ref,&#xA;&#x9;campaign_code,&#xA;&#x9;lounge_code,&#xA;&#x9;city,&#xA;&#x9;country,&#xA;&#x9;vendor_tracking_code,&#xA;&#x9;user_invitation_code,&#xA;&#x9;remaining_mem_cli_count,&#xA;&#x9;remaining_mem_cli2_count,&#xA;&#x9;remaining_mem_pp_count,&#xA;&#x9;remaining_gue_cli_count,&#xA;&#x9;remaining_gue_cli2_count,&#xA;&#x9;remaining_gue_pp_count,&#xA;&#x9;remaining_mgu_cli_count,&#xA;&#x9;remaining_mgu_cli2_count,&#xA;&#x9;remaining_mgu_pp_count,&#xA;&#x9;remaining_mgu_comp_count,&#xA;&#x9;experience_category,&#xA;&#x9;experience_type,&#xA;&#x9;airport_terminal_name,&#xA;&#x9;airport_terminal_type,&#xA;&#x9;visit_type_id,&#xA;&#x9;report_month&#xA;&#xA;&#x9; )&#xA;SELECT&#xA;&#x9;s.source_code,&#xA;&#x9;c.consumer_no,&#xA;&#x9;c.external_identifier,&#xA;&#x9;c.membership_no,&#xA;&#x9;p.purchase_no,&#xA;&#x9;t.track_seq,&#xA;&#x9;c.title,&#xA;&#x9;c.forename,&#xA;&#x9;c.surname,&#xA;&#x9;LTRIM(RTRIM(REPLACE(REPLACE(REPLACE(c.forename + ' ' + c.surname,' ',' |'),'| ',''),'|',''))) AS fullname,&#xA;&#x9;s.source_desc,&#xA;&#x9;p.product_version,&#xA;&#x9;p.paid_to_date,&#xA;&#x9;p.subs_issue_date,&#xA;&#x9;p.subs_status,&#xA;&#x9;t.track_start,&#xA;&#x9;t.track_guests,&#xA;&#x9;t.track_from,&#xA;&#x9;t.track_value,&#xA;&#x9;t.creation_date,&#xA;&#x9;ord.outlet_name as lounge_name,&#xA;&#x9;a.pp_short_name AS airport,&#xA;&#x9;p.trans_ccard_number,&#xA;&#x9;t.external_ref,&#xA;&#x9;t.track_batch,&#xA;&#x9;p.old_system_ref,&#xA;&#x9;s.campaign_code,&#xA;&#x9;t.track_from as lounge_code,&#xA;&#x9;a.airport_city AS city,&#xA;&#x9;cou.code_desc AS country,&#xA;&#x9;siv.vendor_tracking_code,&#xA;&#x9;siv.user_invitation_code,&#xA;&#x9;0 AS remaining_mem_cli_count , &#xA;&#x9;0 AS remaining_mem_cli2_count , &#xA;&#x9;0 AS remaining_mem_pp_count , &#xA;&#x9;0 AS remaining_gue_cli_count , &#xA;&#x9;0 AS remaining_gue_cli2_count , &#xA;&#x9;0 AS remaining_gue_pp_count , &#xA;&#x9;0 AS remaining_mgu_cli_count , &#xA;&#x9;0 AS remaining_mgu_cli2_count , &#xA;&#x9;0 AS remaining_mgu_pp_count , &#xA;&#x9;0 AS remaining_mgu_comp_count,&#xA;&#x9;&#xA;&#x9;ord.offer_category as experience_category,&#xA;&#x9;&#x9;ord.offer_type as experience_type,&#xA;&#x9;ISNULL(ate.terminal_name, 'Unknown' ) as airport_terminal_name,&#xA;&#x9;'U' as airport_terminal_type,&#xA;&#x9;t.visit_type_id,&#xA;&#x9;CAST(DATEADD(MONTH, DATEDIFF(MONTH, 0, t.[creation_date]), 0) AS DATE)      AS &#x9;report_month&#xA;FROM&#xA;&#x9;PPass.dbo.source_deal_config AS sdc WITH (NOLOCK)&#xA;&#x9;INNER JOIN PPass.dbo.source AS s WITH (NOLOCK) ON sdc.source_code = s.source_code&#xA;&#x9;INNER JOIN PPass.dbo.source_subscription AS ss WITH (NOLOCK) ON sdc.source_deal_config_id = ss.source_deal_config_id&#xA;&#x9;INNER JOIN PPass.dbo.purchase_subscription_link AS psl WITH (NOLOCK) ON ss.source_subscription_id = psl.source_subscription_id&#xA;&#x9;INNER JOIN PPass.dbo.purchase AS p WITH (NOLOCK) ON psl.purchase_no = p.purchase_no&#xA;&#x9;INNER JOIN PPass.dbo.consumer AS c WITH (NOLOCK) ON p.consumer_no = c.consumer_no&#xA;&#x9;INNER JOIN PPass.dbo.tracking AS t WITH (NOLOCK) ON p.purchase_no = t.purchase_no&#xA;&#x9;INNER JOIN PPass.dbo.offer_redemption_details AS ord WITH (NOLOCK) ON ord.consumer_no = c.consumer_no AND ord.track_seq = t.track_seq&#xA;&#x9;INNER JOIN PPass.dbo.airport AS a WITH (NOLOCK) ON a.iso_airport_code = ord.airport_iso_code&#xA;&#x9;LEFT JOIN PPass.dbo.outlet_airport_terminal AS oat WITH (NOLOCK) ON ord.outlet_id = oat.outlet_id&#xA;&#x9;LEFT JOIN PPass.dbo.airport_terminal AS ate WITH (NOLOCK) ON oat.airport_terminal_id = ate.airport_terminal_id&#xA;&#x9;LEFT OUTER JOIN PPass.dbo.code AS COU WITH (NOLOCK) ON cou.alpha_1 = a.iso_country_code&#xA;&#x9;&#x9;AND cou.codetype = 'CTRY2'&#xA;&#x9;&#x9;AND cou.alpha_5 &lt;&gt; ''&#xA;&#x9;LEFT OUTER JOIN PPass.dbo.source_invitation_validation siv WITH (NOLOCK) ON siv.consumer_no = c.consumer_no&#xA;&#x9;&#xA;WHERE&#xA;t.creation_date &gt;= @var_startDate AND t.creation_date &lt; DATEADD(d,1,@var_endDate)&#xA; AND t.track_status &lt;&gt; 'NA' &#xA;AND p.isDeleted = 0 &#xA;AND s.source_code in (Select SourceCode from ##VisitBySourceSourceCodes)&#xA;--AND (p.consumer_no='1427229223' or c.membership_no='1427229223')&#xA;/* update the temp table with an index */&#xA;--ALTER TABLE ##temptable &#xA;--ADD CONSTRAINT PK_##temptable &#xA;--PRIMARY KEY NONCLUSTERED (purchase_no, track_seq)&#xA;--&#x9;&#x9;&#x9;CREATE NONCLUSTERED INDEX ##temptable_idx1 ON ##temptable (source_code, consumer_no, fullname, track_start, lounge_name, external_ref) &#xA;--&#x9;&#x9;&#x9;WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, FILLFACTOR = 100) ON [PRIMARY]&#xA;&#xA;--Select * from ##temptable&#xA;&#xA;&#x9;&#x9;/*  MEM PPAYVISIT  */&#xA;&#x9;&#x9;;WITH used_visit_allocations AS (&#xA;            &#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;COUNT(1) AS used_visit_count,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pvah2.purchase_visit_allocation_id&#xA;&#x9;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;PPass.dbo.purchase_visit_allocation_his AS pvah2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation pva2 ON pvah2.purchase_visit_allocation_id = pva2.purchase_visit_allocation_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation_link pval2 ON pva2.purchase_visit_allocation_grp_id = pval2.purchase_visit_allocation_grp_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;LEFT OUTER JOIN PPass.dbo.source_visit_allocation_mem_gue_link salg ON pva2.source_visit_allocation_id = salg.guest_source_visit_allocation_id&#xA;&#x9;&#x9;&#x9;&#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;EXISTS (&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;##temptable temp2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;temp2.purchase_no = pval2.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pvah2.isdeleted = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva2.visitor_type_id = 1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND salg.guest_source_visit_allocation_id is NULL&#xA;&#x9;&#x9;&#x9;&#x9;GROUP BY&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pvah2.purchase_visit_allocation_id&#xA;&#x9;&#x9;&#x9;),&#xA;&#x9;&#x9;&#x9;derived_visit_allocation AS (&#xA;           &#xA;&#x9;&#x9;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pva.visit_count_from,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pva.visit_count_to,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pva.visit_validity_type_id,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;CASE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN pva.visit_count_to = 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN pva.visit_count_from = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN&#x9;(pva.visit_count_to - pva.visit_count_from)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE (pva.visit_count_to - pva.visit_count_from) + 1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;END AS allocated_visit_count,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ISNULL(used_visit_allocations.used_visit_count, 0) AS used_visit_count,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pur.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;PPass.dbo.purchase pur&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation_link pval ON pval.purchase_no = pur.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation_grp pvag ON pvag.purchase_visit_allocation_grp_id = pval.purchase_visit_allocation_grp_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation pva ON pva.purchase_visit_allocation_grp_id = pvag.purchase_visit_allocation_grp_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.charge_owner_id = 21&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.visitor_type_id = 1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.visit_allocation_type_id NOT IN (3,4)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pur.isDeleted = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;LEFT JOIN used_visit_allocations ON pva.purchase_visit_allocation_id = used_visit_allocations.purchase_visit_allocation_id&#xA;               &#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(&#x9;pva.valid_from &lt;= getdate()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.valid_to &gt;= getdate()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;OR pva.visit_validity_type_id = 2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;),&#xA;&#x9;&#x9;&#x9;calculated_visit_allocation AS&#xA;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;CASE WHEN derived_visit_allocation.visit_count_to = 9999 THEN&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CASE WHEN derived_visit_allocation.visit_validity_type_id = 2 THEN&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CASE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN derived_visit_allocation.visit_count_to = 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN derived_visit_allocation.visit_count_from = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN&#x9;(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from) + 1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(derived_visit_allocation.allocated_visit_count - derived_visit_allocation.used_visit_count)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;END AS visit_number,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;derived_visit_allocation.used_visit_count AS used_visit_number,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;derived_visit_allocation.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;FROM derived_visit_allocation&#xA;&#x9;&#x9;&#x9;)&#xA;&#xA;&#x9;&#x9;&#x9;UPDATE&#xA;&#x9;&#x9;&#x9;&#x9;##temptable&#xA;&#x9;&#x9;&#x9;SET&#xA;&#x9;&#x9;&#x9;&#x9;remaining_MEM_PP_count = calculated_visit_allocation.visit_number&#xA;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;##temptable&#xA;&#x9;&#x9;&#x9;&#x9;INNER JOIN calculated_visit_allocation ON ##temptable.purchase_no = calculated_visit_allocation.purchase_no;&#xA;&#xA;&#x9;/* MEM CPAYVISIT */&#xA;&#x9;&#x9;;WITH used_visit_allocations AS (&#xA;            &#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;COUNT(1) AS used_visit_count,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pvah2.purchase_visit_allocation_id&#xA;&#x9;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;PPass.dbo.purchase_visit_allocation_his AS pvah2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation pva2 ON pvah2.purchase_visit_allocation_id = pva2.purchase_visit_allocation_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation_link pval2 ON pva2.purchase_visit_allocation_grp_id = pval2.purchase_visit_allocation_grp_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;LEFT OUTER JOIN PPass.dbo.source_visit_allocation_mem_gue_link salg ON pva2.source_visit_allocation_id = salg.guest_source_visit_allocation_id&#xA;&#x9;&#x9;&#x9;&#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;EXISTS (&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;##temptable temp2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;temp2.purchase_no = pval2.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pvah2.isdeleted = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva2.visitor_type_id = 1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND salg.guest_source_visit_allocation_id is NULL&#xA;&#x9;&#x9;&#x9;&#x9;GROUP BY&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pvah2.purchase_visit_allocation_id&#xA;&#x9;&#x9;&#x9;),&#xA;&#x9;&#x9;&#x9;derived_visit_allocation AS (&#xA;&#x9;&#x9;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pva.visit_count_from,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pva.visit_count_to,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pva.visit_validity_type_id,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;CASE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN pva.visit_count_to = 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN pva.visit_count_from = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN&#x9;(pva.visit_count_to - pva.visit_count_from)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE (pva.visit_count_to - pva.visit_count_from) + 1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;END AS allocated_visit_count,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ISNULL(used_visit_allocations.used_visit_count, 0) AS used_visit_count,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pur.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;PPass.dbo.purchase pur&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation_link pval ON pval.purchase_no = pur.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation_grp pvag ON pvag.purchase_visit_allocation_grp_id = pval.purchase_visit_allocation_grp_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation pva ON pva.purchase_visit_allocation_grp_id = pvag.purchase_visit_allocation_grp_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.charge_owner_id = 22&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.visitor_type_id = 1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.visit_allocation_type_id NOT IN (3,4)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pur.isDeleted = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;LEFT JOIN used_visit_allocations ON pva.purchase_visit_allocation_id = used_visit_allocations.purchase_visit_allocation_id&#xA;               &#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(&#x9;pva.valid_from &lt;= getdate()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.valid_to &gt;= getdate()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;OR pva.visit_validity_type_id = 2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;),&#xA;&#x9;&#x9;&#x9;calculated_visit_allocation AS&#xA;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;CASE WHEN derived_visit_allocation.visit_count_to = 9999 THEN&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CASE WHEN derived_visit_allocation.visit_validity_type_id = 2 THEN&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CASE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN derived_visit_allocation.visit_count_to = 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN derived_visit_allocation.visit_count_from = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN&#x9;(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from) + 1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(derived_visit_allocation.allocated_visit_count - derived_visit_allocation.used_visit_count)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;END AS visit_number,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;derived_visit_allocation.used_visit_count AS used_visit_number,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;derived_visit_allocation.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;FROM derived_visit_allocation&#xA;&#x9;&#x9;&#x9;)&#xA;&#xA;&#x9;&#x9;&#x9;UPDATE&#xA;&#x9;&#x9;&#x9;&#x9;##temptable&#xA;&#x9;&#x9;&#x9;SET&#xA;&#x9;&#x9;&#x9;&#x9;remaining_MEM_CLI_count = calculated_visit_allocation.visit_number&#xA;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;##temptable ##temptable&#xA;&#x9;&#x9;&#x9;&#x9;INNER JOIN calculated_visit_allocation ON ##temptable.purchase_no = calculated_visit_allocation.purchase_no;&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;/* MEM CPAYVISIT2 */&#xA;&#x9;&#x9;;WITH used_visit_allocations AS (&#xA;            &#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;COUNT(1) AS used_visit_count,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pvah2.purchase_visit_allocation_id&#xA;&#x9;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;PPass.dbo.purchase_visit_allocation_his AS pvah2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation pva2 ON pvah2.purchase_visit_allocation_id = pva2.purchase_visit_allocation_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation_link pval2 ON pva2.purchase_visit_allocation_grp_id = pval2.purchase_visit_allocation_grp_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;LEFT OUTER JOIN PPass.dbo.source_visit_allocation_mem_gue_link salg ON pva2.source_visit_allocation_id = salg.guest_source_visit_allocation_id&#xA;&#x9;&#x9;&#x9;&#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;EXISTS (&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;##temptable temp2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;temp2.purchase_no = pval2.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pvah2.isdeleted = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva2.visitor_type_id = 1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND salg.guest_source_visit_allocation_id is NULL&#xA;&#x9;&#x9;&#x9;&#x9;GROUP BY&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pvah2.purchase_visit_allocation_id&#xA;&#x9;&#x9;&#x9;),&#xA;&#x9;&#x9;&#x9;derived_visit_allocation AS (&#xA;&#x9;&#x9;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pva.visit_count_from,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pva.visit_count_to,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pva.visit_validity_type_id,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;CASE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN pva.visit_count_to = 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN pva.visit_count_from = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN&#x9;(pva.visit_count_to - pva.visit_count_from)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE (pva.visit_count_to - pva.visit_count_from) + 1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;END AS allocated_visit_count,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ISNULL(used_visit_allocations.used_visit_count, 0) AS used_visit_count,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pur.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;PPass.dbo.purchase pur&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation_link pval ON pval.purchase_no = pur.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation_grp pvag ON pvag.purchase_visit_allocation_grp_id = pval.purchase_visit_allocation_grp_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation pva ON pva.purchase_visit_allocation_grp_id = pvag.purchase_visit_allocation_grp_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.charge_owner_id = 25&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.visitor_type_id = 1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.visit_allocation_type_id NOT IN (3,4)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pur.isDeleted = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;LEFT JOIN used_visit_allocations ON pva.purchase_visit_allocation_id = used_visit_allocations.purchase_visit_allocation_id&#xA;               &#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(&#x9;pva.valid_from &lt;= getdate()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.valid_to &gt;= getdate()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;OR pva.visit_validity_type_id = 2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;),&#xA;&#x9;&#x9;&#x9;calculated_visit_allocation AS&#xA;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;CASE WHEN derived_visit_allocation.visit_count_to = 9999 THEN&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CASE WHEN derived_visit_allocation.visit_validity_type_id = 2 THEN&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CASE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN derived_visit_allocation.visit_count_to = 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN derived_visit_allocation.visit_count_from = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN&#x9;(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from) + 1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(derived_visit_allocation.allocated_visit_count - derived_visit_allocation.used_visit_count)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;END AS visit_number,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;derived_visit_allocation.used_visit_count AS used_visit_number,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;derived_visit_allocation.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;FROM derived_visit_allocation&#xA;&#x9;&#x9;&#x9;)&#xA;&#xA;&#x9;&#x9;&#x9;UPDATE&#xA;&#x9;&#x9;&#x9;&#x9;##temptable&#xA;&#x9;&#x9;&#x9;SET&#xA;&#x9;&#x9;&#x9;&#x9;remaining_MEM_CLI2_count = calculated_visit_allocation.visit_number&#xA;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;##temptable&#xA;&#x9;&#x9;&#x9;&#x9;INNER JOIN calculated_visit_allocation ON ##temptable.purchase_no = calculated_visit_allocation.purchase_no&#xA;&#xA;/* GUE PPAYVISIT */&#xA;&#x9;&#x9;;WITH used_visit_allocations AS (&#xA;            &#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;COUNT(1) AS used_visit_count,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pvah2.purchase_visit_allocation_id&#xA;&#x9;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;PPass.dbo.purchase_visit_allocation_his AS pvah2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation pva2 ON pvah2.purchase_visit_allocation_id = pva2.purchase_visit_allocation_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation_link pval2 ON pva2.purchase_visit_allocation_grp_id = pval2.purchase_visit_allocation_grp_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;LEFT OUTER JOIN PPass.dbo.source_visit_allocation_mem_gue_link salg ON pva2.source_visit_allocation_id = salg.guest_source_visit_allocation_id&#xA;&#x9;&#x9;&#x9;&#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;EXISTS (&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;##temptable temp2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;temp2.purchase_no = pval2.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pvah2.isdeleted = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva2.visitor_type_id = 2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND salg.guest_source_visit_allocation_id is NULL&#xA;&#x9;&#x9;&#x9;&#x9;GROUP BY&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pvah2.purchase_visit_allocation_id&#xA;&#x9;&#x9;&#x9;),&#xA;&#x9;&#x9;&#x9;derived_visit_allocation AS (&#xA;&#x9;&#x9;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pva.visit_count_from,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pva.visit_count_to,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pva.visit_validity_type_id,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;CASE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN pva.visit_count_to = 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN pva.visit_count_from = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN&#x9;(pva.visit_count_to - pva.visit_count_from)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE (pva.visit_count_to - pva.visit_count_from) + 1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;END AS allocated_visit_count,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ISNULL(used_visit_allocations.used_visit_count, 0) AS used_visit_count,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pur.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;PPass.dbo.purchase pur&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation_link pval ON pval.purchase_no = pur.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation_grp pvag ON pvag.purchase_visit_allocation_grp_id = pval.purchase_visit_allocation_grp_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation pva ON pva.purchase_visit_allocation_grp_id = pvag.purchase_visit_allocation_grp_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.charge_owner_id = 21&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.visitor_type_id = 2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.visit_allocation_type_id NOT IN (3,4)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pur.isDeleted = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;LEFT JOIN used_visit_allocations ON pva.purchase_visit_allocation_id = used_visit_allocations.purchase_visit_allocation_id&#xA;               &#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(&#x9;pva.valid_from &lt;= getdate()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.valid_to &gt;= getdate()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;OR pva.visit_validity_type_id = 2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;),&#xA;&#x9;&#x9;&#x9;calculated_visit_allocation AS&#xA;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;CASE WHEN derived_visit_allocation.visit_count_to = 9999 THEN&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CASE WHEN derived_visit_allocation.visit_validity_type_id = 2 THEN&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CASE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN derived_visit_allocation.visit_count_to = 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN derived_visit_allocation.visit_count_from = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN&#x9;(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from) + 1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(derived_visit_allocation.allocated_visit_count - derived_visit_allocation.used_visit_count)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;END AS visit_number,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;derived_visit_allocation.used_visit_count AS used_visit_number,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;derived_visit_allocation.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;FROM derived_visit_allocation&#xA;&#x9;&#x9;&#x9;)&#xA;&#xA;&#x9;&#x9;&#x9;UPDATE&#xA;&#x9;&#x9;&#x9;&#x9;##temptable&#xA;&#x9;&#x9;&#x9;SET&#xA;&#x9;&#x9;&#x9;&#x9;remaining_GUE_PP_count = calculated_visit_allocation.visit_number&#xA;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;##temptable&#xA;&#x9;&#x9;&#x9;&#x9;INNER JOIN calculated_visit_allocation ON ##temptable.purchase_no = calculated_visit_allocation.purchase_no&#xA;&#xA;/* GUE CPAYLIST */&#xA;&#x9;&#x9;;WITH used_visit_allocations AS (&#xA;            &#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;COUNT(1) AS used_visit_count,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pvah2.purchase_visit_allocation_id&#xA;&#x9;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;PPass.dbo.purchase_visit_allocation_his AS pvah2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation pva2 ON pvah2.purchase_visit_allocation_id = pva2.purchase_visit_allocation_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation_link pval2 ON pva2.purchase_visit_allocation_grp_id = pval2.purchase_visit_allocation_grp_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;LEFT OUTER JOIN PPass.dbo.source_visit_allocation_mem_gue_link salg ON pva2.source_visit_allocation_id = salg.guest_source_visit_allocation_id&#xA;&#x9;&#x9;&#x9;&#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;EXISTS (&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;##temptable temp2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;temp2.purchase_no = pval2.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pvah2.isdeleted = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva2.visitor_type_id = 2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND salg.guest_source_visit_allocation_id is NULL&#xA;&#x9;&#x9;&#x9;&#x9;GROUP BY&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pvah2.purchase_visit_allocation_id&#xA;&#x9;&#x9;&#x9;),&#xA;&#x9;&#x9;&#x9;derived_visit_allocation AS (&#xA;&#x9;&#x9;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pva.visit_count_from,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pva.visit_count_to,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pva.visit_validity_type_id,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;CASE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN pva.visit_count_to = 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN pva.visit_count_from = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN&#x9;(pva.visit_count_to - pva.visit_count_from)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE (pva.visit_count_to - pva.visit_count_from) + 1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;END AS allocated_visit_count,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ISNULL(used_visit_allocations.used_visit_count, 0) AS used_visit_count,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pur.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;PPass.dbo.purchase pur&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation_link pval ON pval.purchase_no = pur.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation_grp pvag ON pvag.purchase_visit_allocation_grp_id = pval.purchase_visit_allocation_grp_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation pva ON pva.purchase_visit_allocation_grp_id = pvag.purchase_visit_allocation_grp_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.charge_owner_id = 22&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.visitor_type_id = 2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.visit_allocation_type_id NOT IN (3,4)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pur.isDeleted = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;LEFT JOIN used_visit_allocations ON pva.purchase_visit_allocation_id = used_visit_allocations.purchase_visit_allocation_id&#xA;               &#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(&#x9;pva.valid_from &lt;= getdate()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.valid_to &gt;= getdate()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;OR pva.visit_validity_type_id = 2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;),&#xA;&#x9;&#x9;&#x9;calculated_visit_allocation AS&#xA;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;CASE WHEN derived_visit_allocation.visit_count_to = 9999 THEN&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CASE WHEN derived_visit_allocation.visit_validity_type_id = 2 THEN&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CASE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN derived_visit_allocation.visit_count_to = 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN derived_visit_allocation.visit_count_from = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN&#x9;(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from) + 1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(derived_visit_allocation.allocated_visit_count - derived_visit_allocation.used_visit_count)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;END AS visit_number,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;derived_visit_allocation.used_visit_count AS used_visit_number,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;derived_visit_allocation.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;FROM derived_visit_allocation&#xA;&#x9;&#x9;&#x9;)&#xA;&#xA;&#x9;&#x9;&#x9;UPDATE&#xA;&#x9;&#x9;&#x9;&#x9;##temptable&#xA;&#x9;&#x9;&#x9;SET&#xA;&#x9;&#x9;&#x9;&#x9;remaining_GUE_CLI_count = calculated_visit_allocation.visit_number&#xA;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;##temptable&#xA;&#x9;&#x9;&#x9;&#x9;INNER JOIN calculated_visit_allocation ON ##temptable.purchase_no = calculated_visit_allocation.purchase_no&#xA;&#xA;/* GUE CPAYVISIT2 */&#xA;&#x9;&#x9;;WITH used_visit_allocations AS (&#xA;            &#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;COUNT(1) AS used_visit_count,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pvah2.purchase_visit_allocation_id&#xA;&#x9;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;PPass.dbo.purchase_visit_allocation_his AS pvah2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation pva2 ON pvah2.purchase_visit_allocation_id = pva2.purchase_visit_allocation_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation_link pval2 ON pva2.purchase_visit_allocation_grp_id = pval2.purchase_visit_allocation_grp_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;LEFT OUTER JOIN PPass.dbo.source_visit_allocation_mem_gue_link salg ON pva2.source_visit_allocation_id = salg.guest_source_visit_allocation_id&#xA;&#x9;&#x9;&#x9;&#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;EXISTS (&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;##temptable temp2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;temp2.purchase_no = pval2.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pvah2.isdeleted = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva2.visitor_type_id = 2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND salg.guest_source_visit_allocation_id is NULL&#xA;&#x9;&#x9;&#x9;&#x9;GROUP BY&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pvah2.purchase_visit_allocation_id&#xA;&#x9;&#x9;&#x9;),&#xA;&#x9;&#x9;&#x9;derived_visit_allocation AS (&#xA;&#x9;&#x9;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pva.visit_count_from,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pva.visit_count_to,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pva.visit_validity_type_id,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;CASE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN pva.visit_count_to = 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN pva.visit_count_from = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN&#x9;(pva.visit_count_to - pva.visit_count_from)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE (pva.visit_count_to - pva.visit_count_from) + 1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;END AS allocated_visit_count,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ISNULL(used_visit_allocations.used_visit_count, 0) AS used_visit_count,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pur.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;PPass.dbo.purchase pur&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation_link pval ON pval.purchase_no = pur.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation_grp pvag ON pvag.purchase_visit_allocation_grp_id = pval.purchase_visit_allocation_grp_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation pva ON pva.purchase_visit_allocation_grp_id = pvag.purchase_visit_allocation_grp_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.charge_owner_id = 25&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.visitor_type_id = 2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.visit_allocation_type_id NOT IN (3,4)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pur.isDeleted = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;LEFT JOIN used_visit_allocations ON pva.purchase_visit_allocation_id = used_visit_allocations.purchase_visit_allocation_id&#xA;               &#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(&#x9;pva.valid_from &lt;= getdate()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.valid_to &gt;= getdate()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;OR pva.visit_validity_type_id = 2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;),&#xA;&#x9;&#x9;&#x9;calculated_visit_allocation AS&#xA;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;CASE WHEN derived_visit_allocation.visit_count_to = 9999 THEN&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CASE WHEN derived_visit_allocation.visit_validity_type_id = 2 THEN&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CASE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN derived_visit_allocation.visit_count_to = 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN derived_visit_allocation.visit_count_from = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN&#x9;(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from) + 1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(derived_visit_allocation.allocated_visit_count - derived_visit_allocation.used_visit_count)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;END AS visit_number,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;derived_visit_allocation.used_visit_count AS used_visit_number,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;derived_visit_allocation.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;FROM derived_visit_allocation&#xA;&#x9;&#x9;&#x9;)&#xA;&#xA;&#x9;&#x9;&#x9;UPDATE&#xA;&#x9;&#x9;&#x9;&#x9;##temptable&#xA;&#x9;&#x9;&#x9;SET&#xA;&#x9;&#x9;&#x9;&#x9;remaining_GUE_CLI2_count = calculated_visit_allocation.visit_number&#xA;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;##temptable&#xA;&#x9;&#x9;&#x9;&#x9;INNER JOIN calculated_visit_allocation ON ##temptable.purchase_no = calculated_visit_allocation.purchase_no&#xA;&#xA;/*MGU PPAYVISIT */&#xA;&#x9;&#x9;;WITH used_visit_allocations AS (&#xA;            &#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;COUNT(1) AS used_visit_count,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pvah2.purchase_visit_allocation_id&#xA;&#x9;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;PPass.dbo.purchase_visit_allocation_his AS pvah2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation pva2 ON pvah2.purchase_visit_allocation_id = pva2.purchase_visit_allocation_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation_link pval2 ON pva2.purchase_visit_allocation_grp_id = pval2.purchase_visit_allocation_grp_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;LEFT OUTER JOIN PPass.dbo.source_visit_allocation_mem_gue_link salg ON pva2.source_visit_allocation_id = salg.guest_source_visit_allocation_id&#xA;&#x9;&#x9;&#x9;&#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;EXISTS (&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;##temptable temp2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;temp2.purchase_no = pval2.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pvah2.isdeleted = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva2.visitor_type_id = 3&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND salg.guest_source_visit_allocation_id is NULL&#xA;&#x9;&#x9;&#x9;&#x9;GROUP BY&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pvah2.purchase_visit_allocation_id&#xA;&#x9;&#x9;&#x9;),&#xA;&#x9;&#x9;&#x9;derived_visit_allocation AS (&#xA;&#x9;&#x9;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pva.visit_count_from,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pva.visit_count_to,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pva.visit_validity_type_id,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;CASE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN pva.visit_count_to = 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN pva.visit_count_from = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN&#x9;(pva.visit_count_to - pva.visit_count_from)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE (pva.visit_count_to - pva.visit_count_from) + 1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;END AS allocated_visit_count,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ISNULL(used_visit_allocations.used_visit_count, 0) AS used_visit_count,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pur.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;PPass.dbo.purchase pur&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation_link pval ON pval.purchase_no = pur.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation_grp pvag ON pvag.purchase_visit_allocation_grp_id = pval.purchase_visit_allocation_grp_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation pva ON pva.purchase_visit_allocation_grp_id = pvag.purchase_visit_allocation_grp_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.charge_owner_id = 21&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.visitor_type_id = 3&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.visit_allocation_type_id NOT IN (3,4)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pur.isDeleted = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;LEFT JOIN used_visit_allocations ON pva.purchase_visit_allocation_id = used_visit_allocations.purchase_visit_allocation_id&#xA;               &#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(&#x9;pva.valid_from &lt;= getdate()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.valid_to &gt;= getdate()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;OR pva.visit_validity_type_id = 2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;),&#xA;&#x9;&#x9;&#x9;calculated_visit_allocation AS&#xA;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;CASE WHEN derived_visit_allocation.visit_count_to = 9999 THEN&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CASE WHEN derived_visit_allocation.visit_validity_type_id = 2 THEN&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CASE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN derived_visit_allocation.visit_count_to = 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN derived_visit_allocation.visit_count_from = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN&#x9;(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from) + 1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(derived_visit_allocation.allocated_visit_count - derived_visit_allocation.used_visit_count)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;END AS visit_number,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;derived_visit_allocation.used_visit_count AS used_visit_number,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;derived_visit_allocation.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;FROM derived_visit_allocation&#xA;&#x9;&#x9;&#x9;)&#xA;&#xA;&#x9;&#x9;&#x9;UPDATE&#xA;&#x9;&#x9;&#x9;&#x9;##temptable&#xA;&#x9;&#x9;&#x9;SET&#xA;&#x9;&#x9;&#x9;&#x9;remaining_MGU_PP_count = calculated_visit_allocation.visit_number&#xA;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;##temptable&#xA;&#x9;&#x9;&#x9;&#x9;INNER JOIN calculated_visit_allocation ON ##temptable.purchase_no = calculated_visit_allocation.purchase_no&#xA;/* MGU CPAYVISIT */&#xA;&#x9;&#x9;;WITH used_visit_allocations AS (&#xA;            &#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;COUNT(1) AS used_visit_count,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pvah2.purchase_visit_allocation_id&#xA;&#x9;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;PPass.dbo.purchase_visit_allocation_his AS pvah2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation pva2 ON pvah2.purchase_visit_allocation_id = pva2.purchase_visit_allocation_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation_link pval2 ON pva2.purchase_visit_allocation_grp_id = pval2.purchase_visit_allocation_grp_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;LEFT OUTER JOIN PPass.dbo.source_visit_allocation_mem_gue_link salg ON pva2.source_visit_allocation_id = salg.guest_source_visit_allocation_id&#xA;&#x9;&#x9;&#x9;&#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;EXISTS (&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;##temptable temp2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;temp2.purchase_no = pval2.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pvah2.isdeleted = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva2.visitor_type_id = 3&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND salg.guest_source_visit_allocation_id is NULL&#xA;&#x9;&#x9;&#x9;&#x9;GROUP BY&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pvah2.purchase_visit_allocation_id&#xA;&#x9;&#x9;&#x9;),&#xA;&#x9;&#x9;&#x9;derived_visit_allocation AS (&#xA;&#x9;&#x9;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pva.visit_count_from,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pva.visit_count_to,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pva.visit_validity_type_id,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;CASE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN pva.visit_count_to = 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN pva.visit_count_from = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN&#x9;(pva.visit_count_to - pva.visit_count_from)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE (pva.visit_count_to - pva.visit_count_from) + 1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;END AS allocated_visit_count,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ISNULL(used_visit_allocations.used_visit_count, 0) AS used_visit_count,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pur.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;PPass.dbo.purchase pur&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation_link pval ON pval.purchase_no = pur.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation_grp pvag ON pvag.purchase_visit_allocation_grp_id = pval.purchase_visit_allocation_grp_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation pva ON pva.purchase_visit_allocation_grp_id = pvag.purchase_visit_allocation_grp_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.charge_owner_id = 22&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.visitor_type_id = 3&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.visit_allocation_type_id NOT IN (3,4)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pur.isDeleted = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;LEFT JOIN used_visit_allocations ON pva.purchase_visit_allocation_id = used_visit_allocations.purchase_visit_allocation_id&#xA;               &#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(&#x9;pva.valid_from &lt;= getdate()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.valid_to &gt;= getdate()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;OR pva.visit_validity_type_id = 2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;),&#xA;&#x9;&#x9;&#x9;calculated_visit_allocation AS&#xA;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;CASE WHEN derived_visit_allocation.visit_count_to = 9999 THEN&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CASE WHEN derived_visit_allocation.visit_validity_type_id = 2 THEN&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CASE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN derived_visit_allocation.visit_count_to = 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN derived_visit_allocation.visit_count_from = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN&#x9;(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from) + 1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(derived_visit_allocation.allocated_visit_count - derived_visit_allocation.used_visit_count)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;END AS visit_number,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;derived_visit_allocation.used_visit_count AS used_visit_number,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;derived_visit_allocation.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;FROM derived_visit_allocation&#xA;&#x9;&#x9;&#x9;)&#xA;&#xA;&#x9;&#x9;&#x9;UPDATE&#xA;&#x9;&#x9;&#x9;&#x9;##temptable&#xA;&#x9;&#x9;&#x9;SET&#xA;&#x9;&#x9;&#x9;&#x9;remaining_MGU_CLI_count = calculated_visit_allocation.visit_number&#xA;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;##temptable&#xA;&#x9;&#x9;&#x9;&#x9;INNER JOIN calculated_visit_allocation ON ##temptable.purchase_no = calculated_visit_allocation.purchase_no&#xA;&#xA;/* MGU CPAYVISIT2 */&#xA;&#x9;&#x9;;WITH used_visit_allocations AS (&#xA;            &#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;COUNT(1) AS used_visit_count,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pvah2.purchase_visit_allocation_id&#xA;&#x9;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;PPass.dbo.purchase_visit_allocation_his AS pvah2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation pva2 ON pvah2.purchase_visit_allocation_id = pva2.purchase_visit_allocation_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation_link pval2 ON pva2.purchase_visit_allocation_grp_id = pval2.purchase_visit_allocation_grp_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;LEFT OUTER JOIN PPass.dbo.source_visit_allocation_mem_gue_link salg ON pva2.source_visit_allocation_id = salg.guest_source_visit_allocation_id&#xA;&#x9;&#x9;&#x9;&#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;EXISTS (&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;##temptable temp2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;temp2.purchase_no = pval2.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pvah2.isdeleted = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva2.visitor_type_id = 3&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND salg.guest_source_visit_allocation_id is NULL&#xA;&#x9;&#x9;&#x9;&#x9;GROUP BY&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pvah2.purchase_visit_allocation_id&#xA;&#x9;&#x9;&#x9;),&#xA;&#x9;&#x9;&#x9;derived_visit_allocation AS (&#xA;&#x9;&#x9;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pva.visit_count_from,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pva.visit_count_to,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pva.visit_validity_type_id,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;CASE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN pva.visit_count_to = 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN pva.visit_count_from = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN&#x9;(pva.visit_count_to - pva.visit_count_from)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE (pva.visit_count_to - pva.visit_count_from) + 1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;END AS allocated_visit_count,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ISNULL(used_visit_allocations.used_visit_count, 0) AS used_visit_count,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pur.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;PPass.dbo.purchase pur&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation_link pval ON pval.purchase_no = pur.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation_grp pvag ON pvag.purchase_visit_allocation_grp_id = pval.purchase_visit_allocation_grp_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation pva ON pva.purchase_visit_allocation_grp_id = pvag.purchase_visit_allocation_grp_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.charge_owner_id = 25&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.visitor_type_id = 3&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.visit_allocation_type_id NOT IN (3,4)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pur.isDeleted = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;LEFT JOIN used_visit_allocations ON pva.purchase_visit_allocation_id = used_visit_allocations.purchase_visit_allocation_id&#xA;               &#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(&#x9;pva.valid_from &lt;= getdate()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.valid_to &gt;= getdate()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;OR pva.visit_validity_type_id = 2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;),&#xA;&#x9;&#x9;&#x9;calculated_visit_allocation AS&#xA;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;CASE WHEN derived_visit_allocation.visit_count_to = 9999 THEN&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CASE WHEN derived_visit_allocation.visit_validity_type_id = 2 THEN&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CASE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN derived_visit_allocation.visit_count_to = 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN derived_visit_allocation.visit_count_from = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN&#x9;(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from) + 1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(derived_visit_allocation.allocated_visit_count - derived_visit_allocation.used_visit_count)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;END AS visit_number,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;derived_visit_allocation.used_visit_count AS used_visit_number,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;derived_visit_allocation.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;FROM derived_visit_allocation&#xA;&#x9;&#x9;&#x9;)&#xA;&#xA;&#x9;&#x9;&#x9;UPDATE&#xA;&#x9;&#x9;&#x9;&#x9;##temptable&#xA;&#x9;&#x9;&#x9;SET&#xA;&#x9;&#x9;&#x9;&#x9;remaining_MGU_CLI2_count = calculated_visit_allocation.visit_number&#xA;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;##temptable&#xA;&#x9;&#x9;&#x9;&#x9;INNER JOIN calculated_visit_allocation ON ##temptable.purchase_no = calculated_visit_allocation.purchase_no&#xA;&#xA;/* SHAREDMEM PPAYVISIT */&#xA;&#x9;&#x9;;WITH used_visit_allocations AS (&#xA;            &#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;COUNT(1) AS used_visit_count,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pvah2.purchase_visit_allocation_id&#xA;&#x9;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;PPass.dbo.purchase_visit_allocation_his AS pvah2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation pva2 ON pvah2.purchase_visit_allocation_id = pva2.purchase_visit_allocation_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation_link pval2 ON pva2.purchase_visit_allocation_grp_id = pval2.purchase_visit_allocation_grp_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;LEFT OUTER JOIN PPass.dbo.source_visit_allocation_mem_gue_link salg ON pva2.source_visit_allocation_id = salg.guest_source_visit_allocation_id&#xA;&#x9;&#x9;&#x9;&#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;EXISTS (&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;##temptable temp2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;temp2.purchase_no = pval2.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pvah2.isdeleted = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva2.visitor_type_id = 8&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND salg.guest_source_visit_allocation_id is NULL&#xA;&#x9;&#x9;&#x9;&#x9;GROUP BY&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pvah2.purchase_visit_allocation_id&#xA;&#x9;&#x9;&#x9;),&#xA;&#x9;&#x9;&#x9;derived_visit_allocation AS (&#xA;&#x9;&#x9;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pva.visit_count_from,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pva.visit_count_to,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pva.visit_validity_type_id,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;CASE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN pva.visit_count_to = 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN pva.visit_count_from = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN&#x9;(pva.visit_count_to - pva.visit_count_from)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE (pva.visit_count_to - pva.visit_count_from) + 1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;END AS allocated_visit_count,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ISNULL(used_visit_allocations.used_visit_count, 0) AS used_visit_count,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pur.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;PPass.dbo.purchase pur&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation_link pval ON pval.purchase_no = pur.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation_grp pvag ON pvag.purchase_visit_allocation_grp_id = pval.purchase_visit_allocation_grp_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation pva ON pva.purchase_visit_allocation_grp_id = pvag.purchase_visit_allocation_grp_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.charge_owner_id = 21&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.visitor_type_id = 8&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.visit_allocation_type_id NOT IN (3,4)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pur.isDeleted = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;LEFT JOIN used_visit_allocations ON pva.purchase_visit_allocation_id = used_visit_allocations.purchase_visit_allocation_id&#xA;               &#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(&#x9;pva.valid_from &lt;= getdate()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.valid_to &gt;= getdate()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;OR pva.visit_validity_type_id = 2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;),&#xA;&#x9;&#x9;&#x9;calculated_visit_allocation AS&#xA;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;CASE WHEN derived_visit_allocation.visit_count_to = 9999 THEN&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CASE WHEN derived_visit_allocation.visit_validity_type_id = 2 THEN&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CASE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN derived_visit_allocation.visit_count_to = 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN derived_visit_allocation.visit_count_from = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN&#x9;(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from) + 1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(derived_visit_allocation.allocated_visit_count - derived_visit_allocation.used_visit_count)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;END AS visit_number,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;derived_visit_allocation.used_visit_count AS used_visit_number,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;derived_visit_allocation.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;FROM derived_visit_allocation&#xA;&#x9;&#x9;&#x9;)&#xA;&#xA;&#x9;&#x9;&#x9;UPDATE&#xA;&#x9;&#x9;&#x9;&#x9;##temptable&#xA;&#x9;&#x9;&#x9;SET&#xA;&#x9;&#x9;&#x9;&#x9;remaining_MEM_PP_count = calculated_visit_allocation.visit_number&#xA;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;##temptable&#xA;&#x9;&#x9;&#x9;&#x9;INNER JOIN calculated_visit_allocation ON ##temptable.purchase_no = calculated_visit_allocation.purchase_no&#xA;&#xA;/* SHAREDMEM CPAYVISIT */&#xA;&#x9;&#x9;;WITH used_visit_allocations AS (&#xA;            &#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;COUNT(1) AS used_visit_count,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pvah2.purchase_visit_allocation_id&#xA;&#x9;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;PPass.dbo.purchase_visit_allocation_his AS pvah2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation pva2 ON pvah2.purchase_visit_allocation_id = pva2.purchase_visit_allocation_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation_link pval2 ON pva2.purchase_visit_allocation_grp_id = pval2.purchase_visit_allocation_grp_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;LEFT OUTER JOIN PPass.dbo.source_visit_allocation_mem_gue_link salg ON pva2.source_visit_allocation_id = salg.guest_source_visit_allocation_id&#xA;&#x9;&#x9;&#x9;&#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;EXISTS (&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;##temptable temp2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;temp2.purchase_no = pval2.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pvah2.isdeleted = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva2.visitor_type_id = 8&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND salg.guest_source_visit_allocation_id is NULL&#xA;&#x9;&#x9;&#x9;&#x9;GROUP BY&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pvah2.purchase_visit_allocation_id&#xA;&#x9;&#x9;&#x9;),&#xA;&#x9;&#x9;&#x9;derived_visit_allocation AS (&#xA;&#x9;&#x9;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pva.visit_count_from,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pva.visit_count_to,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pva.visit_validity_type_id,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;CASE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN pva.visit_count_to = 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN pva.visit_count_from = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN&#x9;(pva.visit_count_to - pva.visit_count_from)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE (pva.visit_count_to - pva.visit_count_from) + 1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;END AS allocated_visit_count,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ISNULL(used_visit_allocations.used_visit_count, 0) AS used_visit_count,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pur.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;PPass.dbo.purchase pur&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation_link pval ON pval.purchase_no = pur.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation_grp pvag ON pvag.purchase_visit_allocation_grp_id = pval.purchase_visit_allocation_grp_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation pva ON pva.purchase_visit_allocation_grp_id = pvag.purchase_visit_allocation_grp_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.charge_owner_id = 22&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.visitor_type_id = 8&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.visit_allocation_type_id NOT IN (3,4)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pur.isDeleted = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;LEFT JOIN used_visit_allocations ON pva.purchase_visit_allocation_id = used_visit_allocations.purchase_visit_allocation_id&#xA;               &#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(&#x9;pva.valid_from &lt;= getdate()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.valid_to &gt;= getdate()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;OR pva.visit_validity_type_id = 2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;),&#xA;&#x9;&#x9;&#x9;calculated_visit_allocation AS&#xA;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;CASE WHEN derived_visit_allocation.visit_count_to = 9999 THEN&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CASE WHEN derived_visit_allocation.visit_validity_type_id = 2 THEN&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CASE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN derived_visit_allocation.visit_count_to = 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN derived_visit_allocation.visit_count_from = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN&#x9;(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from) + 1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(derived_visit_allocation.allocated_visit_count - derived_visit_allocation.used_visit_count)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;END AS visit_number,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;derived_visit_allocation.used_visit_count AS used_visit_number,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;derived_visit_allocation.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;FROM derived_visit_allocation&#xA;&#x9;&#x9;&#x9;)&#xA;&#xA;&#x9;&#x9;&#x9;UPDATE&#xA;&#x9;&#x9;&#x9;&#x9;##temptable&#xA;&#x9;&#x9;&#x9;SET&#xA;&#x9;&#x9;&#x9;&#x9;remaining_MEM_CLI_count = calculated_visit_allocation.visit_number&#xA;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;##temptable&#xA;&#x9;&#x9;&#x9;&#x9;INNER JOIN calculated_visit_allocation ON ##temptable.purchase_no = calculated_visit_allocation.purchase_no&#xA;/* SHAREDMEM CPAYVISIT2 */&#xA;&#x9;&#x9;;WITH used_visit_allocations AS (&#xA;            &#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;COUNT(1) AS used_visit_count,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pvah2.purchase_visit_allocation_id&#xA;&#x9;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;PPass.dbo.purchase_visit_allocation_his AS pvah2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation pva2 ON pvah2.purchase_visit_allocation_id = pva2.purchase_visit_allocation_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation_link pval2 ON pva2.purchase_visit_allocation_grp_id = pval2.purchase_visit_allocation_grp_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;LEFT OUTER JOIN PPass.dbo.source_visit_allocation_mem_gue_link salg ON pva2.source_visit_allocation_id = salg.guest_source_visit_allocation_id&#xA;&#x9;&#x9;&#x9;&#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;EXISTS (&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;##temptable temp2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;temp2.purchase_no = pval2.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pvah2.isdeleted = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva2.visitor_type_id = 8&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND salg.guest_source_visit_allocation_id is NULL&#xA;&#x9;&#x9;&#x9;&#x9;GROUP BY&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pvah2.purchase_visit_allocation_id&#xA;&#x9;&#x9;&#x9;),&#xA;&#x9;&#x9;&#x9;derived_visit_allocation AS (&#xA;&#x9;&#x9;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pva.visit_count_from,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pva.visit_count_to,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pva.visit_validity_type_id,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;CASE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN pva.visit_count_to = 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN pva.visit_count_from = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN&#x9;(pva.visit_count_to - pva.visit_count_from)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE (pva.visit_count_to - pva.visit_count_from) + 1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;END AS allocated_visit_count,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ISNULL(used_visit_allocations.used_visit_count, 0) AS used_visit_count,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pur.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;PPass.dbo.purchase pur&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation_link pval ON pval.purchase_no = pur.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation_grp pvag ON pvag.purchase_visit_allocation_grp_id = pval.purchase_visit_allocation_grp_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation pva ON pva.purchase_visit_allocation_grp_id = pvag.purchase_visit_allocation_grp_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.charge_owner_id = 25&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.visitor_type_id = 8&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.visit_allocation_type_id NOT IN (3,4)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pur.isDeleted = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;LEFT JOIN used_visit_allocations ON pva.purchase_visit_allocation_id = used_visit_allocations.purchase_visit_allocation_id&#xA;               &#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(&#x9;pva.valid_from &lt;= getdate()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.valid_to &gt;= getdate()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;OR pva.visit_validity_type_id = 2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;),&#xA;&#x9;&#x9;&#x9;calculated_visit_allocation AS&#xA;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;CASE WHEN derived_visit_allocation.visit_count_to = 9999 THEN&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CASE WHEN derived_visit_allocation.visit_validity_type_id = 2 THEN&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CASE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN derived_visit_allocation.visit_count_to = 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN derived_visit_allocation.visit_count_from = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN&#x9;(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from) + 1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(derived_visit_allocation.allocated_visit_count - derived_visit_allocation.used_visit_count)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;END AS visit_number,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;derived_visit_allocation.used_visit_count AS used_visit_number,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;derived_visit_allocation.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;FROM derived_visit_allocation&#xA;&#x9;&#x9;&#x9;)&#xA;&#xA;&#x9;&#x9;&#x9;UPDATE&#xA;&#x9;&#x9;&#x9;&#x9;##temptable&#xA;&#x9;&#x9;&#x9;SET&#xA;&#x9;&#x9;&#x9;&#x9;remaining_MEM_CLI2_count = calculated_visit_allocation.visit_number&#xA;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;##temptable&#xA;&#x9;&#x9;&#x9;&#x9;INNER JOIN calculated_visit_allocation ON ##temptable.purchase_no = calculated_visit_allocation.purchase_no&#xA;&#xA;/* SHAREDGUE PPAYVISIT */&#xA;&#x9;&#x9;;WITH used_visit_allocations AS (&#xA;            &#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;COUNT(1) AS used_visit_count,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pvah2.purchase_visit_allocation_id&#xA;&#x9;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;PPass.dbo.purchase_visit_allocation_his AS pvah2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation pva2 ON pvah2.purchase_visit_allocation_id = pva2.purchase_visit_allocation_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation_link pval2 ON pva2.purchase_visit_allocation_grp_id = pval2.purchase_visit_allocation_grp_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;LEFT OUTER JOIN PPass.dbo.source_visit_allocation_mem_gue_link salg ON pva2.source_visit_allocation_id = salg.guest_source_visit_allocation_id&#xA;&#x9;&#x9;&#x9;&#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;EXISTS (&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;##temptable temp2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;temp2.purchase_no = pval2.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pvah2.isdeleted = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva2.visitor_type_id = 9&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND salg.guest_source_visit_allocation_id is NULL&#xA;&#x9;&#x9;&#x9;&#x9;GROUP BY&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pvah2.purchase_visit_allocation_id&#xA;&#x9;&#x9;&#x9;),&#xA;&#x9;&#x9;&#x9;derived_visit_allocation AS (&#xA;&#x9;&#x9;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pva.visit_count_from,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pva.visit_count_to,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pva.visit_validity_type_id,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;CASE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN pva.visit_count_to = 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN pva.visit_count_from = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN&#x9;(pva.visit_count_to - pva.visit_count_from)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE (pva.visit_count_to - pva.visit_count_from) + 1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;END AS allocated_visit_count,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ISNULL(used_visit_allocations.used_visit_count, 0) AS used_visit_count,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pur.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;PPass.dbo.purchase pur&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation_link pval ON pval.purchase_no = pur.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation_grp pvag ON pvag.purchase_visit_allocation_grp_id = pval.purchase_visit_allocation_grp_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation pva ON pva.purchase_visit_allocation_grp_id = pvag.purchase_visit_allocation_grp_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.charge_owner_id = 21&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.visitor_type_id = 9&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.visit_allocation_type_id NOT IN (3,4)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pur.isDeleted = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;LEFT JOIN used_visit_allocations ON pva.purchase_visit_allocation_id = used_visit_allocations.purchase_visit_allocation_id&#xA;               &#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(&#x9;pva.valid_from &lt;= getdate()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.valid_to &gt;= getdate()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;OR pva.visit_validity_type_id = 2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;),&#xA;&#x9;&#x9;&#x9;calculated_visit_allocation AS&#xA;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;CASE WHEN derived_visit_allocation.visit_count_to = 9999 THEN&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CASE WHEN derived_visit_allocation.visit_validity_type_id = 2 THEN&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CASE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN derived_visit_allocation.visit_count_to = 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN derived_visit_allocation.visit_count_from = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN&#x9;(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from) + 1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(derived_visit_allocation.allocated_visit_count - derived_visit_allocation.used_visit_count)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;END AS visit_number,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;derived_visit_allocation.used_visit_count AS used_visit_number,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;derived_visit_allocation.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;FROM derived_visit_allocation&#xA;&#x9;&#x9;&#x9;)&#xA;&#xA;&#x9;&#x9;&#x9;UPDATE&#xA;&#x9;&#x9;&#x9;&#x9;##temptable&#xA;&#x9;&#x9;&#x9;SET&#xA;&#x9;&#x9;&#x9;&#x9;remaining_GUE_PP_count = calculated_visit_allocation.visit_number&#xA;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;##temptable&#xA;&#x9;&#x9;&#x9;&#x9;INNER JOIN calculated_visit_allocation ON ##temptable.purchase_no = calculated_visit_allocation.purchase_no&#xA;&#xA;/* SHAREDGUE CPAYVISIT */&#xA;&#x9;&#x9;;WITH used_visit_allocations AS (&#xA;            &#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;COUNT(1) AS used_visit_count,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pvah2.purchase_visit_allocation_id&#xA;&#x9;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;PPass.dbo.purchase_visit_allocation_his AS pvah2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation pva2 ON pvah2.purchase_visit_allocation_id = pva2.purchase_visit_allocation_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation_link pval2 ON pva2.purchase_visit_allocation_grp_id = pval2.purchase_visit_allocation_grp_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;LEFT OUTER JOIN PPass.dbo.source_visit_allocation_mem_gue_link salg ON pva2.source_visit_allocation_id = salg.guest_source_visit_allocation_id&#xA;&#x9;&#x9;&#x9;&#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;EXISTS (&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;##temptable temp2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;temp2.purchase_no = pval2.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pvah2.isdeleted = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva2.visitor_type_id = 9&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND salg.guest_source_visit_allocation_id is NULL&#xA;&#x9;&#x9;&#x9;&#x9;GROUP BY&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pvah2.purchase_visit_allocation_id&#xA;&#x9;&#x9;&#x9;),&#xA;&#x9;&#x9;&#x9;derived_visit_allocation AS (&#xA;&#x9;&#x9;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pva.visit_count_from,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pva.visit_count_to,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pva.visit_validity_type_id,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;CASE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN pva.visit_count_to = 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN pva.visit_count_from = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN&#x9;(pva.visit_count_to - pva.visit_count_from)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE (pva.visit_count_to - pva.visit_count_from) + 1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;END AS allocated_visit_count,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ISNULL(used_visit_allocations.used_visit_count, 0) AS used_visit_count,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pur.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;PPass.dbo.purchase pur&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation_link pval ON pval.purchase_no = pur.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation_grp pvag ON pvag.purchase_visit_allocation_grp_id = pval.purchase_visit_allocation_grp_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation pva ON pva.purchase_visit_allocation_grp_id = pvag.purchase_visit_allocation_grp_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.charge_owner_id = 22&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.visitor_type_id = 9&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.visit_allocation_type_id NOT IN (3,4)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pur.isDeleted = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;LEFT JOIN used_visit_allocations ON pva.purchase_visit_allocation_id = used_visit_allocations.purchase_visit_allocation_id&#xA;               &#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(&#x9;pva.valid_from &lt;= getdate()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.valid_to &gt;= getdate()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;OR pva.visit_validity_type_id = 2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;),&#xA;&#x9;&#x9;&#x9;calculated_visit_allocation AS&#xA;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;CASE WHEN derived_visit_allocation.visit_count_to = 9999 THEN&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CASE WHEN derived_visit_allocation.visit_validity_type_id = 2 THEN&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CASE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN derived_visit_allocation.visit_count_to = 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN derived_visit_allocation.visit_count_from = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN&#x9;(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from) + 1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(derived_visit_allocation.allocated_visit_count - derived_visit_allocation.used_visit_count)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;END AS visit_number,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;derived_visit_allocation.used_visit_count AS used_visit_number,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;derived_visit_allocation.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;FROM derived_visit_allocation&#xA;&#x9;&#x9;&#x9;)&#xA;&#xA;&#x9;&#x9;&#x9;UPDATE&#xA;&#x9;&#x9;&#x9;&#x9;##temptable&#xA;&#x9;&#x9;&#x9;SET&#xA;&#x9;&#x9;&#x9;&#x9;remaining_GUE_CLI_count = calculated_visit_allocation.visit_number&#xA;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;##temptable&#xA;&#x9;&#x9;&#x9;&#x9;INNER JOIN calculated_visit_allocation ON ##temptable.purchase_no = calculated_visit_allocation.purchase_no&#xA;&#xA;/* SHAREDGUE CPAYVISIT2 */&#xA;&#x9;&#x9;;WITH used_visit_allocations AS (&#xA;            &#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;COUNT(1) AS used_visit_count,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pvah2.purchase_visit_allocation_id&#xA;&#x9;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;PPass.dbo.purchase_visit_allocation_his AS pvah2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation pva2 ON pvah2.purchase_visit_allocation_id = pva2.purchase_visit_allocation_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation_link pval2 ON pva2.purchase_visit_allocation_grp_id = pval2.purchase_visit_allocation_grp_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;LEFT OUTER JOIN PPass.dbo.source_visit_allocation_mem_gue_link salg ON pva2.source_visit_allocation_id = salg.guest_source_visit_allocation_id&#xA;&#x9;&#x9;&#x9;&#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;EXISTS (&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;##temptable temp2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;temp2.purchase_no = pval2.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pvah2.isdeleted = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva2.visitor_type_id = 9&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND salg.guest_source_visit_allocation_id is NULL&#xA;&#x9;&#x9;&#x9;&#x9;GROUP BY&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pvah2.purchase_visit_allocation_id&#xA;&#x9;&#x9;&#x9;),&#xA;&#x9;&#x9;&#x9;derived_visit_allocation AS (&#xA;&#x9;&#x9;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pva.visit_count_from,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pva.visit_count_to,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pva.visit_validity_type_id,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;CASE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN pva.visit_count_to = 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN pva.visit_count_from = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN&#x9;(pva.visit_count_to - pva.visit_count_from)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE (pva.visit_count_to - pva.visit_count_from) + 1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;END AS allocated_visit_count,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ISNULL(used_visit_allocations.used_visit_count, 0) AS used_visit_count,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pur.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;PPass.dbo.purchase pur&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation_link pval ON pval.purchase_no = pur.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation_grp pvag ON pvag.purchase_visit_allocation_grp_id = pval.purchase_visit_allocation_grp_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation pva ON pva.purchase_visit_allocation_grp_id = pvag.purchase_visit_allocation_grp_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.charge_owner_id = 25&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.visitor_type_id = 9&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.visit_allocation_type_id NOT IN (3,4)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pur.isDeleted = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;LEFT JOIN used_visit_allocations ON pva.purchase_visit_allocation_id = used_visit_allocations.purchase_visit_allocation_id&#xA;               &#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(&#x9;pva.valid_from &lt;= getdate()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.valid_to &gt;= getdate()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;OR pva.visit_validity_type_id = 2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;),&#xA;&#x9;&#x9;&#x9;calculated_visit_allocation AS&#xA;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;CASE WHEN derived_visit_allocation.visit_count_to = 9999 THEN&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CASE WHEN derived_visit_allocation.visit_validity_type_id = 2 THEN&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CASE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN derived_visit_allocation.visit_count_to = 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN derived_visit_allocation.visit_count_from = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN&#x9;(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from) + 1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(derived_visit_allocation.allocated_visit_count - derived_visit_allocation.used_visit_count)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;END AS visit_number,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;derived_visit_allocation.used_visit_count AS used_visit_number,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;derived_visit_allocation.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;FROM derived_visit_allocation&#xA;&#x9;&#x9;&#x9;)&#xA;&#xA;&#x9;&#x9;&#x9;UPDATE&#xA;&#x9;&#x9;&#x9;&#x9;##temptable&#xA;&#x9;&#x9;&#x9;SET&#xA;&#x9;&#x9;&#x9;&#x9;remaining_GUE_CLI2_count = calculated_visit_allocation.visit_number&#xA;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;##temptable&#xA;&#x9;&#x9;&#x9;&#x9;INNER JOIN calculated_visit_allocation ON ##temptable.purchase_no = calculated_visit_allocation.purchase_no&#xA;/* SHAREDMGU PPAYVISIT */&#xA;&#xA;&#x9;&#x9;;WITH used_visit_allocations AS (&#xA;            &#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;COUNT(1) AS used_visit_count,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pvah2.purchase_visit_allocation_id&#xA;&#x9;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;PPass.dbo.purchase_visit_allocation_his AS pvah2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation pva2 ON pvah2.purchase_visit_allocation_id = pva2.purchase_visit_allocation_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation_link pval2 ON pva2.purchase_visit_allocation_grp_id = pval2.purchase_visit_allocation_grp_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;LEFT OUTER JOIN PPass.dbo.source_visit_allocation_mem_gue_link salg ON pva2.source_visit_allocation_id = salg.guest_source_visit_allocation_id&#xA;&#x9;&#x9;&#x9;&#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;EXISTS (&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;##temptable temp2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;temp2.purchase_no = pval2.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pvah2.isdeleted = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva2.visitor_type_id = 10&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND salg.guest_source_visit_allocation_id is NULL&#xA;&#x9;&#x9;&#x9;&#x9;GROUP BY&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pvah2.purchase_visit_allocation_id&#xA;&#x9;&#x9;&#x9;),&#xA;&#x9;&#x9;&#x9;derived_visit_allocation AS (&#xA;&#x9;&#x9;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pva.visit_count_from,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pva.visit_count_to,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pva.visit_validity_type_id,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;CASE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN pva.visit_count_to = 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN pva.visit_count_from = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN&#x9;(pva.visit_count_to - pva.visit_count_from)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE (pva.visit_count_to - pva.visit_count_from) + 1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;END AS allocated_visit_count,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ISNULL(used_visit_allocations.used_visit_count, 0) AS used_visit_count,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pur.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;PPass.dbo.purchase pur&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation_link pval ON pval.purchase_no = pur.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation_grp pvag ON pvag.purchase_visit_allocation_grp_id = pval.purchase_visit_allocation_grp_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation pva ON pva.purchase_visit_allocation_grp_id = pvag.purchase_visit_allocation_grp_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.charge_owner_id = 21&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.visitor_type_id = 10&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.visit_allocation_type_id NOT IN (3,4)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pur.isDeleted = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;LEFT JOIN used_visit_allocations ON pva.purchase_visit_allocation_id = used_visit_allocations.purchase_visit_allocation_id&#xA;               &#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(&#x9;pva.valid_from &lt;= getdate()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.valid_to &gt;= getdate()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;OR pva.visit_validity_type_id = 2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;),&#xA;&#x9;&#x9;&#x9;calculated_visit_allocation AS&#xA;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;CASE WHEN derived_visit_allocation.visit_count_to = 9999 THEN&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CASE WHEN derived_visit_allocation.visit_validity_type_id = 2 THEN&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CASE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN derived_visit_allocation.visit_count_to = 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN derived_visit_allocation.visit_count_from = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN&#x9;(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from) + 1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(derived_visit_allocation.allocated_visit_count - derived_visit_allocation.used_visit_count)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;END AS visit_number,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;derived_visit_allocation.used_visit_count AS used_visit_number,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;derived_visit_allocation.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;FROM derived_visit_allocation&#xA;&#x9;&#x9;&#x9;)&#xA;&#xA;&#x9;&#x9;&#x9;UPDATE&#xA;&#x9;&#x9;&#x9;&#x9;##temptable&#xA;&#x9;&#x9;&#x9;SET&#xA;&#x9;&#x9;&#x9;&#x9;remaining_MGU_PP_count = calculated_visit_allocation.visit_number&#xA;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;##temptable&#xA;&#x9;&#x9;&#x9;&#x9;INNER JOIN calculated_visit_allocation ON ##temptable.purchase_no = calculated_visit_allocation.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;/* SHAREDMGU CPAYVISIT */&#xA;&#x9;&#x9;;WITH used_visit_allocations AS (&#xA;            &#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;COUNT(1) AS used_visit_count,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pvah2.purchase_visit_allocation_id&#xA;&#x9;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;PPass.dbo.purchase_visit_allocation_his AS pvah2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation pva2 ON pvah2.purchase_visit_allocation_id = pva2.purchase_visit_allocation_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation_link pval2 ON pva2.purchase_visit_allocation_grp_id = pval2.purchase_visit_allocation_grp_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;LEFT OUTER JOIN PPass.dbo.source_visit_allocation_mem_gue_link salg ON pva2.source_visit_allocation_id = salg.guest_source_visit_allocation_id&#xA;&#x9;&#x9;&#x9;&#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;EXISTS (&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;##temptable temp2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;temp2.purchase_no = pval2.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pvah2.isdeleted = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva2.visitor_type_id = 10&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND salg.guest_source_visit_allocation_id is NULL&#xA;&#x9;&#x9;&#x9;&#x9;GROUP BY&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pvah2.purchase_visit_allocation_id&#xA;&#x9;&#x9;&#x9;),&#xA;&#x9;&#x9;&#x9;derived_visit_allocation AS (&#xA;&#x9;&#x9;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pva.visit_count_from,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pva.visit_count_to,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pva.visit_validity_type_id,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;CASE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN pva.visit_count_to = 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN pva.visit_count_from = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN&#x9;(pva.visit_count_to - pva.visit_count_from)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE (pva.visit_count_to - pva.visit_count_from) + 1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;END AS allocated_visit_count,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ISNULL(used_visit_allocations.used_visit_count, 0) AS used_visit_count,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pur.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;PPass.dbo.purchase pur&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation_link pval ON pval.purchase_no = pur.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation_grp pvag ON pvag.purchase_visit_allocation_grp_id = pval.purchase_visit_allocation_grp_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation pva ON pva.purchase_visit_allocation_grp_id = pvag.purchase_visit_allocation_grp_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.charge_owner_id = 22&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.visitor_type_id = 10&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.visit_allocation_type_id NOT IN (3,4)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pur.isDeleted = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;LEFT JOIN used_visit_allocations ON pva.purchase_visit_allocation_id = used_visit_allocations.purchase_visit_allocation_id&#xA;               &#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(&#x9;pva.valid_from &lt;= getdate()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.valid_to &gt;= getdate()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;OR pva.visit_validity_type_id = 2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;),&#xA;&#x9;&#x9;&#x9;calculated_visit_allocation AS&#xA;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;CASE WHEN derived_visit_allocation.visit_count_to = 9999 THEN&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CASE WHEN derived_visit_allocation.visit_validity_type_id = 2 THEN&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CASE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN derived_visit_allocation.visit_count_to = 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN derived_visit_allocation.visit_count_from = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN&#x9;(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from) + 1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(derived_visit_allocation.allocated_visit_count - derived_visit_allocation.used_visit_count)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;END AS visit_number,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;derived_visit_allocation.used_visit_count AS used_visit_number,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;derived_visit_allocation.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;FROM derived_visit_allocation&#xA;&#x9;&#x9;&#x9;)&#xA;&#xA;&#x9;&#x9;&#x9;UPDATE&#xA;&#x9;&#x9;&#x9;&#x9;##temptable&#xA;&#x9;&#x9;&#x9;SET&#xA;&#x9;&#x9;&#x9;&#x9;remaining_MGU_CLI_count = calculated_visit_allocation.visit_number&#xA;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;##temptable&#xA;&#x9;&#x9;&#x9;&#x9;INNER JOIN calculated_visit_allocation ON ##temptable.purchase_no = calculated_visit_allocation.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;/*SHAREDMGU CPAYVISIT2 */&#xA;&#x9;&#x9;;WITH used_visit_allocations AS (&#xA;            &#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;COUNT(1) AS used_visit_count,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pvah2.purchase_visit_allocation_id&#xA;&#x9;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;PPass.dbo.purchase_visit_allocation_his AS pvah2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation pva2 ON pvah2.purchase_visit_allocation_id = pva2.purchase_visit_allocation_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation_link pval2 ON pva2.purchase_visit_allocation_grp_id = pval2.purchase_visit_allocation_grp_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;LEFT OUTER JOIN PPass.dbo.source_visit_allocation_mem_gue_link salg ON pva2.source_visit_allocation_id = salg.guest_source_visit_allocation_id&#xA;&#x9;&#x9;&#x9;&#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;EXISTS (&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;##temptable temp2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;temp2.purchase_no = pval2.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pvah2.isdeleted = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva2.visitor_type_id = 10&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND salg.guest_source_visit_allocation_id is NULL&#xA;&#x9;&#x9;&#x9;&#x9;GROUP BY&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pvah2.purchase_visit_allocation_id&#xA;&#x9;&#x9;&#x9;),&#xA;&#x9;&#x9;&#x9;derived_visit_allocation AS (&#xA;&#x9;&#x9;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pva.visit_count_from,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pva.visit_count_to,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pva.visit_validity_type_id,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;CASE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN pva.visit_count_to = 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN pva.visit_count_from = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN&#x9;(pva.visit_count_to - pva.visit_count_from)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE (pva.visit_count_to - pva.visit_count_from) + 1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;END AS allocated_visit_count,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ISNULL(used_visit_allocations.used_visit_count, 0) AS used_visit_count,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pur.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;PPass.dbo.purchase pur&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation_link pval ON pval.purchase_no = pur.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation_grp pvag ON pvag.purchase_visit_allocation_grp_id = pval.purchase_visit_allocation_grp_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation pva ON pva.purchase_visit_allocation_grp_id = pvag.purchase_visit_allocation_grp_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.charge_owner_id = 25&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.visitor_type_id = 10&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.visit_allocation_type_id NOT IN (3,4)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pur.isDeleted = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;LEFT JOIN used_visit_allocations ON pva.purchase_visit_allocation_id = used_visit_allocations.purchase_visit_allocation_id&#xA;               &#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(&#x9;pva.valid_from &lt;= getdate()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.valid_to &gt;= getdate()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;OR pva.visit_validity_type_id = 2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;),&#xA;&#x9;&#x9;&#x9;calculated_visit_allocation AS&#xA;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;CASE WHEN derived_visit_allocation.visit_count_to = 9999 THEN&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CASE WHEN derived_visit_allocation.visit_validity_type_id = 2 THEN&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CASE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN derived_visit_allocation.visit_count_to = 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN derived_visit_allocation.visit_count_from = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN&#x9;(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from) + 1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(derived_visit_allocation.allocated_visit_count - derived_visit_allocation.used_visit_count)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;END AS visit_number,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;derived_visit_allocation.used_visit_count AS used_visit_number,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;derived_visit_allocation.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;FROM derived_visit_allocation&#xA;&#x9;&#x9;&#x9;)&#xA;&#xA;&#x9;&#x9;&#x9;UPDATE&#xA;&#x9;&#x9;&#x9;&#x9;##temptable&#xA;&#x9;&#x9;&#x9;SET&#xA;&#x9;&#x9;&#x9;&#x9;remaining_MGU_CLI2_count = calculated_visit_allocation.visit_number&#xA;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;##temptable&#xA;&#x9;&#x9;&#x9;&#x9;INNER JOIN calculated_visit_allocation ON ##temptable.purchase_no = calculated_visit_allocation.purchase_no&#xA;/*OFFERMEM PPAYVISIT */&#xA;;WITH used_visit_allocations AS (&#xA;            &#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;COUNT(1) AS used_visit_count,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pvah2.purchase_visit_allocation_id&#xA;&#x9;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;PPass.dbo.purchase_visit_allocation_his AS pvah2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation pva2 ON pvah2.purchase_visit_allocation_id = pva2.purchase_visit_allocation_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation_link pval2 ON pva2.purchase_visit_allocation_grp_id = pval2.purchase_visit_allocation_grp_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;LEFT OUTER JOIN PPass.dbo.source_visit_allocation_mem_gue_link salg ON pva2.source_visit_allocation_id = salg.guest_source_visit_allocation_id&#xA;&#x9;&#x9;&#x9;&#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;EXISTS (&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;##temptable temp2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;temp2.purchase_no = pval2.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pvah2.isdeleted = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva2.visitor_type_id = 6&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND salg.guest_source_visit_allocation_id is NULL&#xA;&#x9;&#x9;&#x9;&#x9;GROUP BY&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pvah2.purchase_visit_allocation_id&#xA;&#x9;&#x9;&#x9;),&#xA;&#x9;&#x9;&#x9;derived_visit_allocation AS (&#xA;&#x9;&#x9;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pva.visit_count_from,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pva.visit_count_to,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pva.visit_validity_type_id,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;CASE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN pva.visit_count_to = 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN pva.visit_count_from = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN&#x9;(pva.visit_count_to - pva.visit_count_from)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE (pva.visit_count_to - pva.visit_count_from) + 1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;END AS allocated_visit_count,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ISNULL(used_visit_allocations.used_visit_count, 0) AS used_visit_count,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pur.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;PPass.dbo.purchase pur&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation_link pval ON pval.purchase_no = pur.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation_grp pvag ON pvag.purchase_visit_allocation_grp_id = pval.purchase_visit_allocation_grp_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation pva ON pva.purchase_visit_allocation_grp_id = pvag.purchase_visit_allocation_grp_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.charge_owner_id = 21&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.visitor_type_id = 6&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.visit_allocation_type_id NOT IN (3,4)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pur.isDeleted = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;LEFT JOIN used_visit_allocations ON pva.purchase_visit_allocation_id = used_visit_allocations.purchase_visit_allocation_id&#xA;               &#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(&#x9;pva.valid_from &lt;= getdate()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.valid_to &gt;= getdate()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;OR pva.visit_validity_type_id = 2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;),&#xA;&#x9;&#x9;&#x9;calculated_visit_allocation AS&#xA;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;CASE WHEN derived_visit_allocation.visit_count_to = 9999 THEN&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CASE WHEN derived_visit_allocation.visit_validity_type_id = 2 THEN&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CASE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN derived_visit_allocation.visit_count_to = 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN derived_visit_allocation.visit_count_from = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN&#x9;(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from) + 1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(derived_visit_allocation.allocated_visit_count - derived_visit_allocation.used_visit_count)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;END AS visit_number,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;derived_visit_allocation.used_visit_count AS used_visit_number,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;derived_visit_allocation.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;FROM derived_visit_allocation&#xA;&#x9;&#x9;&#x9;)&#xA;&#xA;&#x9;&#x9;&#x9;UPDATE&#xA;&#x9;&#x9;&#x9;&#x9;##temptable&#xA;&#x9;&#x9;&#x9;SET&#xA;&#x9;&#x9;&#x9;&#x9;remaining_MEM_PP_count = calculated_visit_allocation.visit_number&#xA;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;##temptable&#xA;&#x9;&#x9;&#x9;&#x9;INNER JOIN calculated_visit_allocation ON ##temptable.purchase_no = calculated_visit_allocation.purchase_no&#xA;&#x9;&#x9;/* OFFERMEMCPAYLIST */&#xA;&#x9;&#x9;;WITH used_visit_allocations AS (&#xA;            &#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;COUNT(1) AS used_visit_count,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pvah2.purchase_visit_allocation_id&#xA;&#x9;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;PPass.dbo.purchase_visit_allocation_his AS pvah2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation pva2 ON pvah2.purchase_visit_allocation_id = pva2.purchase_visit_allocation_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation_link pval2 ON pva2.purchase_visit_allocation_grp_id = pval2.purchase_visit_allocation_grp_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;LEFT OUTER JOIN PPass.dbo.source_visit_allocation_mem_gue_link salg ON pva2.source_visit_allocation_id = salg.guest_source_visit_allocation_id&#xA;&#x9;&#x9;&#x9;&#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;EXISTS (&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;##temptable temp2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;temp2.purchase_no = pval2.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pvah2.isdeleted = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva2.visitor_type_id = 6&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND salg.guest_source_visit_allocation_id is NULL&#xA;&#x9;&#x9;&#x9;&#x9;GROUP BY&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pvah2.purchase_visit_allocation_id&#xA;&#x9;&#x9;&#x9;),&#xA;&#x9;&#x9;&#x9;derived_visit_allocation AS (&#xA;&#x9;&#x9;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pva.visit_count_from,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pva.visit_count_to,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pva.visit_validity_type_id,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;CASE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN pva.visit_count_to = 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN pva.visit_count_from = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN&#x9;(pva.visit_count_to - pva.visit_count_from)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE (pva.visit_count_to - pva.visit_count_from) + 1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;END AS allocated_visit_count,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ISNULL(used_visit_allocations.used_visit_count, 0) AS used_visit_count,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pur.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;PPass.dbo.purchase pur&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation_link pval ON pval.purchase_no = pur.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation_grp pvag ON pvag.purchase_visit_allocation_grp_id = pval.purchase_visit_allocation_grp_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation pva ON pva.purchase_visit_allocation_grp_id = pvag.purchase_visit_allocation_grp_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.charge_owner_id = 22&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.visitor_type_id = 6&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.visit_allocation_type_id NOT IN (3,4)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pur.isDeleted = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;LEFT JOIN used_visit_allocations ON pva.purchase_visit_allocation_id = used_visit_allocations.purchase_visit_allocation_id&#xA;               &#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(&#x9;pva.valid_from &lt;= getdate()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.valid_to &gt;= getdate()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;OR pva.visit_validity_type_id = 2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;),&#xA;&#x9;&#x9;&#x9;calculated_visit_allocation AS&#xA;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;CASE WHEN derived_visit_allocation.visit_count_to = 9999 THEN&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CASE WHEN derived_visit_allocation.visit_validity_type_id = 2 THEN&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CASE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN derived_visit_allocation.visit_count_to = 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN derived_visit_allocation.visit_count_from = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN&#x9;(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from) + 1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(derived_visit_allocation.allocated_visit_count - derived_visit_allocation.used_visit_count)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;END AS visit_number,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;derived_visit_allocation.used_visit_count AS used_visit_number,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;derived_visit_allocation.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;FROM derived_visit_allocation&#xA;&#x9;&#x9;&#x9;)&#xA;&#xA;&#x9;&#x9;&#x9;UPDATE&#xA;&#x9;&#x9;&#x9;&#x9;##temptable&#xA;&#x9;&#x9;&#x9;SET&#xA;&#x9;&#x9;&#x9;&#x9;remaining_MEM_CLI_count = calculated_visit_allocation.visit_number&#xA;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;##temptable&#xA;&#x9;&#x9;&#x9;&#x9;INNER JOIN calculated_visit_allocation ON ##temptable.purchase_no = calculated_visit_allocation.purchase_no&#xA;&#x9;&#x9;/* OFFERMEMCPAYLIST2 */&#xA;;WITH used_visit_allocations AS (&#xA;            &#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;COUNT(1) AS used_visit_count,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pvah2.purchase_visit_allocation_id&#xA;&#x9;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;PPass.dbo.purchase_visit_allocation_his AS pvah2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation pva2 ON pvah2.purchase_visit_allocation_id = pva2.purchase_visit_allocation_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation_link pval2 ON pva2.purchase_visit_allocation_grp_id = pval2.purchase_visit_allocation_grp_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;LEFT OUTER JOIN PPass.dbo.source_visit_allocation_mem_gue_link salg ON pva2.source_visit_allocation_id = salg.guest_source_visit_allocation_id&#xA;&#x9;&#x9;&#x9;&#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;EXISTS (&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;##temptable temp2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;temp2.purchase_no = pval2.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pvah2.isdeleted = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva2.visitor_type_id = 6&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND salg.guest_source_visit_allocation_id is NULL&#xA;&#x9;&#x9;&#x9;&#x9;GROUP BY&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pvah2.purchase_visit_allocation_id&#xA;&#x9;&#x9;&#x9;),&#xA;&#x9;&#x9;&#x9;derived_visit_allocation AS (&#xA;&#x9;&#x9;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pva.visit_count_from,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pva.visit_count_to,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pva.visit_validity_type_id,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;CASE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN pva.visit_count_to = 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN pva.visit_count_from = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN&#x9;(pva.visit_count_to - pva.visit_count_from)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE (pva.visit_count_to - pva.visit_count_from) + 1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;END AS allocated_visit_count,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ISNULL(used_visit_allocations.used_visit_count, 0) AS used_visit_count,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pur.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;PPass.dbo.purchase pur&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation_link pval ON pval.purchase_no = pur.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation_grp pvag ON pvag.purchase_visit_allocation_grp_id = pval.purchase_visit_allocation_grp_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation pva ON pva.purchase_visit_allocation_grp_id = pvag.purchase_visit_allocation_grp_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.charge_owner_id = 25&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.visitor_type_id = 6&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.visit_allocation_type_id NOT IN (3,4)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pur.isDeleted = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;LEFT JOIN used_visit_allocations ON pva.purchase_visit_allocation_id = used_visit_allocations.purchase_visit_allocation_id&#xA;               &#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(&#x9;pva.valid_from &lt;= getdate()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.valid_to &gt;= getdate()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;OR pva.visit_validity_type_id = 2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;),&#xA;&#x9;&#x9;&#x9;calculated_visit_allocation AS&#xA;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;CASE WHEN derived_visit_allocation.visit_count_to = 9999 THEN&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CASE WHEN derived_visit_allocation.visit_validity_type_id = 2 THEN&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CASE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN derived_visit_allocation.visit_count_to = 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN derived_visit_allocation.visit_count_from = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN&#x9;(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from) + 1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(derived_visit_allocation.allocated_visit_count - derived_visit_allocation.used_visit_count)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;END AS visit_number,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;derived_visit_allocation.used_visit_count AS used_visit_number,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;derived_visit_allocation.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;FROM derived_visit_allocation&#xA;&#x9;&#x9;&#x9;)&#xA;&#xA;&#x9;&#x9;&#x9;UPDATE&#xA;&#x9;&#x9;&#x9;&#x9;##temptable&#xA;&#x9;&#x9;&#x9;SET&#xA;&#x9;&#x9;&#x9;&#x9;remaining_MEM_CLI2_count = calculated_visit_allocation.visit_number&#xA;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;##temptable&#xA;&#x9;&#x9;&#x9;&#x9;INNER JOIN calculated_visit_allocation ON ##temptable.purchase_no = calculated_visit_allocation.purchase_no&#xA;&#x9;&#x9;/* OFFERGUEPPAYLIST */&#xA;;WITH used_visit_allocations AS (&#xA;            &#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;COUNT(1) AS used_visit_count,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pvah2.purchase_visit_allocation_id&#xA;&#x9;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;PPass.dbo.purchase_visit_allocation_his AS pvah2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation pva2 ON pvah2.purchase_visit_allocation_id = pva2.purchase_visit_allocation_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation_link pval2 ON pva2.purchase_visit_allocation_grp_id = pval2.purchase_visit_allocation_grp_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;LEFT OUTER JOIN PPass.dbo.source_visit_allocation_mem_gue_link salg ON pva2.source_visit_allocation_id = salg.guest_source_visit_allocation_id&#xA;&#x9;&#x9;&#x9;&#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;EXISTS (&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;##temptable temp2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;temp2.purchase_no = pval2.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pvah2.isdeleted = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva2.visitor_type_id = 5&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND salg.guest_source_visit_allocation_id is NULL&#xA;&#x9;&#x9;&#x9;&#x9;GROUP BY&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pvah2.purchase_visit_allocation_id&#xA;&#x9;&#x9;&#x9;),&#xA;&#x9;&#x9;&#x9;derived_visit_allocation AS (&#xA;&#x9;&#x9;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pva.visit_count_from,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pva.visit_count_to,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pva.visit_validity_type_id,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;CASE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN pva.visit_count_to = 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN pva.visit_count_from = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN&#x9;(pva.visit_count_to - pva.visit_count_from)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE (pva.visit_count_to - pva.visit_count_from) + 1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;END AS allocated_visit_count,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ISNULL(used_visit_allocations.used_visit_count, 0) AS used_visit_count,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pur.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;PPass.dbo.purchase pur&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation_link pval ON pval.purchase_no = pur.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation_grp pvag ON pvag.purchase_visit_allocation_grp_id = pval.purchase_visit_allocation_grp_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation pva ON pva.purchase_visit_allocation_grp_id = pvag.purchase_visit_allocation_grp_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.charge_owner_id = 21&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.visitor_type_id = 5&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.visit_allocation_type_id NOT IN (3,4)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pur.isDeleted = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;LEFT JOIN used_visit_allocations ON pva.purchase_visit_allocation_id = used_visit_allocations.purchase_visit_allocation_id&#xA;               &#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(&#x9;pva.valid_from &lt;= getdate()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.valid_to &gt;= getdate()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;OR pva.visit_validity_type_id = 2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;),&#xA;&#x9;&#x9;&#x9;calculated_visit_allocation AS&#xA;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;CASE WHEN derived_visit_allocation.visit_count_to = 9999 THEN&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CASE WHEN derived_visit_allocation.visit_validity_type_id = 2 THEN&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CASE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN derived_visit_allocation.visit_count_to = 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN derived_visit_allocation.visit_count_from = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN&#x9;(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from) + 1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(derived_visit_allocation.allocated_visit_count - derived_visit_allocation.used_visit_count)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;END AS visit_number,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;derived_visit_allocation.used_visit_count AS used_visit_number,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;derived_visit_allocation.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;FROM derived_visit_allocation&#xA;&#x9;&#x9;&#x9;)&#xA;&#xA;&#x9;&#x9;&#x9;UPDATE&#xA;&#x9;&#x9;&#x9;&#x9;##temptable&#xA;&#x9;&#x9;&#x9;SET&#xA;&#x9;&#x9;&#x9;&#x9;remaining_GUE_PP_count = calculated_visit_allocation.visit_number&#xA;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;##temptable&#xA;&#x9;&#x9;&#x9;&#x9;INNER JOIN calculated_visit_allocation ON ##temptable.purchase_no = calculated_visit_allocation.purchase_no&#xA;&#x9;&#x9;/* OFFERGUECPAYLIST */&#xA;;WITH used_visit_allocations AS (&#xA;            &#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;COUNT(1) AS used_visit_count,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pvah2.purchase_visit_allocation_id&#xA;&#x9;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;PPass.dbo.purchase_visit_allocation_his AS pvah2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation pva2 ON pvah2.purchase_visit_allocation_id = pva2.purchase_visit_allocation_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation_link pval2 ON pva2.purchase_visit_allocation_grp_id = pval2.purchase_visit_allocation_grp_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;LEFT OUTER JOIN PPass.dbo.source_visit_allocation_mem_gue_link salg ON pva2.source_visit_allocation_id = salg.guest_source_visit_allocation_id&#xA;&#x9;&#x9;&#x9;&#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;EXISTS (&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;##temptable temp2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;temp2.purchase_no = pval2.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pvah2.isdeleted = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva2.visitor_type_id = 5&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND salg.guest_source_visit_allocation_id is NULL&#xA;&#x9;&#x9;&#x9;&#x9;GROUP BY&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pvah2.purchase_visit_allocation_id&#xA;&#x9;&#x9;&#x9;),&#xA;&#x9;&#x9;&#x9;derived_visit_allocation AS (&#xA;&#x9;&#x9;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pva.visit_count_from,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pva.visit_count_to,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pva.visit_validity_type_id,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;CASE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN pva.visit_count_to = 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN pva.visit_count_from = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN&#x9;(pva.visit_count_to - pva.visit_count_from)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE (pva.visit_count_to - pva.visit_count_from) + 1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;END AS allocated_visit_count,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ISNULL(used_visit_allocations.used_visit_count, 0) AS used_visit_count,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pur.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;PPass.dbo.purchase pur&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation_link pval ON pval.purchase_no = pur.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation_grp pvag ON pvag.purchase_visit_allocation_grp_id = pval.purchase_visit_allocation_grp_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation pva ON pva.purchase_visit_allocation_grp_id = pvag.purchase_visit_allocation_grp_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.charge_owner_id = 22&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.visitor_type_id = 5&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.visit_allocation_type_id NOT IN (3,4)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pur.isDeleted = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;LEFT JOIN used_visit_allocations ON pva.purchase_visit_allocation_id = used_visit_allocations.purchase_visit_allocation_id&#xA;               &#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(&#x9;pva.valid_from &lt;= getdate()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.valid_to &gt;= getdate()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;OR pva.visit_validity_type_id = 2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;),&#xA;&#x9;&#x9;&#x9;calculated_visit_allocation AS&#xA;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;CASE WHEN derived_visit_allocation.visit_count_to = 9999 THEN&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CASE WHEN derived_visit_allocation.visit_validity_type_id = 2 THEN&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CASE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN derived_visit_allocation.visit_count_to = 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN derived_visit_allocation.visit_count_from = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN&#x9;(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from) + 1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(derived_visit_allocation.allocated_visit_count - derived_visit_allocation.used_visit_count)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;END AS visit_number,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;derived_visit_allocation.used_visit_count AS used_visit_number,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;derived_visit_allocation.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;FROM derived_visit_allocation&#xA;&#x9;&#x9;&#x9;)&#xA;&#xA;&#x9;&#x9;&#x9;UPDATE&#xA;&#x9;&#x9;&#x9;&#x9;##temptable&#xA;&#x9;&#x9;&#x9;SET&#xA;&#x9;&#x9;&#x9;&#x9;remaining_GUE_CLI_count = calculated_visit_allocation.visit_number&#xA;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;##temptable&#xA;&#x9;&#x9;&#x9;&#x9;INNER JOIN calculated_visit_allocation ON ##temptable.purchase_no = calculated_visit_allocation.purchase_no&#xA;&#x9;&#x9;/* OFFERGUECPAYLIST2 */&#xA;;WITH used_visit_allocations AS (&#xA;            &#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;COUNT(1) AS used_visit_count,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pvah2.purchase_visit_allocation_id&#xA;&#x9;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;PPass.dbo.purchase_visit_allocation_his AS pvah2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation pva2 ON pvah2.purchase_visit_allocation_id = pva2.purchase_visit_allocation_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation_link pval2 ON pva2.purchase_visit_allocation_grp_id = pval2.purchase_visit_allocation_grp_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;LEFT OUTER JOIN PPass.dbo.source_visit_allocation_mem_gue_link salg ON pva2.source_visit_allocation_id = salg.guest_source_visit_allocation_id&#xA;&#x9;&#x9;&#x9;&#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;EXISTS (&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;##temptable temp2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;temp2.purchase_no = pval2.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pvah2.isdeleted = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva2.visitor_type_id = 5&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND salg.guest_source_visit_allocation_id is NULL&#xA;&#x9;&#x9;&#x9;&#x9;GROUP BY&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pvah2.purchase_visit_allocation_id&#xA;&#x9;&#x9;&#x9;),&#xA;&#x9;&#x9;&#x9;derived_visit_allocation AS (&#xA;&#x9;&#x9;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pva.visit_count_from,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pva.visit_count_to,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pva.visit_validity_type_id,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;CASE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN pva.visit_count_to = 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN pva.visit_count_from = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN&#x9;(pva.visit_count_to - pva.visit_count_from)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE (pva.visit_count_to - pva.visit_count_from) + 1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;END AS allocated_visit_count,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ISNULL(used_visit_allocations.used_visit_count, 0) AS used_visit_count,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pur.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;PPass.dbo.purchase pur&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation_link pval ON pval.purchase_no = pur.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation_grp pvag ON pvag.purchase_visit_allocation_grp_id = pval.purchase_visit_allocation_grp_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation pva ON pva.purchase_visit_allocation_grp_id = pvag.purchase_visit_allocation_grp_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.charge_owner_id = 25&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.visitor_type_id = 5&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.visit_allocation_type_id NOT IN (3,4)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pur.isDeleted = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;LEFT JOIN used_visit_allocations ON pva.purchase_visit_allocation_id = used_visit_allocations.purchase_visit_allocation_id&#xA;               &#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(&#x9;pva.valid_from &lt;= getdate()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.valid_to &gt;= getdate()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;OR pva.visit_validity_type_id = 2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;),&#xA;&#x9;&#x9;&#x9;calculated_visit_allocation AS&#xA;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;CASE WHEN derived_visit_allocation.visit_count_to = 9999 THEN&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CASE WHEN derived_visit_allocation.visit_validity_type_id = 2 THEN&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CASE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN derived_visit_allocation.visit_count_to = 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN derived_visit_allocation.visit_count_from = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN&#x9;(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from) + 1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(derived_visit_allocation.allocated_visit_count - derived_visit_allocation.used_visit_count)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;END AS visit_number,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;derived_visit_allocation.used_visit_count AS used_visit_number,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;derived_visit_allocation.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;FROM derived_visit_allocation&#xA;&#x9;&#x9;&#x9;)&#xA;&#xA;&#x9;&#x9;&#x9;UPDATE&#xA;&#x9;&#x9;&#x9;&#x9;##temptable&#xA;&#x9;&#x9;&#x9;SET&#xA;&#x9;&#x9;&#x9;&#x9;remaining_GUE_CLI2_count = calculated_visit_allocation.visit_number&#xA;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;##temptable&#xA;&#x9;&#x9;&#x9;&#x9;INNER JOIN calculated_visit_allocation ON ##temptable.purchase_no = calculated_visit_allocation.purchase_no&#xA;&#x9;&#x9;/* OFFERMGUPPAYLIST */&#xA;;WITH used_visit_allocations AS (&#xA;            &#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;COUNT(1) AS used_visit_count,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pvah2.purchase_visit_allocation_id&#xA;&#x9;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;PPass.dbo.purchase_visit_allocation_his AS pvah2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation pva2 ON pvah2.purchase_visit_allocation_id = pva2.purchase_visit_allocation_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation_link pval2 ON pva2.purchase_visit_allocation_grp_id = pval2.purchase_visit_allocation_grp_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;LEFT OUTER JOIN PPass.dbo.source_visit_allocation_mem_gue_link salg ON pva2.source_visit_allocation_id = salg.guest_source_visit_allocation_id&#xA;&#x9;&#x9;&#x9;&#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;EXISTS (&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;##temptable temp2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;temp2.purchase_no = pval2.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pvah2.isdeleted = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva2.visitor_type_id = 7&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND salg.guest_source_visit_allocation_id is NULL&#xA;&#x9;&#x9;&#x9;&#x9;GROUP BY&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pvah2.purchase_visit_allocation_id&#xA;&#x9;&#x9;&#x9;),&#xA;&#x9;&#x9;&#x9;derived_visit_allocation AS (&#xA;&#x9;&#x9;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pva.visit_count_from,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pva.visit_count_to,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pva.visit_validity_type_id,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;CASE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN pva.visit_count_to = 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN pva.visit_count_from = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN&#x9;(pva.visit_count_to - pva.visit_count_from)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE (pva.visit_count_to - pva.visit_count_from) + 1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;END AS allocated_visit_count,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ISNULL(used_visit_allocations.used_visit_count, 0) AS used_visit_count,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pur.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;PPass.dbo.purchase pur&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation_link pval ON pval.purchase_no = pur.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation_grp pvag ON pvag.purchase_visit_allocation_grp_id = pval.purchase_visit_allocation_grp_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation pva ON pva.purchase_visit_allocation_grp_id = pvag.purchase_visit_allocation_grp_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.charge_owner_id = 21&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.visitor_type_id = 7&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.visit_allocation_type_id NOT IN (3,4)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pur.isDeleted = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;LEFT JOIN used_visit_allocations ON pva.purchase_visit_allocation_id = used_visit_allocations.purchase_visit_allocation_id&#xA;               &#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(&#x9;pva.valid_from &lt;= getdate()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.valid_to &gt;= getdate()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;OR pva.visit_validity_type_id = 2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;),&#xA;&#x9;&#x9;&#x9;calculated_visit_allocation AS&#xA;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;CASE WHEN derived_visit_allocation.visit_count_to = 9999 THEN&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CASE WHEN derived_visit_allocation.visit_validity_type_id = 2 THEN&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CASE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN derived_visit_allocation.visit_count_to = 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN derived_visit_allocation.visit_count_from = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN&#x9;(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from) + 1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(derived_visit_allocation.allocated_visit_count - derived_visit_allocation.used_visit_count)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;END AS visit_number,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;derived_visit_allocation.used_visit_count AS used_visit_number,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;derived_visit_allocation.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;FROM derived_visit_allocation&#xA;&#x9;&#x9;&#x9;)&#xA;&#xA;&#x9;&#x9;&#x9;UPDATE&#xA;&#x9;&#x9;&#x9;&#x9;##temptable&#xA;&#x9;&#x9;&#x9;SET&#xA;&#x9;&#x9;&#x9;&#x9;remaining_MGU_PP_count = calculated_visit_allocation.visit_number&#xA;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;##temptable&#xA;&#x9;&#x9;&#x9;&#x9;INNER JOIN calculated_visit_allocation ON ##temptable.purchase_no = calculated_visit_allocation.purchase_no&#xA;&#x9;&#x9;/* OFFERMGUCPAYLIST */&#xA;;WITH used_visit_allocations AS (&#xA;            &#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;COUNT(1) AS used_visit_count,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pvah2.purchase_visit_allocation_id&#xA;&#x9;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;PPass.dbo.purchase_visit_allocation_his AS pvah2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation pva2 ON pvah2.purchase_visit_allocation_id = pva2.purchase_visit_allocation_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation_link pval2 ON pva2.purchase_visit_allocation_grp_id = pval2.purchase_visit_allocation_grp_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;LEFT OUTER JOIN PPass.dbo.source_visit_allocation_mem_gue_link salg ON pva2.source_visit_allocation_id = salg.guest_source_visit_allocation_id&#xA;&#x9;&#x9;&#x9;&#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;EXISTS (&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;##temptable temp2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;temp2.purchase_no = pval2.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pvah2.isdeleted = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva2.visitor_type_id = 7&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND salg.guest_source_visit_allocation_id is NULL&#xA;&#x9;&#x9;&#x9;&#x9;GROUP BY&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pvah2.purchase_visit_allocation_id&#xA;&#x9;&#x9;&#x9;),&#xA;&#x9;&#x9;&#x9;derived_visit_allocation AS (&#xA;&#x9;&#x9;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pva.visit_count_from,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pva.visit_count_to,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pva.visit_validity_type_id,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;CASE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN pva.visit_count_to = 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN pva.visit_count_from = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN&#x9;(pva.visit_count_to - pva.visit_count_from)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE (pva.visit_count_to - pva.visit_count_from) + 1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;END AS allocated_visit_count,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ISNULL(used_visit_allocations.used_visit_count, 0) AS used_visit_count,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pur.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;PPass.dbo.purchase pur&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation_link pval ON pval.purchase_no = pur.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation_grp pvag ON pvag.purchase_visit_allocation_grp_id = pval.purchase_visit_allocation_grp_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation pva ON pva.purchase_visit_allocation_grp_id = pvag.purchase_visit_allocation_grp_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.charge_owner_id = 22&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.visitor_type_id = 7&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.visit_allocation_type_id NOT IN (3,4)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pur.isDeleted = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;LEFT JOIN used_visit_allocations ON pva.purchase_visit_allocation_id = used_visit_allocations.purchase_visit_allocation_id&#xA;               &#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(&#x9;pva.valid_from &lt;= getdate()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.valid_to &gt;= getdate()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;OR pva.visit_validity_type_id = 2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;),&#xA;&#x9;&#x9;&#x9;calculated_visit_allocation AS&#xA;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;CASE WHEN derived_visit_allocation.visit_count_to = 9999 THEN&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CASE WHEN derived_visit_allocation.visit_validity_type_id = 2 THEN&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CASE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN derived_visit_allocation.visit_count_to = 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN derived_visit_allocation.visit_count_from = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN&#x9;(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from) + 1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(derived_visit_allocation.allocated_visit_count - derived_visit_allocation.used_visit_count)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;END AS visit_number,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;derived_visit_allocation.used_visit_count AS used_visit_number,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;derived_visit_allocation.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;FROM derived_visit_allocation&#xA;&#x9;&#x9;&#x9;)&#xA;&#xA;&#x9;&#x9;&#x9;UPDATE&#xA;&#x9;&#x9;&#x9;&#x9;##temptable&#xA;&#x9;&#x9;&#x9;SET&#xA;&#x9;&#x9;&#x9;&#x9;remaining_MGU_CLI_count = calculated_visit_allocation.visit_number&#xA;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;##temptable&#xA;&#x9;&#x9;&#x9;&#x9;INNER JOIN calculated_visit_allocation ON ##temptable.purchase_no = calculated_visit_allocation.purchase_no&#xA;&#x9;&#x9;/* OFFERMGUCPAYLIST2 */&#xA;;WITH used_visit_allocations AS (&#xA;            &#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;COUNT(1) AS used_visit_count,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pvah2.purchase_visit_allocation_id&#xA;&#x9;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;PPass.dbo.purchase_visit_allocation_his AS pvah2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation pva2 ON pvah2.purchase_visit_allocation_id = pva2.purchase_visit_allocation_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation_link pval2 ON pva2.purchase_visit_allocation_grp_id = pval2.purchase_visit_allocation_grp_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;LEFT OUTER JOIN PPass.dbo.source_visit_allocation_mem_gue_link salg ON pva2.source_visit_allocation_id = salg.guest_source_visit_allocation_id&#xA;&#x9;&#x9;&#x9;&#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;EXISTS (&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;##temptable temp2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;temp2.purchase_no = pval2.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pvah2.isdeleted = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva2.visitor_type_id = 7&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND salg.guest_source_visit_allocation_id is NULL&#xA;&#x9;&#x9;&#x9;&#x9;GROUP BY&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pvah2.purchase_visit_allocation_id&#xA;&#x9;&#x9;&#x9;),&#xA;&#x9;&#x9;&#x9;derived_visit_allocation AS (&#xA;&#x9;&#x9;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pva.visit_count_from,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pva.visit_count_to,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pva.visit_validity_type_id,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;CASE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN pva.visit_count_to = 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN pva.visit_count_from = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN&#x9;(pva.visit_count_to - pva.visit_count_from)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE (pva.visit_count_to - pva.visit_count_from) + 1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;END AS allocated_visit_count,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ISNULL(used_visit_allocations.used_visit_count, 0) AS used_visit_count,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;pur.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;PPass.dbo.purchase pur&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation_link pval ON pval.purchase_no = pur.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation_grp pvag ON pvag.purchase_visit_allocation_grp_id = pval.purchase_visit_allocation_grp_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation pva ON pva.purchase_visit_allocation_grp_id = pvag.purchase_visit_allocation_grp_id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.charge_owner_id = 25&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.visitor_type_id = 7&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.visit_allocation_type_id NOT IN (3,4)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND pur.isDeleted = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;LEFT JOIN used_visit_allocations ON pva.purchase_visit_allocation_id = used_visit_allocations.purchase_visit_allocation_id&#xA;               &#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(&#x9;pva.valid_from &lt;= getdate()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AND pva.valid_to &gt;= getdate()&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;OR pva.visit_validity_type_id = 2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;)&#xA;&#x9;&#x9;&#x9;),&#xA;&#x9;&#x9;&#x9;calculated_visit_allocation AS&#xA;&#x9;&#x9;&#x9;(&#xA;&#x9;&#x9;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;CASE WHEN derived_visit_allocation.visit_count_to = 9999 THEN&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CASE WHEN derived_visit_allocation.visit_validity_type_id = 2 THEN&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;CASE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN derived_visit_allocation.visit_count_to = 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN 9999&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN derived_visit_allocation.visit_count_from = 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN&#x9;(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from) + 1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(derived_visit_allocation.allocated_visit_count - derived_visit_allocation.used_visit_count)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;END AS visit_number,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;derived_visit_allocation.used_visit_count AS used_visit_number,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;derived_visit_allocation.purchase_no&#xA;&#x9;&#x9;&#x9;&#x9;FROM derived_visit_allocation&#xA;&#x9;&#x9;&#x9;)&#xA;&#xA;&#x9;&#x9;&#x9;UPDATE&#xA;&#x9;&#x9;&#x9;&#x9;##temptable&#xA;&#x9;&#x9;&#x9;SET&#xA;&#x9;&#x9;&#x9;&#x9;remaining_MGU_CLI2_count = calculated_visit_allocation.visit_number&#xA;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;##temptable&#xA;&#x9;&#x9;&#x9;&#x9;INNER JOIN calculated_visit_allocation ON ##temptable.purchase_no = calculated_visit_allocation.purchase_no&#xA;&#x9;&#x9;;WITH derived_credit_data AS (&#xA;&#x9;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;ISNULL(SUM(CASE WHEN vch.purchase_visit_allocation_his_id IS NULL THEN 1 ELSE 0 END),0) AS unused_visit,&#xA;&#x9;&#x9;&#x9;&#x9;ISNULL(SUM(CASE WHEN vch.purchase_visit_allocation_his_id IS NOT NULL THEN 1 ELSE 0 END),0) AS used_visit,&#xA;&#x9;&#x9;&#x9;&#x9;pval.purchase_no&#xA;&#x9;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;&#x9;PPass.dbo.visit_credit_his AS vch&#xA;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.visit_credit AS vc ON vch.visit_credit_id = vc.visit_credit_id&#xA;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.visit_credit_purchase_allocation AS vcpa ON vch.visit_credit_his_id = vcpa.visit_credit_his_id&#xA;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation AS pva ON vcpa.purchase_visit_allocation_id = pva.purchase_visit_allocation_id&#xA;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation_grp AS pvag ON pva.purchase_visit_allocation_grp_id = pvag.purchase_visit_allocation_grp_id&#xA;&#x9;&#x9;&#x9;&#x9;INNER JOIN PPass.dbo.purchase_visit_allocation_link AS pval ON pvag.purchase_visit_allocation_grp_id = pval.purchase_visit_allocation_grp_id&#xA;&#x9;&#x9;&#x9;WHERE&#xA;&#x9;&#x9;&#x9;&#x9;vch.isdeleted = 0&#xA;&#x9;&#x9;&#x9;&#x9;AND vch.expiry_date &gt;= getdate()&#xA;&#x9;&#x9;&#x9;&#x9;AND vc.visit_credit_type_id = 1&#xA;&#x9;&#x9;&#x9;&#x9;AND vc.visitor_type_id = 3&#xA;&#x9;&#x9;&#x9;GROUP BY pval.purchase_no&#xA;&#x9;&#x9;)&#xA;&#x9;&#x9;UPDATE&#xA;&#x9;&#x9;&#x9;##temptable&#xA;&#x9;&#x9;SET&#xA;&#x9;&#x9;&#x9;REMAINING_MGU_COMP_COUNT = derived_credit_data.unused_visit&#xA;&#x9;&#x9;FROM&#xA;&#x9;&#x9;&#x9;##temptable&#xA;&#x9;&#x9;&#x9;INNER JOIN derived_credit_data ON ##temptable.purchase_no = derived_credit_data.purchase_no&#xA;&#xA;&#xA;&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="strQuery">
      <DTS:VariableValue
        DTS:DataType="8">DECLARE @StartDate VARCHAR(10)='01/12/2022'
DECLARE @EndDate VARCHAR(10)='31/12/2022'

DECLARE @var_startDate VARCHAR(10)
SET @var_startDate=CONVERT(CHAR(8),CONVERT(date,@StartDate,103),112)
DECLARE @var_endDate VARCHAR(10)
SET @var_endDate=CONVERT(CHAR(8),CONVERT(date,@EndDate,103),112)


IF OBJECT_ID('tempdb..##temptable') IS NOT NULL
	DROP TABLE ##temptable

CREATE TABLE ##temptable (
		source_code 		varchar(20),
		consumer_no 		INT NOT NULL,
		external_identifier BIGINT NULL,
		membership_no 		BIGINT NULL,
		purchase_no 		INT NOT NULL,
		track_seq 			INT NOT NULL,
		title 				varchar(20),
		forename 			varchar(50),
		surname 			varchar(50),
		fullname 			varchar(120),
		source_desc 		varchar(255),
		product_version 	varchar(20),
		paid_to_date 		date,
		subs_issue_date 	date,
		subs_status 		varchar(5),
		track_start 		date,
		track_guests 		INT,
		track_from 			varchar(20),
		track_value 		FLOAT,
		creation_date 		date,
		lounge_name			varchar(100),
		airport 			varchar(100),
		trans_ccard_number 	varchar(100),
		external_ref 		varchar(100),
		track_batch 		INT,
		old_system_ref 		varchar(100),
		campaign_code 		varchar(100),
		lounge_code			varchar(20),
		city 				varchar(100),
		country 				varchar(100),
		vendor_tracking_code 	varchar(100),
		user_invitation_code 	varchar(100),
		remaining_mem_cli_count int,
		remaining_mem_cli2_count int,
		remaining_mem_pp_count 	int,
		remaining_gue_cli_count int,
		remaining_gue_cli2_count int,
		remaining_gue_pp_count 	int,
		remaining_mgu_cli_count int,
		remaining_mgu_cli2_count int,
		remaining_mgu_pp_count 	int,
		remaining_mgu_comp_count int,
		
		experience_category 	varchar(100),
		experience_type 		varchar(100),
		airport_terminal_name  varchar(100),
		airport_terminal_type  varchar(100),
		visit_type_id SMALLINT,
		visit_type	INT,
		ccard_type VARCHAR(100),
		effective_date DATETIME2,
		report_month date

);


INSERT INTO ##temptable(	
	source_code,
	consumer_no,
	external_identifier,
	membership_no,
	purchase_no,
	track_seq,
	title,
	forename,
	surname,
	fullname,
	source_desc,
	product_version,
	paid_to_date,
	subs_issue_date,
	subs_status,
	track_start,
	track_guests,
	track_from,
	track_value,
	creation_date,
	lounge_name,
	airport,
	trans_ccard_number,
	external_ref,
	track_batch,
	old_system_ref,
	campaign_code,
	lounge_code,
	city,
	country,
	vendor_tracking_code,
	user_invitation_code,
	remaining_mem_cli_count,
	remaining_mem_cli2_count,
	remaining_mem_pp_count,
	remaining_gue_cli_count,
	remaining_gue_cli2_count,
	remaining_gue_pp_count,
	remaining_mgu_cli_count,
	remaining_mgu_cli2_count,
	remaining_mgu_pp_count,
	remaining_mgu_comp_count,
	
	experience_category,
	experience_type,
	airport_terminal_name,
	airport_terminal_type,
	visit_type_id,
	ccard_type, 
	effective_date,
	report_month

	 )
SELECT	s.source_code,
		c.consumer_no,
		c.external_identifier,
		c.membership_no,
		p.purchase_no,
		t.track_seq,
		c.title,
		c.forename,
		c.surname,
		LTRIM(RTRIM(REPLACE(REPLACE(REPLACE(c.forename + ' ' + c.surname,' ',' |'),'| ',''),'|',''))) AS fullname,
		s.source_desc,
		p.product_version,
		p.paid_to_date,
		p.subs_issue_date,
		p.subs_status,
		t.track_start,
		t.track_guests,
		t.track_from,
		t.track_value,
		t.creation_date,
		l.lounge_name,
		a.pp_short_name AS airport,
		p.trans_ccard_number,
		t.external_ref,
		t.track_batch,
		p.old_system_ref,
		s.campaign_code,
		l.lounge_code,
		a.airport_city AS city,
		cou.code_desc AS country,
		siv.vendor_tracking_code,
		siv.user_invitation_code,
		0 AS remaining_mem_cli_count,
		0 AS remaining_mem_cli2_count,
 		0 AS remaining_mem_pp_count,
 		0 AS remaining_gue_cli_count,
 		0 AS remaining_gue_cli2_count,
 		0 AS remaining_gue_pp_count,
 		0 AS remaining_mgu_cli_count,
 		0 AS remaining_mgu_cli2_count,
 		0 AS remaining_mgu_pp_count,
 		0 AS remaining_mgu_comp_count,
 		
		'Lounge' as experience_category,
		'Lounge' as experience_type,
		ate.terminal_name as airport_terminal_name,
		CASE
			WHEN l.lounge_type = 'I' THEN 'I'
			WHEN l.lounge_type = 'D' THEN 'D'
			ELSE 'U'
		  END	as airport_terminal_type,
		t.visit_type_id,
		p.ccard_type,
		p.effective_date,
		CAST(DATEADD(MONTH, DATEDIFF(MONTH, 0, t.[creation_date]), 0) AS DATE)      AS 	report_month

--INTO ##temptable
FROM
		PPass.dbo.source_deal_config AS sdc WITH (NOLOCK)
		INNER JOIN PPass.dbo.source AS s WITH (NOLOCK) ON sdc.source_code = s.source_code
		INNER JOIN PPass.dbo.source_subscription AS ss WITH (NOLOCK) ON sdc.source_deal_config_id = ss.source_deal_config_id
		INNER JOIN PPass.dbo.purchase_subscription_link AS psl WITH (NOLOCK) ON ss.source_subscription_id = psl.source_subscription_id
		INNER JOIN PPass.dbo.purchase AS p WITH (NOLOCK) ON psl.purchase_no = p.purchase_no
		INNER JOIN PPass.dbo.consumer AS c WITH (NOLOCK) ON p.consumer_no = c.consumer_no
		INNER JOIN PPass.dbo.tracking AS t WITH (NOLOCK) ON p.purchase_no = t.purchase_no
		INNER JOIN PPass.dbo.lounge AS l WITH (NOLOCK) ON l.lounge_code = t.track_from
		INNER JOIN PPass.dbo.airport AS a WITH (NOLOCK) ON a.iso_airport_code = l.airport
		LEFT OUTER JOIN PPass.dbo.airport_terminal AS ate WITH (NOLOCK) ON l.airport_terminal_id = ate.airport_terminal_id
		LEFT OUTER JOIN PPass.dbo.code AS COU  WITH (NOLOCK) ON COU.code = l.country_code AND COU.codetype = 'CTRY'
		
		LEFT OUTER JOIN PPass.dbo.source_invitation_validation siv WITH (NOLOCK) ON siv.consumer_no = c.consumer_no
	WHERE
t.creation_date &gt;= @var_startDate AND t.creation_date &lt; DATEADD(d,1,@var_endDate)
 AND t.track_status &lt;&gt; 'NA' 
AND p.isDeleted = 0 
AND s.source_code in ( Select SourceCode from ##VisitBySourceSourceCodes)
--AND (p.consumer_no='1427229223' or c.membership_no='1427229223')
/* Load in the reedemed offers data */

INSERT INTO ##temptable (	
	source_code,
	consumer_no,
	external_identifier,
	membership_no,
	purchase_no,
	track_seq,
	title,
	forename,
	surname,
	fullname,
	source_desc,
	product_version,
	paid_to_date,
	subs_issue_date,
	subs_status,
	track_start,
	track_guests,
	track_from,
	track_value,
	creation_date,
	lounge_name,
	airport,
	trans_ccard_number,
	external_ref,
	track_batch,
	old_system_ref,
	campaign_code,
	lounge_code,
	city,
	country,
	vendor_tracking_code,
	user_invitation_code,
	remaining_mem_cli_count,
	remaining_mem_cli2_count,
	remaining_mem_pp_count,
	remaining_gue_cli_count,
	remaining_gue_cli2_count,
	remaining_gue_pp_count,
	remaining_mgu_cli_count,
	remaining_mgu_cli2_count,
	remaining_mgu_pp_count,
	remaining_mgu_comp_count,
	experience_category,
	experience_type,
	airport_terminal_name,
	airport_terminal_type,
	visit_type_id,
	report_month

	 )
SELECT
	s.source_code,
	c.consumer_no,
	c.external_identifier,
	c.membership_no,
	p.purchase_no,
	t.track_seq,
	c.title,
	c.forename,
	c.surname,
	LTRIM(RTRIM(REPLACE(REPLACE(REPLACE(c.forename + ' ' + c.surname,' ',' |'),'| ',''),'|',''))) AS fullname,
	s.source_desc,
	p.product_version,
	p.paid_to_date,
	p.subs_issue_date,
	p.subs_status,
	t.track_start,
	t.track_guests,
	t.track_from,
	t.track_value,
	t.creation_date,
	ord.outlet_name as lounge_name,
	a.pp_short_name AS airport,
	p.trans_ccard_number,
	t.external_ref,
	t.track_batch,
	p.old_system_ref,
	s.campaign_code,
	t.track_from as lounge_code,
	a.airport_city AS city,
	cou.code_desc AS country,
	siv.vendor_tracking_code,
	siv.user_invitation_code,
	0 AS remaining_mem_cli_count , 
	0 AS remaining_mem_cli2_count , 
	0 AS remaining_mem_pp_count , 
	0 AS remaining_gue_cli_count , 
	0 AS remaining_gue_cli2_count , 
	0 AS remaining_gue_pp_count , 
	0 AS remaining_mgu_cli_count , 
	0 AS remaining_mgu_cli2_count , 
	0 AS remaining_mgu_pp_count , 
	0 AS remaining_mgu_comp_count,
	
	ord.offer_category as experience_category,
		ord.offer_type as experience_type,
	ISNULL(ate.terminal_name, 'Unknown' ) as airport_terminal_name,
	'U' as airport_terminal_type,
	t.visit_type_id,
	CAST(DATEADD(MONTH, DATEDIFF(MONTH, 0, t.[creation_date]), 0) AS DATE)      AS 	report_month
FROM
	PPass.dbo.source_deal_config AS sdc WITH (NOLOCK)
	INNER JOIN PPass.dbo.source AS s WITH (NOLOCK) ON sdc.source_code = s.source_code
	INNER JOIN PPass.dbo.source_subscription AS ss WITH (NOLOCK) ON sdc.source_deal_config_id = ss.source_deal_config_id
	INNER JOIN PPass.dbo.purchase_subscription_link AS psl WITH (NOLOCK) ON ss.source_subscription_id = psl.source_subscription_id
	INNER JOIN PPass.dbo.purchase AS p WITH (NOLOCK) ON psl.purchase_no = p.purchase_no
	INNER JOIN PPass.dbo.consumer AS c WITH (NOLOCK) ON p.consumer_no = c.consumer_no
	INNER JOIN PPass.dbo.tracking AS t WITH (NOLOCK) ON p.purchase_no = t.purchase_no
	INNER JOIN PPass.dbo.offer_redemption_details AS ord WITH (NOLOCK) ON ord.consumer_no = c.consumer_no AND ord.track_seq = t.track_seq
	INNER JOIN PPass.dbo.airport AS a WITH (NOLOCK) ON a.iso_airport_code = ord.airport_iso_code
	LEFT JOIN PPass.dbo.outlet_airport_terminal AS oat WITH (NOLOCK) ON ord.outlet_id = oat.outlet_id
	LEFT JOIN PPass.dbo.airport_terminal AS ate WITH (NOLOCK) ON oat.airport_terminal_id = ate.airport_terminal_id
	LEFT OUTER JOIN PPass.dbo.code AS COU WITH (NOLOCK) ON cou.alpha_1 = a.iso_country_code
		AND cou.codetype = 'CTRY2'
		AND cou.alpha_5 &lt;&gt; ''
	LEFT OUTER JOIN PPass.dbo.source_invitation_validation siv WITH (NOLOCK) ON siv.consumer_no = c.consumer_no
	
WHERE
t.creation_date &gt;= @var_startDate AND t.creation_date &lt; DATEADD(d,1,@var_endDate)
 AND t.track_status &lt;&gt; 'NA' 
AND p.isDeleted = 0 
AND s.source_code in (Select SourceCode from ##VisitBySourceSourceCodes)
--AND (p.consumer_no='1427229223' or c.membership_no='1427229223')
/* update the temp table with an index */
--ALTER TABLE ##temptable 
--ADD CONSTRAINT PK_##temptable 
--PRIMARY KEY NONCLUSTERED (purchase_no, track_seq)
--			CREATE NONCLUSTERED INDEX ##temptable_idx1 ON ##temptable (source_code, consumer_no, fullname, track_start, lounge_name, external_ref) 
--			WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, FILLFACTOR = 100) ON [PRIMARY]

--Select * from ##temptable

		/*  MEM PPAYVISIT  */
		;WITH used_visit_allocations AS (
            	SELECT
					COUNT(1) AS used_visit_count,
					pvah2.purchase_visit_allocation_id
				FROM
					PPass.dbo.purchase_visit_allocation_his AS pvah2
					INNER JOIN PPass.dbo.purchase_visit_allocation pva2 ON pvah2.purchase_visit_allocation_id = pva2.purchase_visit_allocation_id
					INNER JOIN PPass.dbo.purchase_visit_allocation_link pval2 ON pva2.purchase_visit_allocation_grp_id = pval2.purchase_visit_allocation_grp_id
					LEFT OUTER JOIN PPass.dbo.source_visit_allocation_mem_gue_link salg ON pva2.source_visit_allocation_id = salg.guest_source_visit_allocation_id
				WHERE
						EXISTS (
							SELECT
								1
							FROM
								##temptable temp2
							WHERE
								temp2.purchase_no = pval2.purchase_no
						)
					AND pvah2.isdeleted = 0
					AND pva2.visitor_type_id = 1
					AND salg.guest_source_visit_allocation_id is NULL
				GROUP BY
					pvah2.purchase_visit_allocation_id
			),
			derived_visit_allocation AS (
           
				SELECT
					pva.visit_count_from,
					pva.visit_count_to,
					pva.visit_validity_type_id,
					
					CASE
						WHEN pva.visit_count_to = 9999
							THEN 9999
						WHEN pva.visit_count_from = 0
							THEN	(pva.visit_count_to - pva.visit_count_from)
						ELSE (pva.visit_count_to - pva.visit_count_from) + 1
					END AS allocated_visit_count,
					ISNULL(used_visit_allocations.used_visit_count, 0) AS used_visit_count,
					pur.purchase_no
				FROM
					PPass.dbo.purchase pur
					INNER JOIN PPass.dbo.purchase_visit_allocation_link pval ON pval.purchase_no = pur.purchase_no
					INNER JOIN PPass.dbo.purchase_visit_allocation_grp pvag ON pvag.purchase_visit_allocation_grp_id = pval.purchase_visit_allocation_grp_id
					INNER JOIN PPass.dbo.purchase_visit_allocation pva ON pva.purchase_visit_allocation_grp_id = pvag.purchase_visit_allocation_grp_id
					AND pva.charge_owner_id = 21
					AND pva.visitor_type_id = 1
					AND pva.visit_allocation_type_id NOT IN (3,4)
					AND pur.isDeleted = 0
					LEFT JOIN used_visit_allocations ON pva.purchase_visit_allocation_id = used_visit_allocations.purchase_visit_allocation_id
               	WHERE
						
						(
							(	pva.valid_from &lt;= getdate()
								AND pva.valid_to &gt;= getdate()
							)
							OR pva.visit_validity_type_id = 2
						)
			),
			calculated_visit_allocation AS
			(
				SELECT
					
					CASE WHEN derived_visit_allocation.visit_count_to = 9999 THEN
						9999
					ELSE
						
						CASE WHEN derived_visit_allocation.visit_validity_type_id = 2 THEN
							CASE
								WHEN derived_visit_allocation.visit_count_to = 9999
									THEN 9999
								WHEN derived_visit_allocation.visit_count_from = 0
									THEN	(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from)
								ELSE
									(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from) + 1
							END
						ELSE
							(derived_visit_allocation.allocated_visit_count - derived_visit_allocation.used_visit_count)
						END
					END AS visit_number,
					
					derived_visit_allocation.used_visit_count AS used_visit_number,
					derived_visit_allocation.purchase_no
				FROM derived_visit_allocation
			)

			UPDATE
				##temptable
			SET
				remaining_MEM_PP_count = calculated_visit_allocation.visit_number
				
			FROM
				##temptable
				INNER JOIN calculated_visit_allocation ON ##temptable.purchase_no = calculated_visit_allocation.purchase_no;

	/* MEM CPAYVISIT */
		;WITH used_visit_allocations AS (
            	SELECT
					COUNT(1) AS used_visit_count,
					pvah2.purchase_visit_allocation_id
				FROM
					PPass.dbo.purchase_visit_allocation_his AS pvah2
					INNER JOIN PPass.dbo.purchase_visit_allocation pva2 ON pvah2.purchase_visit_allocation_id = pva2.purchase_visit_allocation_id
					INNER JOIN PPass.dbo.purchase_visit_allocation_link pval2 ON pva2.purchase_visit_allocation_grp_id = pval2.purchase_visit_allocation_grp_id
					LEFT OUTER JOIN PPass.dbo.source_visit_allocation_mem_gue_link salg ON pva2.source_visit_allocation_id = salg.guest_source_visit_allocation_id
				WHERE
						EXISTS (
							SELECT
								1
							FROM
								##temptable temp2
							WHERE
								temp2.purchase_no = pval2.purchase_no
						)
					AND pvah2.isdeleted = 0
					AND pva2.visitor_type_id = 1
					AND salg.guest_source_visit_allocation_id is NULL
				GROUP BY
					pvah2.purchase_visit_allocation_id
			),
			derived_visit_allocation AS (
				SELECT
					pva.visit_count_from,
					pva.visit_count_to,
					pva.visit_validity_type_id,
					CASE
						WHEN pva.visit_count_to = 9999
							THEN 9999
						WHEN pva.visit_count_from = 0
							THEN	(pva.visit_count_to - pva.visit_count_from)
						ELSE (pva.visit_count_to - pva.visit_count_from) + 1
					END AS allocated_visit_count,
					ISNULL(used_visit_allocations.used_visit_count, 0) AS used_visit_count,
					pur.purchase_no
				FROM
					PPass.dbo.purchase pur
					INNER JOIN PPass.dbo.purchase_visit_allocation_link pval ON pval.purchase_no = pur.purchase_no
					INNER JOIN PPass.dbo.purchase_visit_allocation_grp pvag ON pvag.purchase_visit_allocation_grp_id = pval.purchase_visit_allocation_grp_id
					INNER JOIN PPass.dbo.purchase_visit_allocation pva ON pva.purchase_visit_allocation_grp_id = pvag.purchase_visit_allocation_grp_id
					AND pva.charge_owner_id = 22
					AND pva.visitor_type_id = 1
					AND pva.visit_allocation_type_id NOT IN (3,4)
					AND pur.isDeleted = 0
					LEFT JOIN used_visit_allocations ON pva.purchase_visit_allocation_id = used_visit_allocations.purchase_visit_allocation_id
               	WHERE
						(
							(	pva.valid_from &lt;= getdate()
								AND pva.valid_to &gt;= getdate()
							)
							OR pva.visit_validity_type_id = 2
						)
			),
			calculated_visit_allocation AS
			(
				SELECT
					CASE WHEN derived_visit_allocation.visit_count_to = 9999 THEN
						9999
					ELSE
						CASE WHEN derived_visit_allocation.visit_validity_type_id = 2 THEN
							CASE
								WHEN derived_visit_allocation.visit_count_to = 9999
									THEN 9999
								WHEN derived_visit_allocation.visit_count_from = 0
									THEN	(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from)
								ELSE
									(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from) + 1
							END
						ELSE
							(derived_visit_allocation.allocated_visit_count - derived_visit_allocation.used_visit_count)
						END
					END AS visit_number,
					derived_visit_allocation.used_visit_count AS used_visit_number,
					derived_visit_allocation.purchase_no
				FROM derived_visit_allocation
			)

			UPDATE
				##temptable
			SET
				remaining_MEM_CLI_count = calculated_visit_allocation.visit_number
			FROM
				##temptable ##temptable
				INNER JOIN calculated_visit_allocation ON ##temptable.purchase_no = calculated_visit_allocation.purchase_no;

				/* MEM CPAYVISIT2 */
		;WITH used_visit_allocations AS (
            	SELECT
					COUNT(1) AS used_visit_count,
					pvah2.purchase_visit_allocation_id
				FROM
					PPass.dbo.purchase_visit_allocation_his AS pvah2
					INNER JOIN PPass.dbo.purchase_visit_allocation pva2 ON pvah2.purchase_visit_allocation_id = pva2.purchase_visit_allocation_id
					INNER JOIN PPass.dbo.purchase_visit_allocation_link pval2 ON pva2.purchase_visit_allocation_grp_id = pval2.purchase_visit_allocation_grp_id
					LEFT OUTER JOIN PPass.dbo.source_visit_allocation_mem_gue_link salg ON pva2.source_visit_allocation_id = salg.guest_source_visit_allocation_id
				WHERE
						EXISTS (
							SELECT
								1
							FROM
								##temptable temp2
							WHERE
								temp2.purchase_no = pval2.purchase_no
						)
					AND pvah2.isdeleted = 0
					AND pva2.visitor_type_id = 1
					AND salg.guest_source_visit_allocation_id is NULL
				GROUP BY
					pvah2.purchase_visit_allocation_id
			),
			derived_visit_allocation AS (
				SELECT
					pva.visit_count_from,
					pva.visit_count_to,
					pva.visit_validity_type_id,
					CASE
						WHEN pva.visit_count_to = 9999
							THEN 9999
						WHEN pva.visit_count_from = 0
							THEN	(pva.visit_count_to - pva.visit_count_from)
						ELSE (pva.visit_count_to - pva.visit_count_from) + 1
					END AS allocated_visit_count,
					ISNULL(used_visit_allocations.used_visit_count, 0) AS used_visit_count,
					pur.purchase_no
				FROM
					PPass.dbo.purchase pur
					INNER JOIN PPass.dbo.purchase_visit_allocation_link pval ON pval.purchase_no = pur.purchase_no
					INNER JOIN PPass.dbo.purchase_visit_allocation_grp pvag ON pvag.purchase_visit_allocation_grp_id = pval.purchase_visit_allocation_grp_id
					INNER JOIN PPass.dbo.purchase_visit_allocation pva ON pva.purchase_visit_allocation_grp_id = pvag.purchase_visit_allocation_grp_id
					AND pva.charge_owner_id = 25
					AND pva.visitor_type_id = 1
					AND pva.visit_allocation_type_id NOT IN (3,4)
					AND pur.isDeleted = 0
					LEFT JOIN used_visit_allocations ON pva.purchase_visit_allocation_id = used_visit_allocations.purchase_visit_allocation_id
               	WHERE
						(
							(	pva.valid_from &lt;= getdate()
								AND pva.valid_to &gt;= getdate()
							)
							OR pva.visit_validity_type_id = 2
						)
			),
			calculated_visit_allocation AS
			(
				SELECT
					CASE WHEN derived_visit_allocation.visit_count_to = 9999 THEN
						9999
					ELSE
						CASE WHEN derived_visit_allocation.visit_validity_type_id = 2 THEN
							CASE
								WHEN derived_visit_allocation.visit_count_to = 9999
									THEN 9999
								WHEN derived_visit_allocation.visit_count_from = 0
									THEN	(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from)
								ELSE
									(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from) + 1
							END
						ELSE
							(derived_visit_allocation.allocated_visit_count - derived_visit_allocation.used_visit_count)
						END
					END AS visit_number,
					derived_visit_allocation.used_visit_count AS used_visit_number,
					derived_visit_allocation.purchase_no
				FROM derived_visit_allocation
			)

			UPDATE
				##temptable
			SET
				remaining_MEM_CLI2_count = calculated_visit_allocation.visit_number
				
			FROM
				##temptable
				INNER JOIN calculated_visit_allocation ON ##temptable.purchase_no = calculated_visit_allocation.purchase_no

/* GUE PPAYVISIT */
		;WITH used_visit_allocations AS (
            	SELECT
					COUNT(1) AS used_visit_count,
					pvah2.purchase_visit_allocation_id
				FROM
					PPass.dbo.purchase_visit_allocation_his AS pvah2
					INNER JOIN PPass.dbo.purchase_visit_allocation pva2 ON pvah2.purchase_visit_allocation_id = pva2.purchase_visit_allocation_id
					INNER JOIN PPass.dbo.purchase_visit_allocation_link pval2 ON pva2.purchase_visit_allocation_grp_id = pval2.purchase_visit_allocation_grp_id
					LEFT OUTER JOIN PPass.dbo.source_visit_allocation_mem_gue_link salg ON pva2.source_visit_allocation_id = salg.guest_source_visit_allocation_id
				WHERE
						EXISTS (
							SELECT
								1
							FROM
								##temptable temp2
							WHERE
								temp2.purchase_no = pval2.purchase_no
						)
					AND pvah2.isdeleted = 0
					AND pva2.visitor_type_id = 2
					AND salg.guest_source_visit_allocation_id is NULL
				GROUP BY
					pvah2.purchase_visit_allocation_id
			),
			derived_visit_allocation AS (
				SELECT
					pva.visit_count_from,
					pva.visit_count_to,
					pva.visit_validity_type_id,
					CASE
						WHEN pva.visit_count_to = 9999
							THEN 9999
						WHEN pva.visit_count_from = 0
							THEN	(pva.visit_count_to - pva.visit_count_from)
						ELSE (pva.visit_count_to - pva.visit_count_from) + 1
					END AS allocated_visit_count,
					ISNULL(used_visit_allocations.used_visit_count, 0) AS used_visit_count,
					pur.purchase_no
				FROM
					PPass.dbo.purchase pur
					INNER JOIN PPass.dbo.purchase_visit_allocation_link pval ON pval.purchase_no = pur.purchase_no
					INNER JOIN PPass.dbo.purchase_visit_allocation_grp pvag ON pvag.purchase_visit_allocation_grp_id = pval.purchase_visit_allocation_grp_id
					INNER JOIN PPass.dbo.purchase_visit_allocation pva ON pva.purchase_visit_allocation_grp_id = pvag.purchase_visit_allocation_grp_id
					AND pva.charge_owner_id = 21
					AND pva.visitor_type_id = 2
					AND pva.visit_allocation_type_id NOT IN (3,4)
					AND pur.isDeleted = 0
					LEFT JOIN used_visit_allocations ON pva.purchase_visit_allocation_id = used_visit_allocations.purchase_visit_allocation_id
               	WHERE
						(
							(	pva.valid_from &lt;= getdate()
								AND pva.valid_to &gt;= getdate()
							)
							OR pva.visit_validity_type_id = 2
						)
			),
			calculated_visit_allocation AS
			(
				SELECT
					CASE WHEN derived_visit_allocation.visit_count_to = 9999 THEN
						9999
					ELSE
						CASE WHEN derived_visit_allocation.visit_validity_type_id = 2 THEN
							CASE
								WHEN derived_visit_allocation.visit_count_to = 9999
									THEN 9999
								WHEN derived_visit_allocation.visit_count_from = 0
									THEN	(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from)
								ELSE
									(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from) + 1
							END
						ELSE
							(derived_visit_allocation.allocated_visit_count - derived_visit_allocation.used_visit_count)
						END
					END AS visit_number,
					derived_visit_allocation.used_visit_count AS used_visit_number,
					derived_visit_allocation.purchase_no
				FROM derived_visit_allocation
			)

			UPDATE
				##temptable
			SET
				remaining_GUE_PP_count = calculated_visit_allocation.visit_number
			FROM
				##temptable
				INNER JOIN calculated_visit_allocation ON ##temptable.purchase_no = calculated_visit_allocation.purchase_no

/* GUE CPAYLIST */
		;WITH used_visit_allocations AS (
            	SELECT
					COUNT(1) AS used_visit_count,
					pvah2.purchase_visit_allocation_id
				FROM
					PPass.dbo.purchase_visit_allocation_his AS pvah2
					INNER JOIN PPass.dbo.purchase_visit_allocation pva2 ON pvah2.purchase_visit_allocation_id = pva2.purchase_visit_allocation_id
					INNER JOIN PPass.dbo.purchase_visit_allocation_link pval2 ON pva2.purchase_visit_allocation_grp_id = pval2.purchase_visit_allocation_grp_id
					LEFT OUTER JOIN PPass.dbo.source_visit_allocation_mem_gue_link salg ON pva2.source_visit_allocation_id = salg.guest_source_visit_allocation_id
				WHERE
						EXISTS (
							SELECT
								1
							FROM
								##temptable temp2
							WHERE
								temp2.purchase_no = pval2.purchase_no
						)
					AND pvah2.isdeleted = 0
					AND pva2.visitor_type_id = 2
					AND salg.guest_source_visit_allocation_id is NULL
				GROUP BY
					pvah2.purchase_visit_allocation_id
			),
			derived_visit_allocation AS (
				SELECT
					pva.visit_count_from,
					pva.visit_count_to,
					pva.visit_validity_type_id,
					CASE
						WHEN pva.visit_count_to = 9999
							THEN 9999
						WHEN pva.visit_count_from = 0
							THEN	(pva.visit_count_to - pva.visit_count_from)
						ELSE (pva.visit_count_to - pva.visit_count_from) + 1
					END AS allocated_visit_count,
					ISNULL(used_visit_allocations.used_visit_count, 0) AS used_visit_count,
					pur.purchase_no
				FROM
					PPass.dbo.purchase pur
					INNER JOIN PPass.dbo.purchase_visit_allocation_link pval ON pval.purchase_no = pur.purchase_no
					INNER JOIN PPass.dbo.purchase_visit_allocation_grp pvag ON pvag.purchase_visit_allocation_grp_id = pval.purchase_visit_allocation_grp_id
					INNER JOIN PPass.dbo.purchase_visit_allocation pva ON pva.purchase_visit_allocation_grp_id = pvag.purchase_visit_allocation_grp_id
					AND pva.charge_owner_id = 22
					AND pva.visitor_type_id = 2
					AND pva.visit_allocation_type_id NOT IN (3,4)
					AND pur.isDeleted = 0
					LEFT JOIN used_visit_allocations ON pva.purchase_visit_allocation_id = used_visit_allocations.purchase_visit_allocation_id
               	WHERE
						(
							(	pva.valid_from &lt;= getdate()
								AND pva.valid_to &gt;= getdate()
							)
							OR pva.visit_validity_type_id = 2
						)
			),
			calculated_visit_allocation AS
			(
				SELECT
					CASE WHEN derived_visit_allocation.visit_count_to = 9999 THEN
						9999
					ELSE
						CASE WHEN derived_visit_allocation.visit_validity_type_id = 2 THEN
							CASE
								WHEN derived_visit_allocation.visit_count_to = 9999
									THEN 9999
								WHEN derived_visit_allocation.visit_count_from = 0
									THEN	(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from)
								ELSE
									(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from) + 1
							END
						ELSE
							(derived_visit_allocation.allocated_visit_count - derived_visit_allocation.used_visit_count)
						END
					END AS visit_number,
					derived_visit_allocation.used_visit_count AS used_visit_number,
					derived_visit_allocation.purchase_no
				FROM derived_visit_allocation
			)

			UPDATE
				##temptable
			SET
				remaining_GUE_CLI_count = calculated_visit_allocation.visit_number
			FROM
				##temptable
				INNER JOIN calculated_visit_allocation ON ##temptable.purchase_no = calculated_visit_allocation.purchase_no

/* GUE CPAYVISIT2 */
		;WITH used_visit_allocations AS (
            	SELECT
					COUNT(1) AS used_visit_count,
					pvah2.purchase_visit_allocation_id
				FROM
					PPass.dbo.purchase_visit_allocation_his AS pvah2
					INNER JOIN PPass.dbo.purchase_visit_allocation pva2 ON pvah2.purchase_visit_allocation_id = pva2.purchase_visit_allocation_id
					INNER JOIN PPass.dbo.purchase_visit_allocation_link pval2 ON pva2.purchase_visit_allocation_grp_id = pval2.purchase_visit_allocation_grp_id
					LEFT OUTER JOIN PPass.dbo.source_visit_allocation_mem_gue_link salg ON pva2.source_visit_allocation_id = salg.guest_source_visit_allocation_id
				WHERE
						EXISTS (
							SELECT
								1
							FROM
								##temptable temp2
							WHERE
								temp2.purchase_no = pval2.purchase_no
						)
					AND pvah2.isdeleted = 0
					AND pva2.visitor_type_id = 2
					AND salg.guest_source_visit_allocation_id is NULL
				GROUP BY
					pvah2.purchase_visit_allocation_id
			),
			derived_visit_allocation AS (
				SELECT
					pva.visit_count_from,
					pva.visit_count_to,
					pva.visit_validity_type_id,
					CASE
						WHEN pva.visit_count_to = 9999
							THEN 9999
						WHEN pva.visit_count_from = 0
							THEN	(pva.visit_count_to - pva.visit_count_from)
						ELSE (pva.visit_count_to - pva.visit_count_from) + 1
					END AS allocated_visit_count,
					ISNULL(used_visit_allocations.used_visit_count, 0) AS used_visit_count,
					pur.purchase_no
				FROM
					PPass.dbo.purchase pur
					INNER JOIN PPass.dbo.purchase_visit_allocation_link pval ON pval.purchase_no = pur.purchase_no
					INNER JOIN PPass.dbo.purchase_visit_allocation_grp pvag ON pvag.purchase_visit_allocation_grp_id = pval.purchase_visit_allocation_grp_id
					INNER JOIN PPass.dbo.purchase_visit_allocation pva ON pva.purchase_visit_allocation_grp_id = pvag.purchase_visit_allocation_grp_id
					AND pva.charge_owner_id = 25
					AND pva.visitor_type_id = 2
					AND pva.visit_allocation_type_id NOT IN (3,4)
					AND pur.isDeleted = 0
					LEFT JOIN used_visit_allocations ON pva.purchase_visit_allocation_id = used_visit_allocations.purchase_visit_allocation_id
               	WHERE
						(
							(	pva.valid_from &lt;= getdate()
								AND pva.valid_to &gt;= getdate()
							)
							OR pva.visit_validity_type_id = 2
						)
			),
			calculated_visit_allocation AS
			(
				SELECT
					CASE WHEN derived_visit_allocation.visit_count_to = 9999 THEN
						9999
					ELSE
						CASE WHEN derived_visit_allocation.visit_validity_type_id = 2 THEN
							CASE
								WHEN derived_visit_allocation.visit_count_to = 9999
									THEN 9999
								WHEN derived_visit_allocation.visit_count_from = 0
									THEN	(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from)
								ELSE
									(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from) + 1
							END
						ELSE
							(derived_visit_allocation.allocated_visit_count - derived_visit_allocation.used_visit_count)
						END
					END AS visit_number,
					derived_visit_allocation.used_visit_count AS used_visit_number,
					derived_visit_allocation.purchase_no
				FROM derived_visit_allocation
			)

			UPDATE
				##temptable
			SET
				remaining_GUE_CLI2_count = calculated_visit_allocation.visit_number
			FROM
				##temptable
				INNER JOIN calculated_visit_allocation ON ##temptable.purchase_no = calculated_visit_allocation.purchase_no

/*MGU PPAYVISIT */
		;WITH used_visit_allocations AS (
            	SELECT
					COUNT(1) AS used_visit_count,
					pvah2.purchase_visit_allocation_id
				FROM
					PPass.dbo.purchase_visit_allocation_his AS pvah2
					INNER JOIN PPass.dbo.purchase_visit_allocation pva2 ON pvah2.purchase_visit_allocation_id = pva2.purchase_visit_allocation_id
					INNER JOIN PPass.dbo.purchase_visit_allocation_link pval2 ON pva2.purchase_visit_allocation_grp_id = pval2.purchase_visit_allocation_grp_id
					LEFT OUTER JOIN PPass.dbo.source_visit_allocation_mem_gue_link salg ON pva2.source_visit_allocation_id = salg.guest_source_visit_allocation_id
				WHERE
						EXISTS (
							SELECT
								1
							FROM
								##temptable temp2
							WHERE
								temp2.purchase_no = pval2.purchase_no
						)
					AND pvah2.isdeleted = 0
					AND pva2.visitor_type_id = 3
					AND salg.guest_source_visit_allocation_id is NULL
				GROUP BY
					pvah2.purchase_visit_allocation_id
			),
			derived_visit_allocation AS (
				SELECT
					pva.visit_count_from,
					pva.visit_count_to,
					pva.visit_validity_type_id,
					CASE
						WHEN pva.visit_count_to = 9999
							THEN 9999
						WHEN pva.visit_count_from = 0
							THEN	(pva.visit_count_to - pva.visit_count_from)
						ELSE (pva.visit_count_to - pva.visit_count_from) + 1
					END AS allocated_visit_count,
					ISNULL(used_visit_allocations.used_visit_count, 0) AS used_visit_count,
					pur.purchase_no
				FROM
					PPass.dbo.purchase pur
					INNER JOIN PPass.dbo.purchase_visit_allocation_link pval ON pval.purchase_no = pur.purchase_no
					INNER JOIN PPass.dbo.purchase_visit_allocation_grp pvag ON pvag.purchase_visit_allocation_grp_id = pval.purchase_visit_allocation_grp_id
					INNER JOIN PPass.dbo.purchase_visit_allocation pva ON pva.purchase_visit_allocation_grp_id = pvag.purchase_visit_allocation_grp_id
					AND pva.charge_owner_id = 21
					AND pva.visitor_type_id = 3
					AND pva.visit_allocation_type_id NOT IN (3,4)
					AND pur.isDeleted = 0
					LEFT JOIN used_visit_allocations ON pva.purchase_visit_allocation_id = used_visit_allocations.purchase_visit_allocation_id
               	WHERE
						(
							(	pva.valid_from &lt;= getdate()
								AND pva.valid_to &gt;= getdate()
							)
							OR pva.visit_validity_type_id = 2
						)
			),
			calculated_visit_allocation AS
			(
				SELECT
					CASE WHEN derived_visit_allocation.visit_count_to = 9999 THEN
						9999
					ELSE
						CASE WHEN derived_visit_allocation.visit_validity_type_id = 2 THEN
							CASE
								WHEN derived_visit_allocation.visit_count_to = 9999
									THEN 9999
								WHEN derived_visit_allocation.visit_count_from = 0
									THEN	(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from)
								ELSE
									(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from) + 1
							END
						ELSE
							(derived_visit_allocation.allocated_visit_count - derived_visit_allocation.used_visit_count)
						END
					END AS visit_number,
					derived_visit_allocation.used_visit_count AS used_visit_number,
					derived_visit_allocation.purchase_no
				FROM derived_visit_allocation
			)

			UPDATE
				##temptable
			SET
				remaining_MGU_PP_count = calculated_visit_allocation.visit_number
			FROM
				##temptable
				INNER JOIN calculated_visit_allocation ON ##temptable.purchase_no = calculated_visit_allocation.purchase_no
/* MGU CPAYVISIT */
		;WITH used_visit_allocations AS (
            	SELECT
					COUNT(1) AS used_visit_count,
					pvah2.purchase_visit_allocation_id
				FROM
					PPass.dbo.purchase_visit_allocation_his AS pvah2
					INNER JOIN PPass.dbo.purchase_visit_allocation pva2 ON pvah2.purchase_visit_allocation_id = pva2.purchase_visit_allocation_id
					INNER JOIN PPass.dbo.purchase_visit_allocation_link pval2 ON pva2.purchase_visit_allocation_grp_id = pval2.purchase_visit_allocation_grp_id
					LEFT OUTER JOIN PPass.dbo.source_visit_allocation_mem_gue_link salg ON pva2.source_visit_allocation_id = salg.guest_source_visit_allocation_id
				WHERE
						EXISTS (
							SELECT
								1
							FROM
								##temptable temp2
							WHERE
								temp2.purchase_no = pval2.purchase_no
						)
					AND pvah2.isdeleted = 0
					AND pva2.visitor_type_id = 3
					AND salg.guest_source_visit_allocation_id is NULL
				GROUP BY
					pvah2.purchase_visit_allocation_id
			),
			derived_visit_allocation AS (
				SELECT
					pva.visit_count_from,
					pva.visit_count_to,
					pva.visit_validity_type_id,
					CASE
						WHEN pva.visit_count_to = 9999
							THEN 9999
						WHEN pva.visit_count_from = 0
							THEN	(pva.visit_count_to - pva.visit_count_from)
						ELSE (pva.visit_count_to - pva.visit_count_from) + 1
					END AS allocated_visit_count,
					ISNULL(used_visit_allocations.used_visit_count, 0) AS used_visit_count,
					pur.purchase_no
				FROM
					PPass.dbo.purchase pur
					INNER JOIN PPass.dbo.purchase_visit_allocation_link pval ON pval.purchase_no = pur.purchase_no
					INNER JOIN PPass.dbo.purchase_visit_allocation_grp pvag ON pvag.purchase_visit_allocation_grp_id = pval.purchase_visit_allocation_grp_id
					INNER JOIN PPass.dbo.purchase_visit_allocation pva ON pva.purchase_visit_allocation_grp_id = pvag.purchase_visit_allocation_grp_id
					AND pva.charge_owner_id = 22
					AND pva.visitor_type_id = 3
					AND pva.visit_allocation_type_id NOT IN (3,4)
					AND pur.isDeleted = 0
					LEFT JOIN used_visit_allocations ON pva.purchase_visit_allocation_id = used_visit_allocations.purchase_visit_allocation_id
               	WHERE
						(
							(	pva.valid_from &lt;= getdate()
								AND pva.valid_to &gt;= getdate()
							)
							OR pva.visit_validity_type_id = 2
						)
			),
			calculated_visit_allocation AS
			(
				SELECT
					CASE WHEN derived_visit_allocation.visit_count_to = 9999 THEN
						9999
					ELSE
						CASE WHEN derived_visit_allocation.visit_validity_type_id = 2 THEN
							CASE
								WHEN derived_visit_allocation.visit_count_to = 9999
									THEN 9999
								WHEN derived_visit_allocation.visit_count_from = 0
									THEN	(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from)
								ELSE
									(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from) + 1
							END
						ELSE
							(derived_visit_allocation.allocated_visit_count - derived_visit_allocation.used_visit_count)
						END
					END AS visit_number,
					derived_visit_allocation.used_visit_count AS used_visit_number,
					derived_visit_allocation.purchase_no
				FROM derived_visit_allocation
			)

			UPDATE
				##temptable
			SET
				remaining_MGU_CLI_count = calculated_visit_allocation.visit_number
			FROM
				##temptable
				INNER JOIN calculated_visit_allocation ON ##temptable.purchase_no = calculated_visit_allocation.purchase_no

/* MGU CPAYVISIT2 */
		;WITH used_visit_allocations AS (
            	SELECT
					COUNT(1) AS used_visit_count,
					pvah2.purchase_visit_allocation_id
				FROM
					PPass.dbo.purchase_visit_allocation_his AS pvah2
					INNER JOIN PPass.dbo.purchase_visit_allocation pva2 ON pvah2.purchase_visit_allocation_id = pva2.purchase_visit_allocation_id
					INNER JOIN PPass.dbo.purchase_visit_allocation_link pval2 ON pva2.purchase_visit_allocation_grp_id = pval2.purchase_visit_allocation_grp_id
					LEFT OUTER JOIN PPass.dbo.source_visit_allocation_mem_gue_link salg ON pva2.source_visit_allocation_id = salg.guest_source_visit_allocation_id
				WHERE
						EXISTS (
							SELECT
								1
							FROM
								##temptable temp2
							WHERE
								temp2.purchase_no = pval2.purchase_no
						)
					AND pvah2.isdeleted = 0
					AND pva2.visitor_type_id = 3
					AND salg.guest_source_visit_allocation_id is NULL
				GROUP BY
					pvah2.purchase_visit_allocation_id
			),
			derived_visit_allocation AS (
				SELECT
					pva.visit_count_from,
					pva.visit_count_to,
					pva.visit_validity_type_id,
					CASE
						WHEN pva.visit_count_to = 9999
							THEN 9999
						WHEN pva.visit_count_from = 0
							THEN	(pva.visit_count_to - pva.visit_count_from)
						ELSE (pva.visit_count_to - pva.visit_count_from) + 1
					END AS allocated_visit_count,
					ISNULL(used_visit_allocations.used_visit_count, 0) AS used_visit_count,
					pur.purchase_no
				FROM
					PPass.dbo.purchase pur
					INNER JOIN PPass.dbo.purchase_visit_allocation_link pval ON pval.purchase_no = pur.purchase_no
					INNER JOIN PPass.dbo.purchase_visit_allocation_grp pvag ON pvag.purchase_visit_allocation_grp_id = pval.purchase_visit_allocation_grp_id
					INNER JOIN PPass.dbo.purchase_visit_allocation pva ON pva.purchase_visit_allocation_grp_id = pvag.purchase_visit_allocation_grp_id
					AND pva.charge_owner_id = 25
					AND pva.visitor_type_id = 3
					AND pva.visit_allocation_type_id NOT IN (3,4)
					AND pur.isDeleted = 0
					LEFT JOIN used_visit_allocations ON pva.purchase_visit_allocation_id = used_visit_allocations.purchase_visit_allocation_id
               	WHERE
						(
							(	pva.valid_from &lt;= getdate()
								AND pva.valid_to &gt;= getdate()
							)
							OR pva.visit_validity_type_id = 2
						)
			),
			calculated_visit_allocation AS
			(
				SELECT
					CASE WHEN derived_visit_allocation.visit_count_to = 9999 THEN
						9999
					ELSE
						CASE WHEN derived_visit_allocation.visit_validity_type_id = 2 THEN
							CASE
								WHEN derived_visit_allocation.visit_count_to = 9999
									THEN 9999
								WHEN derived_visit_allocation.visit_count_from = 0
									THEN	(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from)
								ELSE
									(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from) + 1
							END
						ELSE
							(derived_visit_allocation.allocated_visit_count - derived_visit_allocation.used_visit_count)
						END
					END AS visit_number,
					derived_visit_allocation.used_visit_count AS used_visit_number,
					derived_visit_allocation.purchase_no
				FROM derived_visit_allocation
			)

			UPDATE
				##temptable
			SET
				remaining_MGU_CLI2_count = calculated_visit_allocation.visit_number
			FROM
				##temptable
				INNER JOIN calculated_visit_allocation ON ##temptable.purchase_no = calculated_visit_allocation.purchase_no

/* SHAREDMEM PPAYVISIT */
		;WITH used_visit_allocations AS (
            	SELECT
					COUNT(1) AS used_visit_count,
					pvah2.purchase_visit_allocation_id
				FROM
					PPass.dbo.purchase_visit_allocation_his AS pvah2
					INNER JOIN PPass.dbo.purchase_visit_allocation pva2 ON pvah2.purchase_visit_allocation_id = pva2.purchase_visit_allocation_id
					INNER JOIN PPass.dbo.purchase_visit_allocation_link pval2 ON pva2.purchase_visit_allocation_grp_id = pval2.purchase_visit_allocation_grp_id
					LEFT OUTER JOIN PPass.dbo.source_visit_allocation_mem_gue_link salg ON pva2.source_visit_allocation_id = salg.guest_source_visit_allocation_id
				WHERE
						EXISTS (
							SELECT
								1
							FROM
								##temptable temp2
							WHERE
								temp2.purchase_no = pval2.purchase_no
						)
					AND pvah2.isdeleted = 0
					AND pva2.visitor_type_id = 8
					AND salg.guest_source_visit_allocation_id is NULL
				GROUP BY
					pvah2.purchase_visit_allocation_id
			),
			derived_visit_allocation AS (
				SELECT
					pva.visit_count_from,
					pva.visit_count_to,
					pva.visit_validity_type_id,
					CASE
						WHEN pva.visit_count_to = 9999
							THEN 9999
						WHEN pva.visit_count_from = 0
							THEN	(pva.visit_count_to - pva.visit_count_from)
						ELSE (pva.visit_count_to - pva.visit_count_from) + 1
					END AS allocated_visit_count,
					ISNULL(used_visit_allocations.used_visit_count, 0) AS used_visit_count,
					pur.purchase_no
				FROM
					PPass.dbo.purchase pur
					INNER JOIN PPass.dbo.purchase_visit_allocation_link pval ON pval.purchase_no = pur.purchase_no
					INNER JOIN PPass.dbo.purchase_visit_allocation_grp pvag ON pvag.purchase_visit_allocation_grp_id = pval.purchase_visit_allocation_grp_id
					INNER JOIN PPass.dbo.purchase_visit_allocation pva ON pva.purchase_visit_allocation_grp_id = pvag.purchase_visit_allocation_grp_id
					AND pva.charge_owner_id = 21
					AND pva.visitor_type_id = 8
					AND pva.visit_allocation_type_id NOT IN (3,4)
					AND pur.isDeleted = 0
					LEFT JOIN used_visit_allocations ON pva.purchase_visit_allocation_id = used_visit_allocations.purchase_visit_allocation_id
               	WHERE
						(
							(	pva.valid_from &lt;= getdate()
								AND pva.valid_to &gt;= getdate()
							)
							OR pva.visit_validity_type_id = 2
						)
			),
			calculated_visit_allocation AS
			(
				SELECT
					CASE WHEN derived_visit_allocation.visit_count_to = 9999 THEN
						9999
					ELSE
						CASE WHEN derived_visit_allocation.visit_validity_type_id = 2 THEN
							CASE
								WHEN derived_visit_allocation.visit_count_to = 9999
									THEN 9999
								WHEN derived_visit_allocation.visit_count_from = 0
									THEN	(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from)
								ELSE
									(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from) + 1
							END
						ELSE
							(derived_visit_allocation.allocated_visit_count - derived_visit_allocation.used_visit_count)
						END
					END AS visit_number,
					derived_visit_allocation.used_visit_count AS used_visit_number,
					derived_visit_allocation.purchase_no
				FROM derived_visit_allocation
			)

			UPDATE
				##temptable
			SET
				remaining_MEM_PP_count = calculated_visit_allocation.visit_number
			FROM
				##temptable
				INNER JOIN calculated_visit_allocation ON ##temptable.purchase_no = calculated_visit_allocation.purchase_no

/* SHAREDMEM CPAYVISIT */
		;WITH used_visit_allocations AS (
            	SELECT
					COUNT(1) AS used_visit_count,
					pvah2.purchase_visit_allocation_id
				FROM
					PPass.dbo.purchase_visit_allocation_his AS pvah2
					INNER JOIN PPass.dbo.purchase_visit_allocation pva2 ON pvah2.purchase_visit_allocation_id = pva2.purchase_visit_allocation_id
					INNER JOIN PPass.dbo.purchase_visit_allocation_link pval2 ON pva2.purchase_visit_allocation_grp_id = pval2.purchase_visit_allocation_grp_id
					LEFT OUTER JOIN PPass.dbo.source_visit_allocation_mem_gue_link salg ON pva2.source_visit_allocation_id = salg.guest_source_visit_allocation_id
				WHERE
						EXISTS (
							SELECT
								1
							FROM
								##temptable temp2
							WHERE
								temp2.purchase_no = pval2.purchase_no
						)
					AND pvah2.isdeleted = 0
					AND pva2.visitor_type_id = 8
					AND salg.guest_source_visit_allocation_id is NULL
				GROUP BY
					pvah2.purchase_visit_allocation_id
			),
			derived_visit_allocation AS (
				SELECT
					pva.visit_count_from,
					pva.visit_count_to,
					pva.visit_validity_type_id,
					CASE
						WHEN pva.visit_count_to = 9999
							THEN 9999
						WHEN pva.visit_count_from = 0
							THEN	(pva.visit_count_to - pva.visit_count_from)
						ELSE (pva.visit_count_to - pva.visit_count_from) + 1
					END AS allocated_visit_count,
					ISNULL(used_visit_allocations.used_visit_count, 0) AS used_visit_count,
					pur.purchase_no
				FROM
					PPass.dbo.purchase pur
					INNER JOIN PPass.dbo.purchase_visit_allocation_link pval ON pval.purchase_no = pur.purchase_no
					INNER JOIN PPass.dbo.purchase_visit_allocation_grp pvag ON pvag.purchase_visit_allocation_grp_id = pval.purchase_visit_allocation_grp_id
					INNER JOIN PPass.dbo.purchase_visit_allocation pva ON pva.purchase_visit_allocation_grp_id = pvag.purchase_visit_allocation_grp_id
					AND pva.charge_owner_id = 22
					AND pva.visitor_type_id = 8
					AND pva.visit_allocation_type_id NOT IN (3,4)
					AND pur.isDeleted = 0
					LEFT JOIN used_visit_allocations ON pva.purchase_visit_allocation_id = used_visit_allocations.purchase_visit_allocation_id
               	WHERE
						(
							(	pva.valid_from &lt;= getdate()
								AND pva.valid_to &gt;= getdate()
							)
							OR pva.visit_validity_type_id = 2
						)
			),
			calculated_visit_allocation AS
			(
				SELECT
					CASE WHEN derived_visit_allocation.visit_count_to = 9999 THEN
						9999
					ELSE
						CASE WHEN derived_visit_allocation.visit_validity_type_id = 2 THEN
							CASE
								WHEN derived_visit_allocation.visit_count_to = 9999
									THEN 9999
								WHEN derived_visit_allocation.visit_count_from = 0
									THEN	(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from)
								ELSE
									(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from) + 1
							END
						ELSE
							(derived_visit_allocation.allocated_visit_count - derived_visit_allocation.used_visit_count)
						END
					END AS visit_number,
					derived_visit_allocation.used_visit_count AS used_visit_number,
					derived_visit_allocation.purchase_no
				FROM derived_visit_allocation
			)

			UPDATE
				##temptable
			SET
				remaining_MEM_CLI_count = calculated_visit_allocation.visit_number
			FROM
				##temptable
				INNER JOIN calculated_visit_allocation ON ##temptable.purchase_no = calculated_visit_allocation.purchase_no
/* SHAREDMEM CPAYVISIT2 */
		;WITH used_visit_allocations AS (
            	SELECT
					COUNT(1) AS used_visit_count,
					pvah2.purchase_visit_allocation_id
				FROM
					PPass.dbo.purchase_visit_allocation_his AS pvah2
					INNER JOIN PPass.dbo.purchase_visit_allocation pva2 ON pvah2.purchase_visit_allocation_id = pva2.purchase_visit_allocation_id
					INNER JOIN PPass.dbo.purchase_visit_allocation_link pval2 ON pva2.purchase_visit_allocation_grp_id = pval2.purchase_visit_allocation_grp_id
					LEFT OUTER JOIN PPass.dbo.source_visit_allocation_mem_gue_link salg ON pva2.source_visit_allocation_id = salg.guest_source_visit_allocation_id
				WHERE
						EXISTS (
							SELECT
								1
							FROM
								##temptable temp2
							WHERE
								temp2.purchase_no = pval2.purchase_no
						)
					AND pvah2.isdeleted = 0
					AND pva2.visitor_type_id = 8
					AND salg.guest_source_visit_allocation_id is NULL
				GROUP BY
					pvah2.purchase_visit_allocation_id
			),
			derived_visit_allocation AS (
				SELECT
					pva.visit_count_from,
					pva.visit_count_to,
					pva.visit_validity_type_id,
					CASE
						WHEN pva.visit_count_to = 9999
							THEN 9999
						WHEN pva.visit_count_from = 0
							THEN	(pva.visit_count_to - pva.visit_count_from)
						ELSE (pva.visit_count_to - pva.visit_count_from) + 1
					END AS allocated_visit_count,
					ISNULL(used_visit_allocations.used_visit_count, 0) AS used_visit_count,
					pur.purchase_no
				FROM
					PPass.dbo.purchase pur
					INNER JOIN PPass.dbo.purchase_visit_allocation_link pval ON pval.purchase_no = pur.purchase_no
					INNER JOIN PPass.dbo.purchase_visit_allocation_grp pvag ON pvag.purchase_visit_allocation_grp_id = pval.purchase_visit_allocation_grp_id
					INNER JOIN PPass.dbo.purchase_visit_allocation pva ON pva.purchase_visit_allocation_grp_id = pvag.purchase_visit_allocation_grp_id
					AND pva.charge_owner_id = 25
					AND pva.visitor_type_id = 8
					AND pva.visit_allocation_type_id NOT IN (3,4)
					AND pur.isDeleted = 0
					LEFT JOIN used_visit_allocations ON pva.purchase_visit_allocation_id = used_visit_allocations.purchase_visit_allocation_id
               	WHERE
						(
							(	pva.valid_from &lt;= getdate()
								AND pva.valid_to &gt;= getdate()
							)
							OR pva.visit_validity_type_id = 2
						)
			),
			calculated_visit_allocation AS
			(
				SELECT
					CASE WHEN derived_visit_allocation.visit_count_to = 9999 THEN
						9999
					ELSE
						CASE WHEN derived_visit_allocation.visit_validity_type_id = 2 THEN
							CASE
								WHEN derived_visit_allocation.visit_count_to = 9999
									THEN 9999
								WHEN derived_visit_allocation.visit_count_from = 0
									THEN	(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from)
								ELSE
									(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from) + 1
							END
						ELSE
							(derived_visit_allocation.allocated_visit_count - derived_visit_allocation.used_visit_count)
						END
					END AS visit_number,
					derived_visit_allocation.used_visit_count AS used_visit_number,
					derived_visit_allocation.purchase_no
				FROM derived_visit_allocation
			)

			UPDATE
				##temptable
			SET
				remaining_MEM_CLI2_count = calculated_visit_allocation.visit_number
			FROM
				##temptable
				INNER JOIN calculated_visit_allocation ON ##temptable.purchase_no = calculated_visit_allocation.purchase_no

/* SHAREDGUE PPAYVISIT */
		;WITH used_visit_allocations AS (
            	SELECT
					COUNT(1) AS used_visit_count,
					pvah2.purchase_visit_allocation_id
				FROM
					PPass.dbo.purchase_visit_allocation_his AS pvah2
					INNER JOIN PPass.dbo.purchase_visit_allocation pva2 ON pvah2.purchase_visit_allocation_id = pva2.purchase_visit_allocation_id
					INNER JOIN PPass.dbo.purchase_visit_allocation_link pval2 ON pva2.purchase_visit_allocation_grp_id = pval2.purchase_visit_allocation_grp_id
					LEFT OUTER JOIN PPass.dbo.source_visit_allocation_mem_gue_link salg ON pva2.source_visit_allocation_id = salg.guest_source_visit_allocation_id
				WHERE
						EXISTS (
							SELECT
								1
							FROM
								##temptable temp2
							WHERE
								temp2.purchase_no = pval2.purchase_no
						)
					AND pvah2.isdeleted = 0
					AND pva2.visitor_type_id = 9
					AND salg.guest_source_visit_allocation_id is NULL
				GROUP BY
					pvah2.purchase_visit_allocation_id
			),
			derived_visit_allocation AS (
				SELECT
					pva.visit_count_from,
					pva.visit_count_to,
					pva.visit_validity_type_id,
					CASE
						WHEN pva.visit_count_to = 9999
							THEN 9999
						WHEN pva.visit_count_from = 0
							THEN	(pva.visit_count_to - pva.visit_count_from)
						ELSE (pva.visit_count_to - pva.visit_count_from) + 1
					END AS allocated_visit_count,
					ISNULL(used_visit_allocations.used_visit_count, 0) AS used_visit_count,
					pur.purchase_no
				FROM
					PPass.dbo.purchase pur
					INNER JOIN PPass.dbo.purchase_visit_allocation_link pval ON pval.purchase_no = pur.purchase_no
					INNER JOIN PPass.dbo.purchase_visit_allocation_grp pvag ON pvag.purchase_visit_allocation_grp_id = pval.purchase_visit_allocation_grp_id
					INNER JOIN PPass.dbo.purchase_visit_allocation pva ON pva.purchase_visit_allocation_grp_id = pvag.purchase_visit_allocation_grp_id
					AND pva.charge_owner_id = 21
					AND pva.visitor_type_id = 9
					AND pva.visit_allocation_type_id NOT IN (3,4)
					AND pur.isDeleted = 0
					LEFT JOIN used_visit_allocations ON pva.purchase_visit_allocation_id = used_visit_allocations.purchase_visit_allocation_id
               	WHERE
						(
							(	pva.valid_from &lt;= getdate()
								AND pva.valid_to &gt;= getdate()
							)
							OR pva.visit_validity_type_id = 2
						)
			),
			calculated_visit_allocation AS
			(
				SELECT
					CASE WHEN derived_visit_allocation.visit_count_to = 9999 THEN
						9999
					ELSE
						CASE WHEN derived_visit_allocation.visit_validity_type_id = 2 THEN
							CASE
								WHEN derived_visit_allocation.visit_count_to = 9999
									THEN 9999
								WHEN derived_visit_allocation.visit_count_from = 0
									THEN	(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from)
								ELSE
									(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from) + 1
							END
						ELSE
							(derived_visit_allocation.allocated_visit_count - derived_visit_allocation.used_visit_count)
						END
					END AS visit_number,
					derived_visit_allocation.used_visit_count AS used_visit_number,
					derived_visit_allocation.purchase_no
				FROM derived_visit_allocation
			)

			UPDATE
				##temptable
			SET
				remaining_GUE_PP_count = calculated_visit_allocation.visit_number
			FROM
				##temptable
				INNER JOIN calculated_visit_allocation ON ##temptable.purchase_no = calculated_visit_allocation.purchase_no

/* SHAREDGUE CPAYVISIT */
		;WITH used_visit_allocations AS (
            	SELECT
					COUNT(1) AS used_visit_count,
					pvah2.purchase_visit_allocation_id
				FROM
					PPass.dbo.purchase_visit_allocation_his AS pvah2
					INNER JOIN PPass.dbo.purchase_visit_allocation pva2 ON pvah2.purchase_visit_allocation_id = pva2.purchase_visit_allocation_id
					INNER JOIN PPass.dbo.purchase_visit_allocation_link pval2 ON pva2.purchase_visit_allocation_grp_id = pval2.purchase_visit_allocation_grp_id
					LEFT OUTER JOIN PPass.dbo.source_visit_allocation_mem_gue_link salg ON pva2.source_visit_allocation_id = salg.guest_source_visit_allocation_id
				WHERE
						EXISTS (
							SELECT
								1
							FROM
								##temptable temp2
							WHERE
								temp2.purchase_no = pval2.purchase_no
						)
					AND pvah2.isdeleted = 0
					AND pva2.visitor_type_id = 9
					AND salg.guest_source_visit_allocation_id is NULL
				GROUP BY
					pvah2.purchase_visit_allocation_id
			),
			derived_visit_allocation AS (
				SELECT
					pva.visit_count_from,
					pva.visit_count_to,
					pva.visit_validity_type_id,
					CASE
						WHEN pva.visit_count_to = 9999
							THEN 9999
						WHEN pva.visit_count_from = 0
							THEN	(pva.visit_count_to - pva.visit_count_from)
						ELSE (pva.visit_count_to - pva.visit_count_from) + 1
					END AS allocated_visit_count,
					ISNULL(used_visit_allocations.used_visit_count, 0) AS used_visit_count,
					pur.purchase_no
				FROM
					PPass.dbo.purchase pur
					INNER JOIN PPass.dbo.purchase_visit_allocation_link pval ON pval.purchase_no = pur.purchase_no
					INNER JOIN PPass.dbo.purchase_visit_allocation_grp pvag ON pvag.purchase_visit_allocation_grp_id = pval.purchase_visit_allocation_grp_id
					INNER JOIN PPass.dbo.purchase_visit_allocation pva ON pva.purchase_visit_allocation_grp_id = pvag.purchase_visit_allocation_grp_id
					AND pva.charge_owner_id = 22
					AND pva.visitor_type_id = 9
					AND pva.visit_allocation_type_id NOT IN (3,4)
					AND pur.isDeleted = 0
					LEFT JOIN used_visit_allocations ON pva.purchase_visit_allocation_id = used_visit_allocations.purchase_visit_allocation_id
               	WHERE
						(
							(	pva.valid_from &lt;= getdate()
								AND pva.valid_to &gt;= getdate()
							)
							OR pva.visit_validity_type_id = 2
						)
			),
			calculated_visit_allocation AS
			(
				SELECT
					CASE WHEN derived_visit_allocation.visit_count_to = 9999 THEN
						9999
					ELSE
						CASE WHEN derived_visit_allocation.visit_validity_type_id = 2 THEN
							CASE
								WHEN derived_visit_allocation.visit_count_to = 9999
									THEN 9999
								WHEN derived_visit_allocation.visit_count_from = 0
									THEN	(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from)
								ELSE
									(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from) + 1
							END
						ELSE
							(derived_visit_allocation.allocated_visit_count - derived_visit_allocation.used_visit_count)
						END
					END AS visit_number,
					derived_visit_allocation.used_visit_count AS used_visit_number,
					derived_visit_allocation.purchase_no
				FROM derived_visit_allocation
			)

			UPDATE
				##temptable
			SET
				remaining_GUE_CLI_count = calculated_visit_allocation.visit_number
			FROM
				##temptable
				INNER JOIN calculated_visit_allocation ON ##temptable.purchase_no = calculated_visit_allocation.purchase_no

/* SHAREDGUE CPAYVISIT2 */
		;WITH used_visit_allocations AS (
            	SELECT
					COUNT(1) AS used_visit_count,
					pvah2.purchase_visit_allocation_id
				FROM
					PPass.dbo.purchase_visit_allocation_his AS pvah2
					INNER JOIN PPass.dbo.purchase_visit_allocation pva2 ON pvah2.purchase_visit_allocation_id = pva2.purchase_visit_allocation_id
					INNER JOIN PPass.dbo.purchase_visit_allocation_link pval2 ON pva2.purchase_visit_allocation_grp_id = pval2.purchase_visit_allocation_grp_id
					LEFT OUTER JOIN PPass.dbo.source_visit_allocation_mem_gue_link salg ON pva2.source_visit_allocation_id = salg.guest_source_visit_allocation_id
				WHERE
						EXISTS (
							SELECT
								1
							FROM
								##temptable temp2
							WHERE
								temp2.purchase_no = pval2.purchase_no
						)
					AND pvah2.isdeleted = 0
					AND pva2.visitor_type_id = 9
					AND salg.guest_source_visit_allocation_id is NULL
				GROUP BY
					pvah2.purchase_visit_allocation_id
			),
			derived_visit_allocation AS (
				SELECT
					pva.visit_count_from,
					pva.visit_count_to,
					pva.visit_validity_type_id,
					CASE
						WHEN pva.visit_count_to = 9999
							THEN 9999
						WHEN pva.visit_count_from = 0
							THEN	(pva.visit_count_to - pva.visit_count_from)
						ELSE (pva.visit_count_to - pva.visit_count_from) + 1
					END AS allocated_visit_count,
					ISNULL(used_visit_allocations.used_visit_count, 0) AS used_visit_count,
					pur.purchase_no
				FROM
					PPass.dbo.purchase pur
					INNER JOIN PPass.dbo.purchase_visit_allocation_link pval ON pval.purchase_no = pur.purchase_no
					INNER JOIN PPass.dbo.purchase_visit_allocation_grp pvag ON pvag.purchase_visit_allocation_grp_id = pval.purchase_visit_allocation_grp_id
					INNER JOIN PPass.dbo.purchase_visit_allocation pva ON pva.purchase_visit_allocation_grp_id = pvag.purchase_visit_allocation_grp_id
					AND pva.charge_owner_id = 25
					AND pva.visitor_type_id = 9
					AND pva.visit_allocation_type_id NOT IN (3,4)
					AND pur.isDeleted = 0
					LEFT JOIN used_visit_allocations ON pva.purchase_visit_allocation_id = used_visit_allocations.purchase_visit_allocation_id
               	WHERE
						(
							(	pva.valid_from &lt;= getdate()
								AND pva.valid_to &gt;= getdate()
							)
							OR pva.visit_validity_type_id = 2
						)
			),
			calculated_visit_allocation AS
			(
				SELECT
					CASE WHEN derived_visit_allocation.visit_count_to = 9999 THEN
						9999
					ELSE
						CASE WHEN derived_visit_allocation.visit_validity_type_id = 2 THEN
							CASE
								WHEN derived_visit_allocation.visit_count_to = 9999
									THEN 9999
								WHEN derived_visit_allocation.visit_count_from = 0
									THEN	(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from)
								ELSE
									(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from) + 1
							END
						ELSE
							(derived_visit_allocation.allocated_visit_count - derived_visit_allocation.used_visit_count)
						END
					END AS visit_number,
					derived_visit_allocation.used_visit_count AS used_visit_number,
					derived_visit_allocation.purchase_no
				FROM derived_visit_allocation
			)

			UPDATE
				##temptable
			SET
				remaining_GUE_CLI2_count = calculated_visit_allocation.visit_number
			FROM
				##temptable
				INNER JOIN calculated_visit_allocation ON ##temptable.purchase_no = calculated_visit_allocation.purchase_no
/* SHAREDMGU PPAYVISIT */

		;WITH used_visit_allocations AS (
            	SELECT
					COUNT(1) AS used_visit_count,
					pvah2.purchase_visit_allocation_id
				FROM
					PPass.dbo.purchase_visit_allocation_his AS pvah2
					INNER JOIN PPass.dbo.purchase_visit_allocation pva2 ON pvah2.purchase_visit_allocation_id = pva2.purchase_visit_allocation_id
					INNER JOIN PPass.dbo.purchase_visit_allocation_link pval2 ON pva2.purchase_visit_allocation_grp_id = pval2.purchase_visit_allocation_grp_id
					LEFT OUTER JOIN PPass.dbo.source_visit_allocation_mem_gue_link salg ON pva2.source_visit_allocation_id = salg.guest_source_visit_allocation_id
				WHERE
						EXISTS (
							SELECT
								1
							FROM
								##temptable temp2
							WHERE
								temp2.purchase_no = pval2.purchase_no
						)
					AND pvah2.isdeleted = 0
					AND pva2.visitor_type_id = 10
					AND salg.guest_source_visit_allocation_id is NULL
				GROUP BY
					pvah2.purchase_visit_allocation_id
			),
			derived_visit_allocation AS (
				SELECT
					pva.visit_count_from,
					pva.visit_count_to,
					pva.visit_validity_type_id,
					CASE
						WHEN pva.visit_count_to = 9999
							THEN 9999
						WHEN pva.visit_count_from = 0
							THEN	(pva.visit_count_to - pva.visit_count_from)
						ELSE (pva.visit_count_to - pva.visit_count_from) + 1
					END AS allocated_visit_count,
					ISNULL(used_visit_allocations.used_visit_count, 0) AS used_visit_count,
					pur.purchase_no
				FROM
					PPass.dbo.purchase pur
					INNER JOIN PPass.dbo.purchase_visit_allocation_link pval ON pval.purchase_no = pur.purchase_no
					INNER JOIN PPass.dbo.purchase_visit_allocation_grp pvag ON pvag.purchase_visit_allocation_grp_id = pval.purchase_visit_allocation_grp_id
					INNER JOIN PPass.dbo.purchase_visit_allocation pva ON pva.purchase_visit_allocation_grp_id = pvag.purchase_visit_allocation_grp_id
					AND pva.charge_owner_id = 21
					AND pva.visitor_type_id = 10
					AND pva.visit_allocation_type_id NOT IN (3,4)
					AND pur.isDeleted = 0
					LEFT JOIN used_visit_allocations ON pva.purchase_visit_allocation_id = used_visit_allocations.purchase_visit_allocation_id
               	WHERE
						(
							(	pva.valid_from &lt;= getdate()
								AND pva.valid_to &gt;= getdate()
							)
							OR pva.visit_validity_type_id = 2
						)
			),
			calculated_visit_allocation AS
			(
				SELECT
					CASE WHEN derived_visit_allocation.visit_count_to = 9999 THEN
						9999
					ELSE
						CASE WHEN derived_visit_allocation.visit_validity_type_id = 2 THEN
							CASE
								WHEN derived_visit_allocation.visit_count_to = 9999
									THEN 9999
								WHEN derived_visit_allocation.visit_count_from = 0
									THEN	(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from)
								ELSE
									(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from) + 1
							END
						ELSE
							(derived_visit_allocation.allocated_visit_count - derived_visit_allocation.used_visit_count)
						END
					END AS visit_number,
					derived_visit_allocation.used_visit_count AS used_visit_number,
					derived_visit_allocation.purchase_no
				FROM derived_visit_allocation
			)

			UPDATE
				##temptable
			SET
				remaining_MGU_PP_count = calculated_visit_allocation.visit_number
			FROM
				##temptable
				INNER JOIN calculated_visit_allocation ON ##temptable.purchase_no = calculated_visit_allocation.purchase_no
				/* SHAREDMGU CPAYVISIT */
		;WITH used_visit_allocations AS (
            	SELECT
					COUNT(1) AS used_visit_count,
					pvah2.purchase_visit_allocation_id
				FROM
					PPass.dbo.purchase_visit_allocation_his AS pvah2
					INNER JOIN PPass.dbo.purchase_visit_allocation pva2 ON pvah2.purchase_visit_allocation_id = pva2.purchase_visit_allocation_id
					INNER JOIN PPass.dbo.purchase_visit_allocation_link pval2 ON pva2.purchase_visit_allocation_grp_id = pval2.purchase_visit_allocation_grp_id
					LEFT OUTER JOIN PPass.dbo.source_visit_allocation_mem_gue_link salg ON pva2.source_visit_allocation_id = salg.guest_source_visit_allocation_id
				WHERE
						EXISTS (
							SELECT
								1
							FROM
								##temptable temp2
							WHERE
								temp2.purchase_no = pval2.purchase_no
						)
					AND pvah2.isdeleted = 0
					AND pva2.visitor_type_id = 10
					AND salg.guest_source_visit_allocation_id is NULL
				GROUP BY
					pvah2.purchase_visit_allocation_id
			),
			derived_visit_allocation AS (
				SELECT
					pva.visit_count_from,
					pva.visit_count_to,
					pva.visit_validity_type_id,
					CASE
						WHEN pva.visit_count_to = 9999
							THEN 9999
						WHEN pva.visit_count_from = 0
							THEN	(pva.visit_count_to - pva.visit_count_from)
						ELSE (pva.visit_count_to - pva.visit_count_from) + 1
					END AS allocated_visit_count,
					ISNULL(used_visit_allocations.used_visit_count, 0) AS used_visit_count,
					pur.purchase_no
				FROM
					PPass.dbo.purchase pur
					INNER JOIN PPass.dbo.purchase_visit_allocation_link pval ON pval.purchase_no = pur.purchase_no
					INNER JOIN PPass.dbo.purchase_visit_allocation_grp pvag ON pvag.purchase_visit_allocation_grp_id = pval.purchase_visit_allocation_grp_id
					INNER JOIN PPass.dbo.purchase_visit_allocation pva ON pva.purchase_visit_allocation_grp_id = pvag.purchase_visit_allocation_grp_id
					AND pva.charge_owner_id = 22
					AND pva.visitor_type_id = 10
					AND pva.visit_allocation_type_id NOT IN (3,4)
					AND pur.isDeleted = 0
					LEFT JOIN used_visit_allocations ON pva.purchase_visit_allocation_id = used_visit_allocations.purchase_visit_allocation_id
               	WHERE
						(
							(	pva.valid_from &lt;= getdate()
								AND pva.valid_to &gt;= getdate()
							)
							OR pva.visit_validity_type_id = 2
						)
			),
			calculated_visit_allocation AS
			(
				SELECT
					CASE WHEN derived_visit_allocation.visit_count_to = 9999 THEN
						9999
					ELSE
						CASE WHEN derived_visit_allocation.visit_validity_type_id = 2 THEN
							CASE
								WHEN derived_visit_allocation.visit_count_to = 9999
									THEN 9999
								WHEN derived_visit_allocation.visit_count_from = 0
									THEN	(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from)
								ELSE
									(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from) + 1
							END
						ELSE
							(derived_visit_allocation.allocated_visit_count - derived_visit_allocation.used_visit_count)
						END
					END AS visit_number,
					derived_visit_allocation.used_visit_count AS used_visit_number,
					derived_visit_allocation.purchase_no
				FROM derived_visit_allocation
			)

			UPDATE
				##temptable
			SET
				remaining_MGU_CLI_count = calculated_visit_allocation.visit_number
			FROM
				##temptable
				INNER JOIN calculated_visit_allocation ON ##temptable.purchase_no = calculated_visit_allocation.purchase_no
				/*SHAREDMGU CPAYVISIT2 */
		;WITH used_visit_allocations AS (
            	SELECT
					COUNT(1) AS used_visit_count,
					pvah2.purchase_visit_allocation_id
				FROM
					PPass.dbo.purchase_visit_allocation_his AS pvah2
					INNER JOIN PPass.dbo.purchase_visit_allocation pva2 ON pvah2.purchase_visit_allocation_id = pva2.purchase_visit_allocation_id
					INNER JOIN PPass.dbo.purchase_visit_allocation_link pval2 ON pva2.purchase_visit_allocation_grp_id = pval2.purchase_visit_allocation_grp_id
					LEFT OUTER JOIN PPass.dbo.source_visit_allocation_mem_gue_link salg ON pva2.source_visit_allocation_id = salg.guest_source_visit_allocation_id
				WHERE
						EXISTS (
							SELECT
								1
							FROM
								##temptable temp2
							WHERE
								temp2.purchase_no = pval2.purchase_no
						)
					AND pvah2.isdeleted = 0
					AND pva2.visitor_type_id = 10
					AND salg.guest_source_visit_allocation_id is NULL
				GROUP BY
					pvah2.purchase_visit_allocation_id
			),
			derived_visit_allocation AS (
				SELECT
					pva.visit_count_from,
					pva.visit_count_to,
					pva.visit_validity_type_id,
					CASE
						WHEN pva.visit_count_to = 9999
							THEN 9999
						WHEN pva.visit_count_from = 0
							THEN	(pva.visit_count_to - pva.visit_count_from)
						ELSE (pva.visit_count_to - pva.visit_count_from) + 1
					END AS allocated_visit_count,
					ISNULL(used_visit_allocations.used_visit_count, 0) AS used_visit_count,
					pur.purchase_no
				FROM
					PPass.dbo.purchase pur
					INNER JOIN PPass.dbo.purchase_visit_allocation_link pval ON pval.purchase_no = pur.purchase_no
					INNER JOIN PPass.dbo.purchase_visit_allocation_grp pvag ON pvag.purchase_visit_allocation_grp_id = pval.purchase_visit_allocation_grp_id
					INNER JOIN PPass.dbo.purchase_visit_allocation pva ON pva.purchase_visit_allocation_grp_id = pvag.purchase_visit_allocation_grp_id
					AND pva.charge_owner_id = 25
					AND pva.visitor_type_id = 10
					AND pva.visit_allocation_type_id NOT IN (3,4)
					AND pur.isDeleted = 0
					LEFT JOIN used_visit_allocations ON pva.purchase_visit_allocation_id = used_visit_allocations.purchase_visit_allocation_id
               	WHERE
						(
							(	pva.valid_from &lt;= getdate()
								AND pva.valid_to &gt;= getdate()
							)
							OR pva.visit_validity_type_id = 2
						)
			),
			calculated_visit_allocation AS
			(
				SELECT
					CASE WHEN derived_visit_allocation.visit_count_to = 9999 THEN
						9999
					ELSE
						CASE WHEN derived_visit_allocation.visit_validity_type_id = 2 THEN
							CASE
								WHEN derived_visit_allocation.visit_count_to = 9999
									THEN 9999
								WHEN derived_visit_allocation.visit_count_from = 0
									THEN	(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from)
								ELSE
									(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from) + 1
							END
						ELSE
							(derived_visit_allocation.allocated_visit_count - derived_visit_allocation.used_visit_count)
						END
					END AS visit_number,
					derived_visit_allocation.used_visit_count AS used_visit_number,
					derived_visit_allocation.purchase_no
				FROM derived_visit_allocation
			)

			UPDATE
				##temptable
			SET
				remaining_MGU_CLI2_count = calculated_visit_allocation.visit_number
			FROM
				##temptable
				INNER JOIN calculated_visit_allocation ON ##temptable.purchase_no = calculated_visit_allocation.purchase_no
/*OFFERMEM PPAYVISIT */
;WITH used_visit_allocations AS (
            	SELECT
					COUNT(1) AS used_visit_count,
					pvah2.purchase_visit_allocation_id
				FROM
					PPass.dbo.purchase_visit_allocation_his AS pvah2
					INNER JOIN PPass.dbo.purchase_visit_allocation pva2 ON pvah2.purchase_visit_allocation_id = pva2.purchase_visit_allocation_id
					INNER JOIN PPass.dbo.purchase_visit_allocation_link pval2 ON pva2.purchase_visit_allocation_grp_id = pval2.purchase_visit_allocation_grp_id
					LEFT OUTER JOIN PPass.dbo.source_visit_allocation_mem_gue_link salg ON pva2.source_visit_allocation_id = salg.guest_source_visit_allocation_id
				WHERE
						EXISTS (
							SELECT
								1
							FROM
								##temptable temp2
							WHERE
								temp2.purchase_no = pval2.purchase_no
						)
					AND pvah2.isdeleted = 0
					AND pva2.visitor_type_id = 6
					AND salg.guest_source_visit_allocation_id is NULL
				GROUP BY
					pvah2.purchase_visit_allocation_id
			),
			derived_visit_allocation AS (
				SELECT
					pva.visit_count_from,
					pva.visit_count_to,
					pva.visit_validity_type_id,
					CASE
						WHEN pva.visit_count_to = 9999
							THEN 9999
						WHEN pva.visit_count_from = 0
							THEN	(pva.visit_count_to - pva.visit_count_from)
						ELSE (pva.visit_count_to - pva.visit_count_from) + 1
					END AS allocated_visit_count,
					ISNULL(used_visit_allocations.used_visit_count, 0) AS used_visit_count,
					pur.purchase_no
				FROM
					PPass.dbo.purchase pur
					INNER JOIN PPass.dbo.purchase_visit_allocation_link pval ON pval.purchase_no = pur.purchase_no
					INNER JOIN PPass.dbo.purchase_visit_allocation_grp pvag ON pvag.purchase_visit_allocation_grp_id = pval.purchase_visit_allocation_grp_id
					INNER JOIN PPass.dbo.purchase_visit_allocation pva ON pva.purchase_visit_allocation_grp_id = pvag.purchase_visit_allocation_grp_id
					AND pva.charge_owner_id = 21
					AND pva.visitor_type_id = 6
					AND pva.visit_allocation_type_id NOT IN (3,4)
					AND pur.isDeleted = 0
					LEFT JOIN used_visit_allocations ON pva.purchase_visit_allocation_id = used_visit_allocations.purchase_visit_allocation_id
               	WHERE
						(
							(	pva.valid_from &lt;= getdate()
								AND pva.valid_to &gt;= getdate()
							)
							OR pva.visit_validity_type_id = 2
						)
			),
			calculated_visit_allocation AS
			(
				SELECT
					CASE WHEN derived_visit_allocation.visit_count_to = 9999 THEN
						9999
					ELSE
						CASE WHEN derived_visit_allocation.visit_validity_type_id = 2 THEN
							CASE
								WHEN derived_visit_allocation.visit_count_to = 9999
									THEN 9999
								WHEN derived_visit_allocation.visit_count_from = 0
									THEN	(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from)
								ELSE
									(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from) + 1
							END
						ELSE
							(derived_visit_allocation.allocated_visit_count - derived_visit_allocation.used_visit_count)
						END
					END AS visit_number,
					derived_visit_allocation.used_visit_count AS used_visit_number,
					derived_visit_allocation.purchase_no
				FROM derived_visit_allocation
			)

			UPDATE
				##temptable
			SET
				remaining_MEM_PP_count = calculated_visit_allocation.visit_number
			FROM
				##temptable
				INNER JOIN calculated_visit_allocation ON ##temptable.purchase_no = calculated_visit_allocation.purchase_no
		/* OFFERMEMCPAYLIST */
		;WITH used_visit_allocations AS (
            	SELECT
					COUNT(1) AS used_visit_count,
					pvah2.purchase_visit_allocation_id
				FROM
					PPass.dbo.purchase_visit_allocation_his AS pvah2
					INNER JOIN PPass.dbo.purchase_visit_allocation pva2 ON pvah2.purchase_visit_allocation_id = pva2.purchase_visit_allocation_id
					INNER JOIN PPass.dbo.purchase_visit_allocation_link pval2 ON pva2.purchase_visit_allocation_grp_id = pval2.purchase_visit_allocation_grp_id
					LEFT OUTER JOIN PPass.dbo.source_visit_allocation_mem_gue_link salg ON pva2.source_visit_allocation_id = salg.guest_source_visit_allocation_id
				WHERE
						EXISTS (
							SELECT
								1
							FROM
								##temptable temp2
							WHERE
								temp2.purchase_no = pval2.purchase_no
						)
					AND pvah2.isdeleted = 0
					AND pva2.visitor_type_id = 6
					AND salg.guest_source_visit_allocation_id is NULL
				GROUP BY
					pvah2.purchase_visit_allocation_id
			),
			derived_visit_allocation AS (
				SELECT
					pva.visit_count_from,
					pva.visit_count_to,
					pva.visit_validity_type_id,
					CASE
						WHEN pva.visit_count_to = 9999
							THEN 9999
						WHEN pva.visit_count_from = 0
							THEN	(pva.visit_count_to - pva.visit_count_from)
						ELSE (pva.visit_count_to - pva.visit_count_from) + 1
					END AS allocated_visit_count,
					ISNULL(used_visit_allocations.used_visit_count, 0) AS used_visit_count,
					pur.purchase_no
				FROM
					PPass.dbo.purchase pur
					INNER JOIN PPass.dbo.purchase_visit_allocation_link pval ON pval.purchase_no = pur.purchase_no
					INNER JOIN PPass.dbo.purchase_visit_allocation_grp pvag ON pvag.purchase_visit_allocation_grp_id = pval.purchase_visit_allocation_grp_id
					INNER JOIN PPass.dbo.purchase_visit_allocation pva ON pva.purchase_visit_allocation_grp_id = pvag.purchase_visit_allocation_grp_id
					AND pva.charge_owner_id = 22
					AND pva.visitor_type_id = 6
					AND pva.visit_allocation_type_id NOT IN (3,4)
					AND pur.isDeleted = 0
					LEFT JOIN used_visit_allocations ON pva.purchase_visit_allocation_id = used_visit_allocations.purchase_visit_allocation_id
               	WHERE
						(
							(	pva.valid_from &lt;= getdate()
								AND pva.valid_to &gt;= getdate()
							)
							OR pva.visit_validity_type_id = 2
						)
			),
			calculated_visit_allocation AS
			(
				SELECT
					CASE WHEN derived_visit_allocation.visit_count_to = 9999 THEN
						9999
					ELSE
						CASE WHEN derived_visit_allocation.visit_validity_type_id = 2 THEN
							CASE
								WHEN derived_visit_allocation.visit_count_to = 9999
									THEN 9999
								WHEN derived_visit_allocation.visit_count_from = 0
									THEN	(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from)
								ELSE
									(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from) + 1
							END
						ELSE
							(derived_visit_allocation.allocated_visit_count - derived_visit_allocation.used_visit_count)
						END
					END AS visit_number,
					derived_visit_allocation.used_visit_count AS used_visit_number,
					derived_visit_allocation.purchase_no
				FROM derived_visit_allocation
			)

			UPDATE
				##temptable
			SET
				remaining_MEM_CLI_count = calculated_visit_allocation.visit_number
			FROM
				##temptable
				INNER JOIN calculated_visit_allocation ON ##temptable.purchase_no = calculated_visit_allocation.purchase_no
		/* OFFERMEMCPAYLIST2 */
;WITH used_visit_allocations AS (
            	SELECT
					COUNT(1) AS used_visit_count,
					pvah2.purchase_visit_allocation_id
				FROM
					PPass.dbo.purchase_visit_allocation_his AS pvah2
					INNER JOIN PPass.dbo.purchase_visit_allocation pva2 ON pvah2.purchase_visit_allocation_id = pva2.purchase_visit_allocation_id
					INNER JOIN PPass.dbo.purchase_visit_allocation_link pval2 ON pva2.purchase_visit_allocation_grp_id = pval2.purchase_visit_allocation_grp_id
					LEFT OUTER JOIN PPass.dbo.source_visit_allocation_mem_gue_link salg ON pva2.source_visit_allocation_id = salg.guest_source_visit_allocation_id
				WHERE
						EXISTS (
							SELECT
								1
							FROM
								##temptable temp2
							WHERE
								temp2.purchase_no = pval2.purchase_no
						)
					AND pvah2.isdeleted = 0
					AND pva2.visitor_type_id = 6
					AND salg.guest_source_visit_allocation_id is NULL
				GROUP BY
					pvah2.purchase_visit_allocation_id
			),
			derived_visit_allocation AS (
				SELECT
					pva.visit_count_from,
					pva.visit_count_to,
					pva.visit_validity_type_id,
					CASE
						WHEN pva.visit_count_to = 9999
							THEN 9999
						WHEN pva.visit_count_from = 0
							THEN	(pva.visit_count_to - pva.visit_count_from)
						ELSE (pva.visit_count_to - pva.visit_count_from) + 1
					END AS allocated_visit_count,
					ISNULL(used_visit_allocations.used_visit_count, 0) AS used_visit_count,
					pur.purchase_no
				FROM
					PPass.dbo.purchase pur
					INNER JOIN PPass.dbo.purchase_visit_allocation_link pval ON pval.purchase_no = pur.purchase_no
					INNER JOIN PPass.dbo.purchase_visit_allocation_grp pvag ON pvag.purchase_visit_allocation_grp_id = pval.purchase_visit_allocation_grp_id
					INNER JOIN PPass.dbo.purchase_visit_allocation pva ON pva.purchase_visit_allocation_grp_id = pvag.purchase_visit_allocation_grp_id
					AND pva.charge_owner_id = 25
					AND pva.visitor_type_id = 6
					AND pva.visit_allocation_type_id NOT IN (3,4)
					AND pur.isDeleted = 0
					LEFT JOIN used_visit_allocations ON pva.purchase_visit_allocation_id = used_visit_allocations.purchase_visit_allocation_id
               	WHERE
						(
							(	pva.valid_from &lt;= getdate()
								AND pva.valid_to &gt;= getdate()
							)
							OR pva.visit_validity_type_id = 2
						)
			),
			calculated_visit_allocation AS
			(
				SELECT
					CASE WHEN derived_visit_allocation.visit_count_to = 9999 THEN
						9999
					ELSE
						CASE WHEN derived_visit_allocation.visit_validity_type_id = 2 THEN
							CASE
								WHEN derived_visit_allocation.visit_count_to = 9999
									THEN 9999
								WHEN derived_visit_allocation.visit_count_from = 0
									THEN	(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from)
								ELSE
									(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from) + 1
							END
						ELSE
							(derived_visit_allocation.allocated_visit_count - derived_visit_allocation.used_visit_count)
						END
					END AS visit_number,
					derived_visit_allocation.used_visit_count AS used_visit_number,
					derived_visit_allocation.purchase_no
				FROM derived_visit_allocation
			)

			UPDATE
				##temptable
			SET
				remaining_MEM_CLI2_count = calculated_visit_allocation.visit_number
			FROM
				##temptable
				INNER JOIN calculated_visit_allocation ON ##temptable.purchase_no = calculated_visit_allocation.purchase_no
		/* OFFERGUEPPAYLIST */
;WITH used_visit_allocations AS (
            	SELECT
					COUNT(1) AS used_visit_count,
					pvah2.purchase_visit_allocation_id
				FROM
					PPass.dbo.purchase_visit_allocation_his AS pvah2
					INNER JOIN PPass.dbo.purchase_visit_allocation pva2 ON pvah2.purchase_visit_allocation_id = pva2.purchase_visit_allocation_id
					INNER JOIN PPass.dbo.purchase_visit_allocation_link pval2 ON pva2.purchase_visit_allocation_grp_id = pval2.purchase_visit_allocation_grp_id
					LEFT OUTER JOIN PPass.dbo.source_visit_allocation_mem_gue_link salg ON pva2.source_visit_allocation_id = salg.guest_source_visit_allocation_id
				WHERE
						EXISTS (
							SELECT
								1
							FROM
								##temptable temp2
							WHERE
								temp2.purchase_no = pval2.purchase_no
						)
					AND pvah2.isdeleted = 0
					AND pva2.visitor_type_id = 5
					AND salg.guest_source_visit_allocation_id is NULL
				GROUP BY
					pvah2.purchase_visit_allocation_id
			),
			derived_visit_allocation AS (
				SELECT
					pva.visit_count_from,
					pva.visit_count_to,
					pva.visit_validity_type_id,
					CASE
						WHEN pva.visit_count_to = 9999
							THEN 9999
						WHEN pva.visit_count_from = 0
							THEN	(pva.visit_count_to - pva.visit_count_from)
						ELSE (pva.visit_count_to - pva.visit_count_from) + 1
					END AS allocated_visit_count,
					ISNULL(used_visit_allocations.used_visit_count, 0) AS used_visit_count,
					pur.purchase_no
				FROM
					PPass.dbo.purchase pur
					INNER JOIN PPass.dbo.purchase_visit_allocation_link pval ON pval.purchase_no = pur.purchase_no
					INNER JOIN PPass.dbo.purchase_visit_allocation_grp pvag ON pvag.purchase_visit_allocation_grp_id = pval.purchase_visit_allocation_grp_id
					INNER JOIN PPass.dbo.purchase_visit_allocation pva ON pva.purchase_visit_allocation_grp_id = pvag.purchase_visit_allocation_grp_id
					AND pva.charge_owner_id = 21
					AND pva.visitor_type_id = 5
					AND pva.visit_allocation_type_id NOT IN (3,4)
					AND pur.isDeleted = 0
					LEFT JOIN used_visit_allocations ON pva.purchase_visit_allocation_id = used_visit_allocations.purchase_visit_allocation_id
               	WHERE
						(
							(	pva.valid_from &lt;= getdate()
								AND pva.valid_to &gt;= getdate()
							)
							OR pva.visit_validity_type_id = 2
						)
			),
			calculated_visit_allocation AS
			(
				SELECT
					CASE WHEN derived_visit_allocation.visit_count_to = 9999 THEN
						9999
					ELSE
						CASE WHEN derived_visit_allocation.visit_validity_type_id = 2 THEN
							CASE
								WHEN derived_visit_allocation.visit_count_to = 9999
									THEN 9999
								WHEN derived_visit_allocation.visit_count_from = 0
									THEN	(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from)
								ELSE
									(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from) + 1
							END
						ELSE
							(derived_visit_allocation.allocated_visit_count - derived_visit_allocation.used_visit_count)
						END
					END AS visit_number,
					derived_visit_allocation.used_visit_count AS used_visit_number,
					derived_visit_allocation.purchase_no
				FROM derived_visit_allocation
			)

			UPDATE
				##temptable
			SET
				remaining_GUE_PP_count = calculated_visit_allocation.visit_number
			FROM
				##temptable
				INNER JOIN calculated_visit_allocation ON ##temptable.purchase_no = calculated_visit_allocation.purchase_no
		/* OFFERGUECPAYLIST */
;WITH used_visit_allocations AS (
            	SELECT
					COUNT(1) AS used_visit_count,
					pvah2.purchase_visit_allocation_id
				FROM
					PPass.dbo.purchase_visit_allocation_his AS pvah2
					INNER JOIN PPass.dbo.purchase_visit_allocation pva2 ON pvah2.purchase_visit_allocation_id = pva2.purchase_visit_allocation_id
					INNER JOIN PPass.dbo.purchase_visit_allocation_link pval2 ON pva2.purchase_visit_allocation_grp_id = pval2.purchase_visit_allocation_grp_id
					LEFT OUTER JOIN PPass.dbo.source_visit_allocation_mem_gue_link salg ON pva2.source_visit_allocation_id = salg.guest_source_visit_allocation_id
				WHERE
						EXISTS (
							SELECT
								1
							FROM
								##temptable temp2
							WHERE
								temp2.purchase_no = pval2.purchase_no
						)
					AND pvah2.isdeleted = 0
					AND pva2.visitor_type_id = 5
					AND salg.guest_source_visit_allocation_id is NULL
				GROUP BY
					pvah2.purchase_visit_allocation_id
			),
			derived_visit_allocation AS (
				SELECT
					pva.visit_count_from,
					pva.visit_count_to,
					pva.visit_validity_type_id,
					CASE
						WHEN pva.visit_count_to = 9999
							THEN 9999
						WHEN pva.visit_count_from = 0
							THEN	(pva.visit_count_to - pva.visit_count_from)
						ELSE (pva.visit_count_to - pva.visit_count_from) + 1
					END AS allocated_visit_count,
					ISNULL(used_visit_allocations.used_visit_count, 0) AS used_visit_count,
					pur.purchase_no
				FROM
					PPass.dbo.purchase pur
					INNER JOIN PPass.dbo.purchase_visit_allocation_link pval ON pval.purchase_no = pur.purchase_no
					INNER JOIN PPass.dbo.purchase_visit_allocation_grp pvag ON pvag.purchase_visit_allocation_grp_id = pval.purchase_visit_allocation_grp_id
					INNER JOIN PPass.dbo.purchase_visit_allocation pva ON pva.purchase_visit_allocation_grp_id = pvag.purchase_visit_allocation_grp_id
					AND pva.charge_owner_id = 22
					AND pva.visitor_type_id = 5
					AND pva.visit_allocation_type_id NOT IN (3,4)
					AND pur.isDeleted = 0
					LEFT JOIN used_visit_allocations ON pva.purchase_visit_allocation_id = used_visit_allocations.purchase_visit_allocation_id
               	WHERE
						(
							(	pva.valid_from &lt;= getdate()
								AND pva.valid_to &gt;= getdate()
							)
							OR pva.visit_validity_type_id = 2
						)
			),
			calculated_visit_allocation AS
			(
				SELECT
					CASE WHEN derived_visit_allocation.visit_count_to = 9999 THEN
						9999
					ELSE
						CASE WHEN derived_visit_allocation.visit_validity_type_id = 2 THEN
							CASE
								WHEN derived_visit_allocation.visit_count_to = 9999
									THEN 9999
								WHEN derived_visit_allocation.visit_count_from = 0
									THEN	(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from)
								ELSE
									(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from) + 1
							END
						ELSE
							(derived_visit_allocation.allocated_visit_count - derived_visit_allocation.used_visit_count)
						END
					END AS visit_number,
					derived_visit_allocation.used_visit_count AS used_visit_number,
					derived_visit_allocation.purchase_no
				FROM derived_visit_allocation
			)

			UPDATE
				##temptable
			SET
				remaining_GUE_CLI_count = calculated_visit_allocation.visit_number
			FROM
				##temptable
				INNER JOIN calculated_visit_allocation ON ##temptable.purchase_no = calculated_visit_allocation.purchase_no
		/* OFFERGUECPAYLIST2 */
;WITH used_visit_allocations AS (
            	SELECT
					COUNT(1) AS used_visit_count,
					pvah2.purchase_visit_allocation_id
				FROM
					PPass.dbo.purchase_visit_allocation_his AS pvah2
					INNER JOIN PPass.dbo.purchase_visit_allocation pva2 ON pvah2.purchase_visit_allocation_id = pva2.purchase_visit_allocation_id
					INNER JOIN PPass.dbo.purchase_visit_allocation_link pval2 ON pva2.purchase_visit_allocation_grp_id = pval2.purchase_visit_allocation_grp_id
					LEFT OUTER JOIN PPass.dbo.source_visit_allocation_mem_gue_link salg ON pva2.source_visit_allocation_id = salg.guest_source_visit_allocation_id
				WHERE
						EXISTS (
							SELECT
								1
							FROM
								##temptable temp2
							WHERE
								temp2.purchase_no = pval2.purchase_no
						)
					AND pvah2.isdeleted = 0
					AND pva2.visitor_type_id = 5
					AND salg.guest_source_visit_allocation_id is NULL
				GROUP BY
					pvah2.purchase_visit_allocation_id
			),
			derived_visit_allocation AS (
				SELECT
					pva.visit_count_from,
					pva.visit_count_to,
					pva.visit_validity_type_id,
					CASE
						WHEN pva.visit_count_to = 9999
							THEN 9999
						WHEN pva.visit_count_from = 0
							THEN	(pva.visit_count_to - pva.visit_count_from)
						ELSE (pva.visit_count_to - pva.visit_count_from) + 1
					END AS allocated_visit_count,
					ISNULL(used_visit_allocations.used_visit_count, 0) AS used_visit_count,
					pur.purchase_no
				FROM
					PPass.dbo.purchase pur
					INNER JOIN PPass.dbo.purchase_visit_allocation_link pval ON pval.purchase_no = pur.purchase_no
					INNER JOIN PPass.dbo.purchase_visit_allocation_grp pvag ON pvag.purchase_visit_allocation_grp_id = pval.purchase_visit_allocation_grp_id
					INNER JOIN PPass.dbo.purchase_visit_allocation pva ON pva.purchase_visit_allocation_grp_id = pvag.purchase_visit_allocation_grp_id
					AND pva.charge_owner_id = 25
					AND pva.visitor_type_id = 5
					AND pva.visit_allocation_type_id NOT IN (3,4)
					AND pur.isDeleted = 0
					LEFT JOIN used_visit_allocations ON pva.purchase_visit_allocation_id = used_visit_allocations.purchase_visit_allocation_id
               	WHERE
						(
							(	pva.valid_from &lt;= getdate()
								AND pva.valid_to &gt;= getdate()
							)
							OR pva.visit_validity_type_id = 2
						)
			),
			calculated_visit_allocation AS
			(
				SELECT
					CASE WHEN derived_visit_allocation.visit_count_to = 9999 THEN
						9999
					ELSE
						CASE WHEN derived_visit_allocation.visit_validity_type_id = 2 THEN
							CASE
								WHEN derived_visit_allocation.visit_count_to = 9999
									THEN 9999
								WHEN derived_visit_allocation.visit_count_from = 0
									THEN	(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from)
								ELSE
									(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from) + 1
							END
						ELSE
							(derived_visit_allocation.allocated_visit_count - derived_visit_allocation.used_visit_count)
						END
					END AS visit_number,
					derived_visit_allocation.used_visit_count AS used_visit_number,
					derived_visit_allocation.purchase_no
				FROM derived_visit_allocation
			)

			UPDATE
				##temptable
			SET
				remaining_GUE_CLI2_count = calculated_visit_allocation.visit_number
			FROM
				##temptable
				INNER JOIN calculated_visit_allocation ON ##temptable.purchase_no = calculated_visit_allocation.purchase_no
		/* OFFERMGUPPAYLIST */
;WITH used_visit_allocations AS (
            	SELECT
					COUNT(1) AS used_visit_count,
					pvah2.purchase_visit_allocation_id
				FROM
					PPass.dbo.purchase_visit_allocation_his AS pvah2
					INNER JOIN PPass.dbo.purchase_visit_allocation pva2 ON pvah2.purchase_visit_allocation_id = pva2.purchase_visit_allocation_id
					INNER JOIN PPass.dbo.purchase_visit_allocation_link pval2 ON pva2.purchase_visit_allocation_grp_id = pval2.purchase_visit_allocation_grp_id
					LEFT OUTER JOIN PPass.dbo.source_visit_allocation_mem_gue_link salg ON pva2.source_visit_allocation_id = salg.guest_source_visit_allocation_id
				WHERE
						EXISTS (
							SELECT
								1
							FROM
								##temptable temp2
							WHERE
								temp2.purchase_no = pval2.purchase_no
						)
					AND pvah2.isdeleted = 0
					AND pva2.visitor_type_id = 7
					AND salg.guest_source_visit_allocation_id is NULL
				GROUP BY
					pvah2.purchase_visit_allocation_id
			),
			derived_visit_allocation AS (
				SELECT
					pva.visit_count_from,
					pva.visit_count_to,
					pva.visit_validity_type_id,
					CASE
						WHEN pva.visit_count_to = 9999
							THEN 9999
						WHEN pva.visit_count_from = 0
							THEN	(pva.visit_count_to - pva.visit_count_from)
						ELSE (pva.visit_count_to - pva.visit_count_from) + 1
					END AS allocated_visit_count,
					ISNULL(used_visit_allocations.used_visit_count, 0) AS used_visit_count,
					pur.purchase_no
				FROM
					PPass.dbo.purchase pur
					INNER JOIN PPass.dbo.purchase_visit_allocation_link pval ON pval.purchase_no = pur.purchase_no
					INNER JOIN PPass.dbo.purchase_visit_allocation_grp pvag ON pvag.purchase_visit_allocation_grp_id = pval.purchase_visit_allocation_grp_id
					INNER JOIN PPass.dbo.purchase_visit_allocation pva ON pva.purchase_visit_allocation_grp_id = pvag.purchase_visit_allocation_grp_id
					AND pva.charge_owner_id = 21
					AND pva.visitor_type_id = 7
					AND pva.visit_allocation_type_id NOT IN (3,4)
					AND pur.isDeleted = 0
					LEFT JOIN used_visit_allocations ON pva.purchase_visit_allocation_id = used_visit_allocations.purchase_visit_allocation_id
               	WHERE
						(
							(	pva.valid_from &lt;= getdate()
								AND pva.valid_to &gt;= getdate()
							)
							OR pva.visit_validity_type_id = 2
						)
			),
			calculated_visit_allocation AS
			(
				SELECT
					CASE WHEN derived_visit_allocation.visit_count_to = 9999 THEN
						9999
					ELSE
						CASE WHEN derived_visit_allocation.visit_validity_type_id = 2 THEN
							CASE
								WHEN derived_visit_allocation.visit_count_to = 9999
									THEN 9999
								WHEN derived_visit_allocation.visit_count_from = 0
									THEN	(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from)
								ELSE
									(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from) + 1
							END
						ELSE
							(derived_visit_allocation.allocated_visit_count - derived_visit_allocation.used_visit_count)
						END
					END AS visit_number,
					derived_visit_allocation.used_visit_count AS used_visit_number,
					derived_visit_allocation.purchase_no
				FROM derived_visit_allocation
			)

			UPDATE
				##temptable
			SET
				remaining_MGU_PP_count = calculated_visit_allocation.visit_number
			FROM
				##temptable
				INNER JOIN calculated_visit_allocation ON ##temptable.purchase_no = calculated_visit_allocation.purchase_no
		/* OFFERMGUCPAYLIST */
;WITH used_visit_allocations AS (
            	SELECT
					COUNT(1) AS used_visit_count,
					pvah2.purchase_visit_allocation_id
				FROM
					PPass.dbo.purchase_visit_allocation_his AS pvah2
					INNER JOIN PPass.dbo.purchase_visit_allocation pva2 ON pvah2.purchase_visit_allocation_id = pva2.purchase_visit_allocation_id
					INNER JOIN PPass.dbo.purchase_visit_allocation_link pval2 ON pva2.purchase_visit_allocation_grp_id = pval2.purchase_visit_allocation_grp_id
					LEFT OUTER JOIN PPass.dbo.source_visit_allocation_mem_gue_link salg ON pva2.source_visit_allocation_id = salg.guest_source_visit_allocation_id
				WHERE
						EXISTS (
							SELECT
								1
							FROM
								##temptable temp2
							WHERE
								temp2.purchase_no = pval2.purchase_no
						)
					AND pvah2.isdeleted = 0
					AND pva2.visitor_type_id = 7
					AND salg.guest_source_visit_allocation_id is NULL
				GROUP BY
					pvah2.purchase_visit_allocation_id
			),
			derived_visit_allocation AS (
				SELECT
					pva.visit_count_from,
					pva.visit_count_to,
					pva.visit_validity_type_id,
					CASE
						WHEN pva.visit_count_to = 9999
							THEN 9999
						WHEN pva.visit_count_from = 0
							THEN	(pva.visit_count_to - pva.visit_count_from)
						ELSE (pva.visit_count_to - pva.visit_count_from) + 1
					END AS allocated_visit_count,
					ISNULL(used_visit_allocations.used_visit_count, 0) AS used_visit_count,
					pur.purchase_no
				FROM
					PPass.dbo.purchase pur
					INNER JOIN PPass.dbo.purchase_visit_allocation_link pval ON pval.purchase_no = pur.purchase_no
					INNER JOIN PPass.dbo.purchase_visit_allocation_grp pvag ON pvag.purchase_visit_allocation_grp_id = pval.purchase_visit_allocation_grp_id
					INNER JOIN PPass.dbo.purchase_visit_allocation pva ON pva.purchase_visit_allocation_grp_id = pvag.purchase_visit_allocation_grp_id
					AND pva.charge_owner_id = 22
					AND pva.visitor_type_id = 7
					AND pva.visit_allocation_type_id NOT IN (3,4)
					AND pur.isDeleted = 0
					LEFT JOIN used_visit_allocations ON pva.purchase_visit_allocation_id = used_visit_allocations.purchase_visit_allocation_id
               	WHERE
						(
							(	pva.valid_from &lt;= getdate()
								AND pva.valid_to &gt;= getdate()
							)
							OR pva.visit_validity_type_id = 2
						)
			),
			calculated_visit_allocation AS
			(
				SELECT
					CASE WHEN derived_visit_allocation.visit_count_to = 9999 THEN
						9999
					ELSE
						CASE WHEN derived_visit_allocation.visit_validity_type_id = 2 THEN
							CASE
								WHEN derived_visit_allocation.visit_count_to = 9999
									THEN 9999
								WHEN derived_visit_allocation.visit_count_from = 0
									THEN	(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from)
								ELSE
									(derived_visit_allocation.visit_count_to - derived_visit_allocation.visit_count_from) + 1
							END
						ELSE
							(derived_visit_allocation.allocated_visit_count - derived_visit_allocation.used_visit_count)
						END
					END AS visit_number,
					derived_visit_allocation.used_visit_count AS used_visit_number,
					derived_visit_allocation.purchase_no
				FROM derived_visit_allocation
			)

			UPDATE
				##temptable
			SET
				remaining_MGU_CLI_count = calculated_visit_allocation.visit_number
			FROM
				##temptable
				INNER JOIN calculated_visit_allocation ON ##temptable.purchase_no = calculated_visit_allocation.purchase_no
		/* OFFERMGUCPAYLIST2 */
;WITH used_visit_allocations AS (
            	SELECT
					COUNT(1) AS used_visit_count,
					pvah2.purchase_visit_allocation_id
				FROM
					PPass.dbo.purchase_visit_allocation_his AS pvah2
					INNER JOIN PPass.dbo.purchase_visit_allocation pva2 ON pvah2.purchase_visit_allocation_id = pva2.purchase_visit_allocation_id
					INNER JOIN PPass.dbo.purchase_visit_allocation_link pval2 ON pva2.purchase_visit_allocation_grp_id = pval2.purchase_visit_allocation_grp_id
					LEFT OUTER JOIN PPass.dbo.source_visit_allocation_mem_gue_link salg ON pva2.source_visit_allocation_id = salg.guest_source_visit_allocation_id
				WHERE
						EXISTS (
							SELECT
								1
							FROM
								##temptable temp2
							WHERE
								temp2.purchase_no = pval2.purchase_no
						)
					AND pvah2.isdeleted = 0
					AND pva2.visitor_type_id = 7
					AND salg.guest_source_visit_allocation_id is NULL
				GROUP BY
					pvah2.purchase_visit_allocation_id
			),
			derived_visit_allocation AS (
				SELECT
					pva.visit_count_from,
					pva.visit_count_to,
					pva.visit_validity_type_id,
					CASE
						WHEN pva.visit_count_to = 9999
							THEN 9999
						WHEN pva.visit_count_from = 0
							THEN	(pva.visit_count_to - pva.visit_count_from)
						ELSE (pva.visit_count_to - pva.visit_count_from) + 1
					END AS allocated_visit_count,
					ISNULL(used_visit_allocations.used_visit_count, 0) AS used_visit_count,
					pur.purchase_no
				FROM
					PPass.dbo.purchase pur
					INNER JOIN PPass.dbo.purchase_visit_allocation_link pval ON pval.purchase_no = pur.purchase_no
					INNER JOIN PPass.dbo.purchase_visit_allocation_grp pvag ON pvag.purchase_visit_allocation_grp_id = pval.purchase_visit_allocation_grp_id
					INNER JOIN PPass.dbo.purchase_visit_allocation pva ON pva.purchase_visit_allocation_grp_id = pvag.purchase_visit_allocation_grp_id
					AND pva.charge_owner_id = 25
					AND pva.visitor_type_id = 7
					AND pva.visit_allocation_type_id NOT IN (3,4